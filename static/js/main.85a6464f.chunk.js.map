{"version":3,"sources":["app.jsx","common.jsx","components/Ajax/index.jsx","pages/form/login.jsx","pages/form/register.jsx","utils/index.jsx","pages/manager/userTable.jsx","components/BaseForm/index.jsx","components/BaseTable/index.jsx","pages/manager/orderTable.jsx","components/StepForm/index.jsx","pages/ad/index.jsx","components/Header/index.jsx","components/Footer/index.jsx","config/menuConfig.jsx","components/NavLeft/index.jsx","mainpage.jsx","pages/home/index.jsx","pages/nomatch/index.jsx","router.jsx","index.jsx"],"names":["App","react_default","a","createElement","className","this","props","children","Component","Common","Ajax","ajax","method","url","data","baseURL","timeout","arguments","length","undefined","Promise","resolve","reject","axios","params","then","response","catch","message","error","FormItem","Form","Item","FormLogin","post","formData","handleSubmit","_this","form","getFieldsValue","validateFields","err","values","getFieldDecorator","formItemLayout","labelCol","xs","sm","wrapperCol","card","title","es_form","layout","Object","assign","label","initialValue","rules","pattern","RegExp","required","input","placeholder","prefix","icon","type","style","marginLeft","marginRight","width","es_button","onClick","React","create","RadioGroup","Radio","Group","FormRegister","passwordValidator","rule","value","callback","pwd","password","console","log","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","info","file","status","originFileObj","imageUrl","setState","userImg","loading","componentDidMount","offsetLayout","span","offset","register_FormItem","min","max","validator","es_radio","valuePropName","es_checkbox","href","Option","Select","goToUrl","p","window","location","concat","split","selectTag","arr","items","forEach","item","position","indexOf","push","splice","pagination","onChange","current","parseInt","page","pageSize","page_size","total","showTotal","getOptionList","options","id","key","name","FilterForm","render","userTable_FormItem","es_select","userTable_Option","display","es_switch","checkedChildren","unCheckedChildren","checked","changeGlobalFilter","margin","ruleInfo","changeFilterRules","role","userTable","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","request","componentDidUpdate","state","globalFilter","filterForm","resetFields","filterRules","prevState","dataSource","allSource","filter","changeTableType","selectedRowKeys","selectedItems","tableType","defaultFilterRules","list","Button","roleMap","1","2","3","statusMap","badge","text","columns","dataIndex","sorter","b","sortOrder","modal","visibleModal","visible","onCancel","footer","userTable_UserForm","userInfo","wrappedComponentRef","inst","userForm","userTable_FilterForm","marginTop","defaultChecked","disabled","Modal","confirm","content","JSON","stringify","onOk","toConsumableArray","warning","table","size","bordered","filters","order","rowSelection","onRow","selectedItem","onMouseEnter","onDoubleClick","email","UserForm","userTable_RadioGroup","BaseForm","initFormList","formList","formItemList","i","field","switchFunc","BaseForm_FormItem","date_picker","showTime","format","colon","fieldsValue","submitFunc","ETable","onRowClick","record","index","selectedIds","updateSelectedItem","selectKey","onSelectChange","selectedRows","map","onSelectAll","selected","changeRows","getOptions","name_list","用户名","手机号","onSelect","row_selection","components_BaseForm","BaseTable_ETable","sex","4","5","StepForm","react_router_dom","react_router","path","exact","Info","Confirm","refreshData","FormInfo","success","_this3","StepForm_FormItem","FormConfirm","_this4","_this5","alt","src","adTable","componentWillMount","changeFormKey","formKey","Math","random","toString","substr","isInitial","SortOrder","match","afterClose","changeModalKey","StepForm_StepForm","changeMormKey","to","Header","isLogin","sysTime","userName","setInterval","time","checkTime","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","formateDate","getTime","row","col","float","Footer","menuList","SubMenu","Menu","NavLeft","renderMenu","menu","menuTreeNode","MenuConfig","mode","MainPage","src_components_Header","NavLeft_NavLeft","Footer_Footer","Home","class","BizCharts","height","day","scale","range","forceFit","crosshairs","shape","stroke","lineWidth","NoMatch","textAlign","fontSize","IRouter","app_App","component","Login","Register","common_Common","mainpage_MainPage","UserTable","OrderTable","Nomatch","ReactDOM","router_IRouter","document","getElementById"],"mappings":"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","file":"static/js/main.85a6464f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                {this.props.children}\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\n\nexport default class Common extends Component {\n  render() {\n    return (\n      <div>\n        {\n          this.props.children\n        }\n      </div>\n    )\n  }\n}","import axios from 'axios'\nimport { message } from 'antd';\nexport default class Ajax {\n    static ajax = (\n\tmethod,\n\turl,\n\tdata,\n\tbaseURL,\n\ttimeout = 5000,\n\t) => new Promise((resolve, reject) => axios(\n\t\t\tmethod === 'get'? {\n\t\t\t\tmethod,\n\t\t\t\turl,\n                params: data,\n\t\t\t\tbaseURL,\n\t\t\t\ttimeout,\n\t\t\t}: {\n\t\t\t\tmethod,\n\t\t\t\turl,\n\t\t\t\tdata,\n\t\t\t\tbaseURL,\n\t\t\t\ttimeout,\n\t\t\t\t}\n\t\t\t\t// response 是http请求的响应 response.data 可以拿到业务层的数据\n\t\t\t\t).then(response => resolve(response.data)).catch(() => message.error(\"请求发送失败\")))\n}\n","import React from \"react\";\nimport { Button, Card, Form, Icon, Input, message } from \"antd\";\nimport Ajax from '../../components/Ajax'\n\nconst FormItem = Form.Item;\nclass FormLogin extends React.Component {\n\n  post = (formData) => {\n    Ajax.ajax(\n      'post',\n      '/user-login',\n      formData,\n      'http://192.168.0.105:8080',\n    )\n      .then(() => { }).catch(() => { })\n  }\n\n  handleSubmit = () => {//绑定提交事件进行校验\n    let formData = this.props.form.getFieldsValue();// 可以(获取表单中)object对象\n    this.props.form.validateFields((err, values) => {\n      if (!err) {// ${}  是变量\n        this.post(formData)\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: 24,\n        sm: 4\n      },\n      wrapperCol: {\n        xs: 24,\n        sm: 12\n      }\n    };\n    return (\n      <div>\n        <Card title=\"登录\"\n        >\n          <Form\n            layout=\"horizontal\"\n          >\n            <FormItem label=\"手机号\" {...formItemLayout}>\n              {\n                getFieldDecorator('phone', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      pattern: new RegExp('^\\\\d+$', 'g'),\n                      message: '手机号码必须为字母'\n                    },\n                    {\n                      required: true,\n                      message: '手机号不能为空'\n                    },\n                  ]\n                })(\n                  <Input placeholder=\"请输入手机号码\" />\n                )\n              }\n            </FormItem>\n            <FormItem\n              label=\"密码\"\n              {...formItemLayout}\n            >\n              {\n                getFieldDecorator('password', {\n                  initialValue: '',\n                  rules: [{\n                    required: true,\n                    message: '密码不能为空'\n                  }]\n                })(\n                  <Input prefix={<Icon type=\"lock\" />} type=\"password\" placeholder=\"请输入密码\" />\n                )\n              }\n\n            </FormItem>\n            <FormItem\n              style={{\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                width: 200,\n              }}\n            >\n              <Button type=\"primary\" onClick={this.handleSubmit}>登录</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      </div >\n    )\n  }\n}\n\nexport default Form.create()(FormLogin);","import React from 'react';\nimport {\n  Card,\n  Form,\n  Button,\n  Input,\n  Radio,\n  Checkbox,\n  message,\n} from \"antd\";\nimport Ajax from '../../components/Ajax'\nimport '../../style/common.scss'\n\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\n\nclass FormRegister extends React.Component {\n\n  post = (formData) => {\n    Ajax.ajax(\n      'post',\n      '/user-register',\n      formData,\n      'http://192.168.0.105:8080',\n    )\n      .then(() => { }).catch(() => { })\n  }\n\n  passwordValidator = (rule, value, callback) => {\n    var pwd = this.props.form.getFieldsValue().password\n    console.log(rule, value, pwd)\n    if (value && value !== pwd) {\n      callback('密码输入不一致！')\n    }\n    callback()\n  }\n\n  handleSubmit = () => {\n    let formData = this.props.form.getFieldsValue();// 可以(获取表单中)object对象\n    this.post(formData)\n\n\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n\n  handleChange = (info) => {\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n        userImg: imageUrl,\n        loading: false,\n      }));\n    }\n  };\n\n  componentDidMount = () => {\n\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: 24,\n        sm: 4\n      },\n      wrapperCol: {\n        xs: 24,\n        sm: 12\n      }\n    };\n    const offsetLayout = {\n      wrapperCol: {\n        xs: 24,\n        sm: {\n          span: 12,\n          offset: 4\n        }\n      }\n    };\n\n\n    return (\n      <div>\n        <Card title=\"注册\">\n          <Form layout=\"horizontal\">\n            <FormItem label=\"用户名\" {...formItemLayout}>\n              {\n                getFieldDecorator('userName', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '用户名不能为空'\n                    },\n                    {\n                      min: 5, max: 10,\n                      message: '长度不在范围内'\n                    },\n                    {\n                      pattern: new RegExp('^\\\\w+$', 'g'),\n                      message: '用户名必须为字母或数字'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入用户名\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"密码\" {...formItemLayout}>\n              {\n                getFieldDecorator('password', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '密码不能为空'\n                    },\n                  ]\n\n                })(\n                  <Input placeholder=\"请输入密码\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"确认密码\" {...formItemLayout}>\n              {\n                getFieldDecorator('passwordcomfire', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '请再次输入密码',\n                    },\n                    {\n                      validator: this.passwordValidator,\n                    }\n                  ],\n                },\n                )(\n                  <Input placeholder=\"请输入密码\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"用户角色\" {...formItemLayout}>\n              {\n                getFieldDecorator('userType', {\n                  initialValue: \"0\",\n                  rules: [{\n                    required: true,\n                    message: '用户角色必选'\n                  },\n                  ]\n                }\n                )(\n                  <RadioGroup>\n                    <Radio value={0}>普通用户</Radio>\n                    <Radio value={1}>商户</Radio>\n                  </RadioGroup>\n                )\n              }\n            </FormItem>\n            <FormItem label=\"手机号\" {...formItemLayout}>\n              {\n                getFieldDecorator('phone', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '手机号不能为空'\n                    },\n                  ]\n                })(\n                  <Input placeholder=\"请输入手机号码\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"邮箱地址\" {...formItemLayout}>\n              {\n                getFieldDecorator('email', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '邮箱地址不能为空'\n                    },\n                    {\n                      pattern: new RegExp(/^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/),\n                      message: '请输入正确的邮箱地址'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入邮箱地址\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"身份证号\" {...formItemLayout}>\n              {\n                getFieldDecorator('idCard', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '需填写身份证'\n                    },\n                    {\n                      pattern: new RegExp(/^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/),\n                      message: '请输入正确的身法证号'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入身份证号\" />\n                )\n              }\n            </FormItem>\n            <FormItem {...offsetLayout}>\n              {\n                getFieldDecorator('register', {\n                  valuePropName: 'checked',\n                  initialValue: true,\n                })(\n                  <Checkbox>我已阅读过<button className=\"link-button\" href=\"#\" >协议</button></Checkbox>\n                )\n              }\n            </FormItem>\n            <FormItem {...offsetLayout}>\n              <Button type=\"primary\" onClick={this.handleSubmit}>注册</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default Form.create()(FormRegister);","import React from 'react'\nimport { Select } from 'antd'\nconst Option = Select.Option\n\nexport const formateDate = (time) => {\n  const checkTime = (time) => {\n    return time < 10 ? \"0\" + time : time\n  }\n  if (!time) return '';\n  let date = new Date(time);\n  return date.getFullYear() + '-' + checkTime(date.getMonth() + 1) +\n    '-' + checkTime(date.getDate()) + ' ' +\n    checkTime(date.getHours()) + \":\" + checkTime(date.getMinutes()) + \":\" + checkTime(date.getSeconds());\n}\n\nexport const goToUrl = p =>\n  window.location.href = `${window.location.href.split('#')[0]}#${p}`\n\nexport const selectTag = (arr, items) => {\n  // 非幂等\n  items.forEach(item => {\n    let position = arr.indexOf(item)\n    if (position < 0) {\n      arr.push(item)\n    } else {\n      arr.splice(position, 1)\n    }\n  });\n  return arr\n}\n\nexport const removeFromArray = (arr, items) => {\n  // 非幂等\n  items.forEach(item => {\n    let position = arr.indexOf(item)\n    if (position >= 0) {\n      arr.splice(position, 1)\n    }\n  });\n  return arr\n}\n\nexport const pagination = (data, callback) => ({\n  onChange: current => callback(current),\n  current: parseInt(data.page),\n  pageSize: parseInt(data.page_size),\n  total: parseInt(data.total),\n  showTotal: () => (`共${data.total}条数据`),\n})\n\n\nexport const getOptionList = data => {\n  let options = []\n  if (!data) {\n    return options\n  }\n  data.forEach(item => {\n    options.push(\n      <Option value={item.id} key={item.id}>\n        {item.name}\n      </Option>\n    )\n  }\n  )\n  return options\n}","import React from 'react';\nimport { Input, Radio, Card, Table, Form, Modal, Button, message, Badge, Select, Switch } from 'antd';\nimport Ajax from '../../components/Ajax'\nimport { pagination, selectTag } from '../../utils/index'\nimport '../../style/common.scss'\n\nconst FormItem = Form.Item\nconst Option = Select.Option\nconst RadioGroup = Radio.Group\n\n// child component FilterFrom\nclass FilterForm extends React.Component {\n\n  render = () => {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form layout=\"inline\">\n        <FormItem label=\"角色\">\n          {\n            getFieldDecorator('role',\n              {\n                initialValue: \"\"\n              }\n            )(\n              <Select\n                style={{ width: 100 }}\n              >\n                <Option value=''>全部</Option>\n                <Option value={1}>管理员</Option>\n                <Option value={2}>商户</Option>\n                <Option value={3}>普通用户</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem label=\"状态\">\n          {\n            getFieldDecorator('status',\n              {\n                initialValue: \"\"\n              }\n            )(\n              <Select\n                style={{ width: 100 }}\n              >\n                <Option value='' >全部</Option>\n                <Option value={1}>已审批</Option>\n                {/* <Option value=\"1\">已审批</Option> */}\n                <Option value={2}>未审批</Option>\n                <Option value={3}>冻结中</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem>\n          <div style={{ display: \"inline-block\" }}>\n            全局过滤\n          <Switch\n              checkedChildren=\"开\"\n              unCheckedChildren=\"关\"\n              onClick={(checked) => this.props.changeGlobalFilter(checked)}\n            />\n          </div>\n          <Button\n            type=\"primary\"\n            style={{ margin: '0 20px' }}\n            onClick={() => {\n              let ruleInfo = this.props.form.getFieldsValue()//object对象,包含表单中所有信息\n              // 根据filterFrom提交的内容构建过滤规则\n              let rules = item => (\n                ((!ruleInfo.status) || (item.status === ruleInfo.status))\n                &&\n                ((!ruleInfo.role) || (item.role === ruleInfo.role))\n              )\n              this.props.changeFilterRules(rules)\n            }}\n          >筛选结果\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nFilterForm = Form.create({})(FilterForm);\n\nexport default class userTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visibleModal: null,\n      loading: true,\n      tableType: \"radio\",\n      dataSource: [],\n      allSource: [],\n      selectedRowKeys: [],\n      selectedItems: [],\n      pagination: {},\n      sortOrder: false,\n      globalFilter: false,\n      defaultFilterRules: () => true,\n    }\n    this.page = 1\n    this.filterRules = this.state.defaultFilterRules\n  }\n\n  componentDidMount = () => {\n    this.request()\n  }\n  componentDidUpdate = () => {\n    if (!this.state.globalFilter) {\n      this.filterForm.props.form.resetFields()\n    }\n  }\n\n  changeFilterRules = rules => {\n    this.filterRules = rules\n    this.setState(prevState => ({ dataSource: prevState.allSource.filter(this.filterRules) }))\n  }\n\n  changeGlobalFilter = checked => {\n    this.setState(\n      () => ({\n        globalFilter: checked,\n      })\n    )\n  }\n\n  changeTableType = checked => {\n    this.setState(\n      () => ({\n        selectedRowKeys: [],\n        selectedItems: [],\n        tableType: checked ? \"checkbox\" : \"radio\",\n      })\n    )\n  }\n\n  request = () => {\n    Ajax.ajax(\n      'get',\n      '/v1/users',\n      { page: this.page },\n      'https://mook.sunlin.fun/mock/9',\n    )\n      .then(\n        data => {\n          if (!this.state.globalFilter) {\n            this.filterRules = this.state.defaultFilterRules\n          }\n          this.setState(\n            () => (\n              {\n                allSource: data.list,\n                dataSource: data.list.filter(this.filterRules),\n                loading: false,\n                pagination: pagination(data, (current) => {\n                  this.page = current\n                  if (!this.state.globalFilter) {\n                    // 翻页时将子组件标记重置\n                    this.filterForm.props.form.resetFields()\n                  }\n                  this.request()\n                }),\n              }\n            )\n          )\n        })\n      .catch(\n        () => message.error(\"数据渲染失败\")\n      )\n  }\n\n\n\n  render = () => {\n    const ButtonGroup = Button.Group\n    const roleMap = {\n      1: \"管理员\",\n      2: \"商户\",\n      3: \"普通用户\",\n    }\n    const statusMap = {\n      1: <Badge status=\"success\" text=\"已审批\" />,\n      2: <Badge status=\"default\" text=\"未审批\" />,\n      3: <Badge status=\"error\" text=\"冻结中\" />,\n    }\n    const columns = [\n      {\n        title: 'id',\n        key: 'id',\n        width: 80,\n        dataIndex: 'id',\n        sorter: (a, b) => {\n          return a.id - b.id\n        },\n        sortOrder: this.state.sortOrder,\n        // 横向滚动头部锁定\n        // fixed: 'left',\n      },\n      {\n        title: '用户名',\n        key: 'name',\n        width: 80,\n        dataIndex: 'name',\n        // fixed: 'left',\n      },\n      {\n        title: '邮箱',\n        key: 'email',\n        width: 80,\n        dataIndex: 'email'\n      },\n      {\n        title: '角色',\n        key: 'role',\n        width: 80,\n        dataIndex: 'role',\n        render: (text) => {\n          return roleMap[text]\n        }\n      },\n      {\n        title: '状态',\n        key: 'status',\n        width: 80,\n        dataIndex: 'status',\n        render: (text) => {\n          return statusMap[text]\n        }\n      },\n      // 行内操作按钮\n      // {\n      //   title: 'operation',\n      //   key: 'operation',\n      //   width: 80,\n      //   render: (text, item, index, ) => {\n      //     return (\n      //       <div>\n      //         <Button\n      //           className=\"link-button\"\n      //           icon='edit'\n      //           type=\"primary\"\n      //           onClick={\n      //             () => {\n      //               Modal.confirm({\n      //                 title: 'edit',\n      //                 content: JSON.stringify(item),\n      //                 onOk: (callback = () => {\n      //                   message.info('修改成功')\n      //                 },\n      //                 ) => {\n      //                   message.warning('这里改写成向后端发送验证的流程// TODO')\n      //                   callback()\n      //                   if (this.state.tableType === \"checkbox\") {\n      //                     this.setState((prevState) => ({\n      //                       selectedItems: selectTag([...prevState.selectedItems], [item]),\n      //                       selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n      //                     }))\n      //                   }\n      //                 },\n      //                 onCancel: () => {\n      //                   if (this.state.tableType === \"checkbox\") {\n      //                     this.setState((prevState) => ({\n      //                       selectedItems: selectTag([...prevState.selectedItems], [item]),\n      //                       selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n      //                     }))\n      //                   }\n      //                 }\n      //               },\n      //               )\n      //             }\n      //           }\n      //         >\n      //           编辑\n      //         </Button>\n      //         <Button\n      //           className=\"link-button\"\n      //           type=\"danger\"\n      //           icon='delete'\n      //           onClick={\n      //             () => {\n      //               Modal.confirm({\n      //                 title: 'delete',\n      //                 content: JSON.stringify(item),\n      //                 onOk: (callback = () => {\n      //                   message.info('删除成功')\n      //                   this.setState((prevState) => ({\n      //                     dataSource: removeFromArray([...prevState.dataSource], [item]),\n      //                     selectedItems: removeFromArray([...prevState.selectedItems], [item]),\n      //                     selectedRowKeys: removeFromArray([...prevState.selectedRowKeys], [item.key])\n      //                   }))\n      //                 },\n      //                 ) => {\n      //                   message.warning('这里改写成向后端发送验证的流程// TODO')\n      //                   callback()\n      //                 },\n      //                 onCancel: () => {\n      //                   if (this.state.tableType === \"checkbox\") {\n      //                     this.setState((prevState) => ({\n      //                       selectedItems: selectTag([...prevState.selectedItems], [item]),\n      //                       selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n      //                     }))\n      //                   }\n      //                 }\n      //               }\n      //               )\n      //             }\n      //           }\n      //         >\n      //           删除\n      //         </Button>\n\n      //       </div>\n      //     )\n      //   }\n      // },\n    ];\n\n    return (\n      <div>\n        <Modal\n          visibleModal={this.state.visibleModal}\n          title={this.state.visibleModal}\n          visible={this.state.visibleModal !== null}\n          onCancel={() => {\n            this.setState(() => ({ visibleModal: null }))\n          }}\n          footer={null}\n        >\n          <UserForm\n            userInfo={this.state.selectedItems}\n            wrappedComponentRef={(inst) => this.userForm = inst}\n          />\n        </Modal>\n        <Card>\n          <FilterForm\n            changeFilterRules={this.changeFilterRules}\n            changeGlobalFilter={this.changeGlobalFilter}\n            // 将子组件实例关联到父组件属性上, 方便调用子组件成员变量和函数\n            wrappedComponentRef={(inst) => { this.filterForm = inst }} />\n        </Card>\n        <Card\n          className=\"operate-wrap\"\n          style={{\n            marginTop: '10px',\n          }}>\n          多选模式\n             <Switch\n            checkedChildren=\"开\"\n            unCheckedChildren=\"关\"\n            defaultChecked={this.state.tableType === \"checkbox\"}\n            onClick={(checked) => this.changeTableType(checked)}\n          />\n          <Button\n            icon='edit'\n            type=\"primary\"\n            disabled={this.state.selectedItems.length > 1}\n            onClick={\n              () => {\n                if (this.state.selectedItems.length < 1) return\n                this.setState(() => ({ visibleModal: 'edit' }))\n              }\n            }\n          >\n            编辑\n              </Button>\n          <Button\n            type=\"danger\"\n            icon=\"delete\"\n            onClick={\n              () => {\n                if (this.state.selectedItems.length < 1) return\n                Modal.confirm({\n                  title: 'delete',\n                  content: JSON.stringify(this.state.selectedItems),\n                  onOk: (callback = () => {\n                    message.info('删除成功')\n                    this.setState((prevState) => ({\n                      dataSource: selectTag([...prevState.dataSource], prevState.selectedItems),\n                      selectedItems: [], selectedRowKeys: []\n                    }))\n                  },\n                  ) => {\n                    message.warning('这里改写成向后端发送验证的流程// TODO')\n                    callback()\n                  },\n                }\n                )\n              }\n            }\n          >\n            删除\n            </Button>\n        </Card>\n        <div className=\"content-wrap\">\n          <Table\n            size=\"small\"\n            bordered\n            loading={this.state.loading}\n            columns={columns}\n            // 关闭列表 滚动\n            // scroll={{ \n            //   x: 1440,\n            //   y: 580 \n            // }}  \n            dataSource={this.state.dataSource}\n            //若没有pagination属性，会根据antd中table的默认样式，每页显示10个数据，将这一次请求获得的数据进行纯前端样式的静态的分页，*点击切换页面按钮不会发送请求\n            // 若 有 pagination={false}的 设定，tab le不会分页， 此次请求获得的所有数据会全部显示出来\n            pagination={this.state.pagination}\n            // pagination={false}\n            // onChange 事件会自动传入这三个参数\n            onChange={(pagination, filters, sorter) => {\n              this.setState(() => ({\n                sortOrder: sorter.order\n              }))\n            }}\n            rowSelection={\n              {\n                type: this.state.tableType,\n                selectedRowKeys: this.state.selectedRowKeys,\n                // 点击行首小圆圈才能触发onChange事件\n                onChange: (selectedRowKeys, selectedItems) => {\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }),\n                  )\n                }\n              }\n            }\n            onRow={(selectedItem) => ({\n              onClick: () => {\n                if (this.state.tableType === 'checkbox') {\n                  let selectedItems = selectTag([...this.state.selectedItems], [selectedItem])\n                  let selectedRowKeys = selectTag([...this.state.selectedRowKeys], [selectedItem.key])\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }))\n                }\n                if (this.state.tableType === 'radio') {\n                  let selectedItems = [selectedItem]\n                  let selectedRowKeys = [selectedItem.key]\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }))\n                }\n              },\n              onMouseEnter: () => { },\n              onDoubleClick: () => {\n                Modal.confirm({\n                  title: '详细信息',\n                  content: `\n                  ${selectedItem.name}\n                  ${roleMap[selectedItem.role]}\n                  ${selectedItem.email}\n                `,\n                  onCancel: () => { },\n                  onOk: () => { },\n                })\n              },\n            }\n            )}\n          />\n        </div>\n      </div >\n    )\n  }\n}\n\nclass UserForm extends React.Component {\n\n  render() {\n    let userInfo = this.props.userInfo[0] || {};\n    const formItemLayout = {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      }\n    };\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form layout=\"horizontal\">\n        <FormItem label=\"用户名\" {...formItemLayout}>\n          {\n            getFieldDecorator('name', {\n              initialValue: userInfo.name\n            })(\n              <Input type=\"text\" placeholder=\"请输入用户名\" />\n            )\n          }\n        </FormItem>\n        <FormItem label=\"角色\" {...formItemLayout}>\n          {\n            getFieldDecorator('role', {\n              initialValue: userInfo.role\n            })(\n              <RadioGroup>\n                <Radio value={1}>用户</Radio>\n                <Radio value={2}>商户</Radio>\n              </RadioGroup>\n            )\n          }\n        </FormItem>\n        <FormItem label=\"状态\" {...formItemLayout}>\n          {\n            getFieldDecorator('status', {\n              initialValue: userInfo.status\n            })(\n              <Select>\n                <Option value={1}>已审核</Option>\n                <Option value={2}>未审核</Option>\n                <Option value={3}>已冻结</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem>\n          <Button\n            onClick={() => { message.warning('这里改写成向后端发送验证的流程// TODO') }}\n          >\n            提交\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nUserForm = Form.create({})(UserForm);","import React, { Component } from 'react'\nimport { Input, Select, Form, Checkbox, Switch, Button, DatePicker } from 'antd'\nimport { getOptionList } from '../../utils'\nconst FormItem = Form.Item\n\nclass BaseForm extends Component {\n\n    initFormList = () => {\n        const { getFieldDecorator } = this.props.form\n        const formList = this.props.formList\n        const formItemList = []\n        if (formList && formList.length > 0) {\n            formList.forEach(\n                (item, i) => {\n                    let label = item.label\n                    let field = item.field\n                    let initialValue = item.initialValue || \"\"\n                    let placeholder = item.placeholder\n                    let width = item.width\n                    let list = item.list\n                    let type = item.type\n                    let switchFunc = item.switchFunc\n                    if (type === \"SWITCH\") {\n                        formItemList.push(\n                            <FormItem label={label} key={field} >\n                                {\n                                    getFieldDecorator(field, {\n                                        initialValue,\n                                    })(\n                                        <Switch\n                                            checkedChildren=\"开\"\n                                            unCheckedChildren=\"关\"\n                                            onClick={(checked) => switchFunc(checked)}\n                                        />\n                                    )\n                                }\n                            </FormItem>\n                        )\n                    }\n                    if (type === \"INPUT\") {\n                        formItemList.push(\n                            <FormItem label={label} key={field} >\n                                {\n                                    getFieldDecorator(field, {\n                                        initialValue,\n                                    })(\n                                        <Input type=\"text\" placeholder={placeholder} />\n                                    )\n                                }\n                            </FormItem>\n                        )\n                    }\n                    if (type === \"CHECKBOX\") {\n                        formItemList.push(\n                            <FormItem label={label} key={field} >\n                                {\n                                    getFieldDecorator(field, {\n                                        valuePropName: 'checked',\n                                        initialValue,// true|false\n                                    })(\n                                        <Checkbox>\n                                            {label}\n                                        </Checkbox>\n                                    )\n                                }\n                            </FormItem>\n                        )\n                    }\n                    if (item.type === 'TIME') {\n                        formItemList.push(\n                            <FormItem label=\"时间\" key={field}>\n                                {\n                                    getFieldDecorator('begin_time')(\n                                        <DatePicker\n                                            showTime={true}\n                                            placeholder={placeholder}\n                                            format=\"YYYY-MM-DD HH:mm:ss\" />\n                                    )\n                                }\n                            </FormItem >\n                        )\n                        formItemList.push(\n                            <FormItem label=\"~\" colon={false} key={field}>\n                                {\n                                    getFieldDecorator('end_time')(\n                                        <DatePicker\n                                            showTime={true}\n                                            placeholder={placeholder}\n                                            format=\"YYYY-MM-DD HH:mm:ss\" />\n                                    )\n                                }\n                            </FormItem>\n                        )\n                    }\n                    if (type === \"SELECT\") {\n                        formItemList.push(\n                            <FormItem label={label} key={field} >\n                                {\n                                    getFieldDecorator(field, {\n                                        initialValue,\n                                    })(\n                                        <Select\n                                            style={{ width }}\n                                            placeholder={placeholder}\n                                        >\n                                            {getOptionList(list)}\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n                        )\n                    }\n                }\n            )\n        }\n        return formItemList\n    }\n\n    handleSubmit = () => {\n        let fieldsValue = this.props.form.getFieldsValue()\n        console.log(fieldsValue)\n        // 由父组件传入的函数处理表单提交的数据\n        this.props.submitFunc(fieldsValue)\n    }\n\n    render() {\n        return (\n            <Form layout={this.props.layout}>\n                {this.initFormList()}\n                <Button type=\"primary\" onClick={() => this.handleSubmit()}>\n                    Done\n                </Button>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(BaseForm)","import React from 'react'\nimport { Table } from 'antd'\nimport \"./index.scss\"\nexport default class ETable extends React.Component {\n\n    state = {}\n    //处理行点击事件\n    onRowClick = (record, index) => {\n        let rowSelection = this.props.rowSelection;\n        if (rowSelection === 'checkbox') {\n            let selectedRowKeys = this.props.selectedRowKeys;\n            let selectedIds = this.props.selectedIds;\n            let selectedItem = this.props.selectedItem || [];\n            if (selectedIds) {\n                const i = selectedIds.indexOf(record.id);\n                if (i === -1) {//避免重复添加\n                    selectedIds.push(record.id)\n                    selectedRowKeys.push(index);\n                    selectedItem.push(record);\n                } else {\n                    selectedIds.splice(i, 1);\n                    selectedRowKeys.splice(i, 1);\n                    selectedItem.splice(i, 1);\n                }\n            } else {\n                selectedIds = [record.id];\n                selectedRowKeys = [index]\n                selectedItem = [record];\n            }\n            this.props.updateSelectedItem(selectedRowKeys, selectedItem || {}, selectedIds);\n        } else {\n            let selectKey = [index];\n            const selectedRowKeys = this.props.selectedRowKeys;\n            if (selectedRowKeys && selectedRowKeys[0] === index) {\n                return;\n            }\n            this.props.updateSelectedItem(selectKey, record || {});\n        }\n    };\n\n    // 选择框变更\n    onSelectChange = (selectedRowKeys, selectedRows) => {\n        let rowSelection = this.props.rowSelection;\n        const selectedIds = [];\n        if (rowSelection === 'checkbox') {\n            selectedRows.map((item) => {\n                selectedIds.push(item.id);\n            });\n            this.setState({\n                selectedRowKeys,\n                selectedIds: selectedIds,\n                selectedItem: selectedRows[0]\n            });\n        }\n        this.props.updateSelectedItem(selectedRowKeys, selectedRows[0], selectedIds);\n    };\n\n    onSelectAll = (selected, selectedRows, changeRows) => {\n        let selectedIds = [];\n        let selectKey = [];\n        selectedRows.forEach((item, i) => {\n            selectedIds.push(item.id);\n            selectKey.push(i);\n        });\n        this.props.updateSelectedItem(selectKey, selectedRows[0] || {}, selectedIds);\n    }\n\n    getOptions = () => {\n        let p = this.props;\n        const name_list = {\n            \"用户名\": 170,\n            \"手机号\": 80,\n        };\n        if (p.columns && p.columns.length > 0) {\n            p.columns.forEach((item) => {\n                //开始/结束 时间\n                if (!item.title) {\n                    return\n                }\n                if (!item.width) {\n                    if (item.title.indexOf(\"时间\") > -1 && item.title.indexOf(\"持续时间\") < 0) {\n                        item.width = 132\n                    } else if (item.title.indexOf(\"图片\") > -1) {\n                        item.width = 86\n                    } else if (item.title.indexOf(\"权限\") > -1 || item.title.indexOf(\"负责城市\") > -1) {\n                        item.width = '40%';\n                        item.className = \"text-left\";\n                    } else {\n                        if (name_list[item.title]) {\n                            item.width = name_list[item.title];\n                        }\n                    }\n                }\n                item.bordered = true;\n            });\n        }\n        const { selectedRowKeys } = this.props;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n            onSelect: (record, selected, selectedRows) => {\n                console.log('...')\n            },\n            onSelectAll: this.onSelectAll\n        };\n        let row_selection = this.props.rowSelection;\n        // 当属性未false或者null时，说明没有单选或者复选列\n        if (row_selection === false || row_selection === null) {\n            row_selection = false;\n        } else if (row_selection === 'checkbox') {\n            //设置类型未复选框\n            rowSelection.type = 'checkbox';\n        } else {\n            //默认未单选\n            row_selection = 'radio';\n        }\n        return <Table\n            className=\"card-wrap page-table\"\n            bordered\n            {...this.props}\n            rowSelection={row_selection ? rowSelection : null}\n            onRow={(record, index) => ({\n                onClick: () => {\n                    if (!row_selection) {\n                        return;\n                    }\n                    this.onRowClick(record, index)\n                }\n            })}\n        />\n    };\n    render = () => {\n        return (\n            <div>\n                {this.getOptions()}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Card } from 'antd';\nimport BaseForm from '../../components/BaseForm'\nimport BaseTable from '../../components/BaseTable'\nimport '../../style/common.scss'\n\n\nexport default class userTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n        this.formList = [\n            {\n                type: 'SELECT',\n                label: '订单类型',\n                field: 'type',\n                placeholder: '全部',\n                initialValue: '',\n                width: 100,\n                list: [{ id: '', name: '全部' }, { id: '1', name: '买入' }, { id: '2', name: '卖出' }]\n            },\n            {\n                type: 'SELECT',\n                label: '订单状态',\n                field: 'status',\n                placeholder: '全部',\n                initialValue: '1',\n                width: 100,\n                list: [{ id: '0', name: '全部' }, { id: '1', name: '待付款' }, { id: '2', name: '待确认' }, { id: '3', name: '已完成' }, {id: '4', name: '已过期' }]\n            },\n        ];\n    }\n\n\n    render = () => {\n        const columns = [\n            {\n                title: 'id',\n                dataIndex: 'id'\n            }, {\n                title: '用户名',\n                dataIndex: 'username'\n            }, {\n                title: '性别',\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女';\n                }\n            }, {\n                title: '状态',\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': \"咸🐟一条\",\n                        '2': '风华浪子',\n                        '3': '北大才子一枚',\n                        '4': '百度FE',\n                        '5': '创业者',\n                    };\n                    return config[state];\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday'\n            }, {\n                title: '联系地址',\n                dataIndex: 'address'\n            }, {\n                title: '早起时间',\n                dataIndex: 'time'\n            },\n        ];\n\n        return (\n            <div>\n                <Card>\n                    <BaseForm layout=\"inline\" submitFunc={() => { }} switchFunc={() => { }} formList={this.formList} />\n                </Card>\n                <BaseTable\n                    columns={columns}\n                // updateSelectedItem={Utils.updateSelectedItem.bind(this)}\n                // selectedRowKeys={this.state.selectedRowKeys}\n                // selectedItem={this.state.selectedItem}\n                // dataSource={this.state.list}\n                // pagination={this.state.pagination}\n                />\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { goToUrl } from '../../utils'\nimport { Route, HashRouter, Switch } from 'react-router-dom'\nimport { Modal, Form, Card, Input, Icon, Button, message, } from 'antd';\nexport default class StepForm extends Component {\n    render() {\n        return (\n            <HashRouter>\n                <div>\n                    <Route path=\"/ads\"\n                        render={() =>\n                            <div>\n                                <Switch>\n                                    <Route\n                                        exact={true}\n                                        path=\"/ads/info\"\n                                        render={() =>\n                                            <Info\n                                                selectedItem={this.props.selectedItem}\n                                            />\n                                        }\n                                    />\n                                    <Route\n                                        path=\"/ads/confirm\"\n                                        render={() =>\n                                            <Confirm\n                                                refreshData={this.props.refreshData}\n                                            />}\n                                    />\n                                </Switch>\n                            </div>\n                        }\n                    />\n                </div>\n            </HashRouter >\n        );\n    }\n}\n\nconst FormItem = Form.Item;\nclass FormInfo extends React.Component {\n    handleSubmit = () => {//绑定提交事件进行校验\n        let userInfo = this.props.form.getFieldsValue();//object对象,包含表单中所有信息\n        // 校验表单输入是否符合规则， 不符合err会包含信息, 校验通过err为空\n        this.props.form.validateFields((err, values) => {\n            if (!err) {// ${}  是变量\n                message.success(\"正在下单\")\n                // 前端验证完毕, 向后端发起调用\n                goToUrl('/ads/confirm')\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: 24,\n                sm: 4\n            },\n            wrapperCol: {\n                xs: 24,\n                sm: 12\n            }\n        };\n        return (\n            <div>\n                <Card title=\"下单\"\n                >\n                    <Form\n                        layout=\"horizontal\"\n                    >\n                        <FormItem>\n                            <p>{JSON.stringify(this.props.selectedItem)}</p>\n                        </FormItem>\n                        <FormItem\n                            label=\"交易量\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('userName', {\n                                    initialValue: '',\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: '金额不能为空'\n                                        },\n                                        {\n                                            min: 1, max: 8,\n                                            message: '长度不在范围内'\n                                        },\n                                        {\n                                            pattern: new RegExp('^\\\\d+$', 'g'),\n                                            message: '必须为数字'\n                                        },\n                                    ]\n                                })(\n                                    <Input prefix={<Icon type=\"money-collect\" />} placeholder=\"请输入交易金额\" />\n                                )\n                            }\n                        </FormItem>\n                        <FormItem\n                            style={{\n                                marginLeft: 'auto',\n                                marginRight: 'auto',\n                                width: 200,\n                            }}\n                        >\n                            <Button\n                                type=\"primary\"\n                                onClick={\n                                    () => {\n                                        this.handleSubmit()\n                                    }\n                                }\n                            >\n                                确认订单\n            </Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n            </div >\n        )\n    }\n}\nconst Info = Form.create()(FormInfo)\n\nclass FormConfirm extends React.Component {\n    handleSubmit = () => {\n        goToUrl('/ads/index')\n        Modal.success({\n            title:\"请等待商户确认\"\n        })\n        this.props.refreshData()\n    }\n    render() {\n        return (\n            <Card title=\"付款码\">\n                <Form>\n                    <FormItem\n                    >\n                        <img alt=\"Cierra.jpg\" src=\"https://img.moegirl.org/common/thumb/a/aa/Cierra01.jpg/260px-Cierra01.jpg\" />\n                    </FormItem>\n                    <FormItem\n                        style={{\n                            margin: 'auto',\n                            width: 200,\n                        }}\n                    >\n                        <Button\n                            type=\"primary\"\n                            onClick={\n                                () => {\n                                    this.handleSubmit()\n                                }\n                            }\n                        >\n                            我已付款\n        </Button>\n                    </FormItem>\n                </Form>\n            </Card>\n        )\n    }\n}\n\nconst Confirm = Form.create()(FormConfirm)","import React, { Component } from 'react';\nimport {Card, Table, Modal, Button, message, Badge, } from 'antd';\nimport Ajax from '../../components/Ajax'\nimport { pagination, selectTag, goToUrl } from '../../utils'\nimport { NavLink } from 'react-router-dom'\nimport '../../style/common.scss'\nimport StepForm from '../../components/StepForm'\n\nexport default class adTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      tableType: 'radio',\n      dataSource: [],\n      allSource: [],\n      selectedRowKeys: [],\n      selectedItems: [],\n      pagination: {},\n      sortOrder: false,\n      isInitial: false,\n      globalFilter: false,\n      formKey: Math.random().toString(18).substr(2),\n      defaultFilterRules: () => true,\n    }\n    this.page = 1\n    this.userForm = undefined\n    this.filterRules = this.state.defaultFilterRules\n  }\n  componentWillMount = () => {\n    //  初始化载入ads页面时， 将路由跳转到ads/index\n    goToUrl('/ads/index')\n  }\n\n  componentDidMount = () => {\n    this.request()\n  }\n\n  changeFormKey = () => {\n    this.setState(() => ({\n      formKey: Math.random().toString(18).substr(2),\n    }\n    )\n    )\n  }\n\n  request = () => {\n    Ajax.ajax(\n      'get',\n      '/v1/users',\n      { page: this.page },\n      'https://mook.sunlin.fun/mock/9',\n    )\n      .then(\n        data => {\n          if (!this.state.globalFilter) {\n            this.filterRules = this.state.defaultFilterRules\n          }\n          this.setState(\n            () => (\n              {\n                allSource: data.list,\n                dataSource: data.list.filter(this.filterRules),\n                loading: false,\n\n                isInitial: true,\n                pagination: pagination(data, (current) => {\n                  this.page = current\n                  this.request()\n                })\n              }))\n        }).catch(() => message.error(\"数据渲染失败\")\n        )\n  }\n\n\n  render() {\n    const roleMap = {\n      1: \"管理员\",\n      2: \"商户\",\n      3: \"普通用户\",\n    }\n\n    const statusMap = {\n      1: <Badge status=\"success\" text=\"已审批\" />,\n      2: <Badge status=\"default\" text=\"未审批\" />,\n      3: <Badge status=\"error\" text=\"冻结中\" />,\n    }\n\n    const columns = [{\n      title: 'id',\n      key: 'id',\n      width: 80,\n      dataIndex: 'id',\n      sorter: (a, b) => a.id - b.id,\n      SortOrder: this.state.sortOrder,\n      // 横向滚动头部锁定\n      // fixed: 'left',\n    },\n    {\n      title: '用户名',\n      key: 'name',\n      width: 80,\n      dataIndex: 'name',\n      // fixed: 'left',\n    },\n    {\n      title: '邮箱',\n      key: 'email',\n      width: 80,\n      dataIndex: 'email'\n    },\n    {\n      title: '角色',\n      key: 'role',\n      width: 80,\n      dataIndex: 'role',\n      render: (text) => {\n        return roleMap[text]\n      },\n    },\n    {\n      title: '状态',\n      key: 'status',\n      width: 80,\n      dataIndex: 'status',\n      render: (text) => statusMap[text],\n    },\n    ]\n\n    return (\n      <div className=\"content-wrap\">\n        <Modal\n          visible={\n            this.state.selectedItems.length > 0\n            &&\n            (\n              this.props.match.params.page === \"info\"\n              ||\n              this.props.match.params.page === \"confirm\"\n            )\n          }\n          // 退出下单界面， 广告信息需要更新\n          onCancel={\n            () => {\n              message.warning('下单中断')\n              goToUrl('/ads/index')\n              this.request()\n            }\n          }\n          afterClose={this.changeModalKey}\n          footer={null}\n        >\n          <StepForm\n            key={this.state.formKey}\n            selectedItem={this.state.selectedItems[0]}\n            refreshData={this.request}\n            changeModalKey={this.changeMormKey} />\n        </Modal >\n        <Card>\n          <Button\n            type=\"primary\"\n          >\n            <NavLink to=\"/ads/info\">下单</NavLink>\n          </Button>\n        </Card>\n        <Table\n          size=\"small\"\n          bordered\n          loading={this.state.loading}\n          columns={columns}\n          // 关闭列表 滚动\n          // scroll={{ \n          //   x: 1440,\n          //   y: 580 \n          // }}  \n          dataSource={this.state.dataSource}\n          //若没有pagination属性，会根据antd中table的默认样式，每页显示10个数据，将这一次请求获得的数据进行纯前端样式的静态的分页，*点击切换页面按钮不会发送请求\n          // 若 有 pagination={false}的 设定，tab le不会分页， 此次请求获得的所有数据会全部显示出来\n          pagination={this.state.pagination}\n          // pagination={false}\n          // onChange 事件会自动传入这三个参数\n          onChange={(pagination, filters, sorter) => {\n            this.setState(() => ({\n              sortOrder: sorter.order\n            }))\n          }}\n          rowSelection={\n            {\n              type: this.state.tableType,\n              selectedRowKeys: this.state.selectedRowKeys,\n              // 点击行首小圆圈才能触发onChange事件\n              onChange: (selectedRowKeys, selectedItems) => {\n                this.setState(() => ({\n                  selectedRowKeys,\n                  selectedItems,\n                }),\n                )\n              }\n            }\n          }\n          onRow={(selectedItem) => ({\n            onClick: () => {\n              if (this.state.tableType === 'checkbox') {\n                let selectedItems = selectTag([...this.state.selectedItems], [selectedItem])\n                let selectedRowKeys = selectTag([...this.state.selectedRowKeys], [selectedItem.key])\n                this.setState(() => ({\n                  selectedRowKeys,\n                  selectedItems,\n                }))\n              }\n              if (this.state.tableType === 'radio') {\n                let selectedItems = [selectedItem]\n                let selectedRowKeys = [selectedItem.key]\n                this.setState(() => ({\n                  selectedRowKeys,\n                  selectedItems,\n                }))\n              }\n            },\n            onMouseEnter: () => { },\n            onDoubleClick: () => {\n              Modal.confirm({\n                title: '详细信息',\n                content: `\n                  ${selectedItem.name}\n                  ${roleMap[selectedItem.role]}\n                  ${selectedItem.email}\n                `,\n                onCancel: () => { },\n                onOk: () => { },\n              })\n            },\n          }\n          )}\n        />\n      </div>\n    )\n  }\n}\n","// src/components/Header/index.js\nimport React from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport \"./index.scss\";\nimport { formateDate, goToUrl } from \"../../utils\"; //导入公共机制\n// import axios from \"../axios\"; //引入axios组件\n\n\nclass Header extends React.Component {\n    //声明 state变量 在setState之前要声明变量\n    state = {\n        isLogin: false,\n        sysTime: undefined,\n        userName: \"用户007\",\n    };\n\n    componentWillMount() {\n        /*\n            创建定时器,每隔一秒获取时间\n            * 获取时间的方法\n            */\n        setInterval(() => {\n            // new Date();\n            let sysTime = formateDate(new Date().getTime());\n            this.setState({\n                sysTime\n            });\n        }, 1000);\n    }\n\n    render() {\n        return (\n            <div className=\"header\">\n                <Row className=\"header-top\">\n                    <Col span={6} className=\"logo\">\n                        <img src=\"/assets/logo-ant.svg\" alt=\"\" />\n                        <span>{this.state.sysTime}</span>\n                    </Col>\n                    <Col span={18} style={{ float: \"right\" }}>\n                        {\n                            this.state.isLogin ?\n                                <Button\n                                >{this.state.userName}\n                                </Button>\n                                :\n                                <span>\n                                    <Button\n                                        onClick={() => goToUrl('/login')}\n                                    >\n                                        登录\n                        </Button>\n                                    <Button\n                                        onClick={() => goToUrl('/register')}\n                                    >\n                                        注册\n                        </Button>\n                                </span>\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Header\n","import React from 'react';\nimport './index.scss'\nexport default class Footer extends React.Component{\n    render(){\n        return(\n            <div className=\"footer\">\n                版权所有：©2019\n            </div>\n        )\n    }\n}","const menuList = [\n    {\n        title: '首页',\n        key: '/home'\n    },\n    {\n        title: '管理',\n        key: '/manager',\n        children: [\n            {\n                title: '用户管理',\n                key: '/manager/users',\n            },\n            {\n                title: '订单管理',\n                key: '/manager/orders',\n            },\n            {\n                title: '广告管理',\n                key: '/manager/ads',\n            },\n\n        ]\n    },\n    {\n        title: '广告区',\n        key: '/ads/index',\n    },\n    {\n        title: '统计',\n        key: '/charts',\n    },\n];\nexport default menuList;\n","import React from \"react\";\nimport MenuConfig from \"./../../config/menuConfig\"; //导入menuConfig这个文件\nimport { Menu } from \"antd\"; //导入子组件菜单\nimport { NavLink } from 'react-router-dom'\nimport \"./index.scss\";\n\nconst SubMenu = Menu.SubMenu;\n\nexport default class NavLeft extends React.Component {\n  componentWillMount() {\n    //通过MenuConfig读取文件\n    //通过递归(遍历)实现菜单(是一个List)的渲染\n    const menuTreeNode = this.renderMenu(MenuConfig);\n    this.setState(\n      { menuTreeNode }\n    )\n    //通过setState存入state\n  }\n\n  //菜单渲染\n  renderMenu = data => {\n    return data.map(item => {\n      //如果item有子元素,遍历自己,再次调用,直到子节点加载完毕\n      if (item.children) {\n        return (\n          <SubMenu title={item.title} key={item.key}>\n            {this.renderMenu(item.children)}\n          </SubMenu>\n        );\n      }\n      return (\n        <Menu.Item title={undefined} key={item.key}>\n          <NavLink to={item.key}>{item.title}</NavLink>\n        </Menu.Item>\n      );\n    });\n  };\n\n  render() {\n    // var style = {\n    //     backgroundColor:'red'\n    // }\n    return (\n      <Menu mode=\"horizontal\">\n        {this.state.menuTreeNode}\n      </Menu>\n    );\n  }\n}","import React from \"react\";\nimport { Row } from \"antd\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport NavLeft from \"./components/NavLeft\";\nimport './style/common.scss'\nimport 'antd/dist/antd.css'\nexport default class MainPage extends React.Component {\n  render() {\n    return (\n      <Row className=\"container\">\n        <Row className=\"main\">\n          <Header />\n          <Row className=\"nav-left\">\n            <NavLeft />\n          </Row>\n          <Row className=\"content\">\n            {this.props.children}\n          </Row>\n          <Footer />\n        </Row>\n      </Row>\n    );\n  }\n}\n","import React from \"react\"\nimport { Card } from \"antd\"\nimport '../../style/common.scss'\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n} from \"bizcharts\";\n\nclass Home extends React.Component {\n  render() {\n    const data = [\n      {\n        day: \"1\",\n        value: 0.89\n      },\n      {\n        day: \"2\",\n        value: 0.99\n      },\n      {\n        day: \"3\",\n        value: 0.96\n      },\n      {\n        day: \"4\",\n        value: 1.12\n      },\n      {\n        day: \"5\",\n        value: 1.22\n      },\n      {\n        day: \"6\",\n        value: 0.88\n      },\n      {\n        day: \"7\",\n        value: 1.11\n      },\n      {\n        day: \"8\",\n        value: 1.09\n      },\n      {\n        day: \"9\",\n        value: 1.3\n      }\n    ];\n    const cols = {\n      value: {\n        min: 0\n      },\n      day: {\n        range: [0, 1]\n      }\n    };\n    return (\n      <div class=\"content-wrap\">\n        <Card title=\"走势\">\n          <Chart height={400} data={data} scale={cols} forceFit>\n            <Axis name=\"day\" />\n            <Axis name=\"value\" />\n            <Tooltip\n              crosshairs={{\n                type: \"y\"\n              }}\n            />\n            <Geom type=\"line\" position=\"day*value\" size={2} />\n            <Geom\n              type=\"point\"\n              position=\"day*value\"\n              size={4}\n              shape={\"circle\"}\n              style={{\n                stroke: \"#fff\",\n                lineWidth: 1\n              }}\n            />\n          </Chart>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nexport default class NoMatch extends React.Component {\n  render() {\n    return (\n      <div style={{ textAlign: \"center\", fontSize: \"24\" }}>404 No Found!!!</div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport App from \"./app\"\nimport Common from \"./common\"\nimport Login from \"./pages/form/login\";\nimport Register from \"./pages/form/register\";\nimport UserTable from \"./pages/manager/userTable\";\nimport OrderTable from \"./pages/manager/orderTable\";\nimport adTable from \"./pages/ad/\"\nimport MainPage from \"./mainpage\";\nimport Home from \"./pages/home\";\nimport Nomatch from \"./pages/nomatch\"\n\nexport default class IRouter extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <App>\n          <Switch>\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/common\"\n              render={() =>\n                <Common>\n                  <div>hello</div>\n                </Common>\n              }\n            />\n            <Route path=\"/\"\n              render={() =>\n                <MainPage>\n                  <div>\n                    <Switch>\n                      <Route exact={true} path=\"/\" >\n                        <Redirect to=\"/home/\" />\n                      </Route>\n                      <Route path=\"/home\" component={Home} />\n                      <Route path=\"/ads/:page\" component={adTable} />\n                      <Route path=\"/manager/users\" component={UserTable} />\n                      <Route path=\"/manager/orders\" component={OrderTable} />\n                    </Switch>\n                  </div>\n                </MainPage>\n              }\n            />\n            <Route component={Nomatch} />\n          </Switch>\n        </App>\n      </HashRouter >\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Router from \"./router\"\n\nReactDOM.render(\n  <Router />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}