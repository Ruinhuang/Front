{"version":3,"sources":["../../Front/src/pages/form/login.jsx","../../Front/src/pages/form/register.jsx","../../Front/src/components/Ajax/index.jsx","../../Front/src/utils/index.jsx","../../Front/src/pages/manager/userTable.jsx","../../Front/src/pages/ad/index.jsx","../../Front/src/components/Header/index.jsx","../../Front/src/components/Footer/index.jsx","../../Front/src/config/menuConfig.jsx","../../Front/src/components/NavLeft/index.jsx","../../Front/src/admin.jsx","../../Front/src/pages/home/index.jsx","../../Front/src/pages/nomatch/index.jsx","../../Front/src/router.jsx","../../Front/src/index.jsx"],"names":["FormItem","Form","Item","FormLogin","handleSubmit","userInfo","_this","props","form","getFieldsValue","validateFields","err","values","message","success","concat","userName","getFieldDecorator","this","formItemLayout","labelCol","xs","sm","wrapperCol","react_default","a","createElement","card","title","es_form","layout","Object","assign","label","initialValue","rules","required","min","max","pattern","RegExp","input","prefix","icon","type","placeholder","style","marginLeft","marginRight","width","es_button","onClick","React","Component","create","RadioGroup","Radio","Group","FormRegister","passwordValidator","rule","value","callback","pwd","password","console","log","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","info","file","status","originFileObj","imageUrl","setState","userImg","loading","offsetLayout","span","offset","register_FormItem","validator","es_radio","valuePropName","es_checkbox","className","href","Ajax","ajax","method","url","data","baseURL","timeout","arguments","length","undefined","Promise","resolve","reject","axios","params","then","response","res","code","successMsg","notification","error","errMsg","catch","Modal","content","selectTag","arr","items","forEach","item","position","indexOf","push","splice","removeFromArray","pagination","onChange","current","parseInt","page","pageSize","page_size","total","showTotal","Option","Select","FilterForm","componentWillUpdate","resetFields","render","userTable_FormItem","es_select","display","border","es_switch","checkedChildren","unCheckedChildren","checked","changeGlobalFilter","margin","ruleInfo","changeFilterRules","role","userTable","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","request","componentDidUpdate","state","globalFilter","filterRules","prevState","dataSource","allSource","filter","defaultFilterRules","list","ButtonGroup","Button","roleMap","1","2","3","statusMap","badge","text","columns","key","dataIndex","sorter","b","id","sortOrder","index","selectedItems","toConsumableArray","selectedRowKeys","confirm","JSON","stringify","onOk","warning","onCancel","userTable_FilterForm","marginTop","padding","float","target","table","size","bordered","filters","order","rowSelection","tableType","onRow","selectedItem","onMouseEnter","onDoubleClick","name","email","adTable","isInitial","Header","sysTime","setInterval","time","checkTime","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","formateDate","getTime","row","col","src","alt","Footer","menuList","children","SubMenu","Menu","NavLeft","renderMenu","map","menu","react_router_dom","to","menuTreeNode","MenuConfig","mode","Admin","src_components_Header","NavLeft_NavLeft","Footer_Footer","Home","NoMatch","textAlign","fontSize","IRouter","admin_Admin","react_router","exact","path","component","Login","Register","UserTable","Nomatch","ReactDOM","router_IRouter","document","getElementById"],"mappings":"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","file":"static/js/main.4c73134c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Card, Form, Icon, Input, message } from \"antd\";\n\nconst FormItem = Form.Item;\nclass FormLogin extends React.Component {\n  handleSubmit = () => {//绑定提交事件进行校验\n    let userInfo = this.props.form.getFieldsValue();//object对象,包含表单中所有信息\n    // 校验表单输入是否符合规则， 不符合err会包含信息, 校验通过err为空\n    this.props.form.validateFields((err, values) => {\n      if (!err) {// ${}  是变量\n        message.success(`${userInfo.userName} 欢迎登录`)\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: 24,\n        sm: 4\n      },\n      wrapperCol: {\n        xs: 24,\n        sm: 12\n      }\n    };\n    return (\n      <div>\n        <Card title=\"登录\"\n        >\n          <Form\n            layout=\"horizontal\"\n          >\n            <FormItem\n              label=\"帐号\"\n              {...formItemLayout}\n            >\n              {\n                getFieldDecorator('userName', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '用户名不能为空'\n                    },\n                    {\n                      min: 5, max: 10,\n                      message: '长度不在范围内'\n                    },\n                    {\n                      pattern: new RegExp('^\\\\w+$', 'g'),\n                      message: '用户名必须为字母或数字'\n                    }\n                  ]\n                })(\n                  <Input\n                    prefix={<Icon type=\"user\" />}\n                    placeholder=\"请输入用户名\"\n                  />\n                )\n              }\n\n            </FormItem>\n            <FormItem\n              label=\"密码\"\n              {...formItemLayout}\n            >\n              {\n                getFieldDecorator('userPwd', {\n                  initialValue: '',\n                  rules: [{\n                    required: true,\n                    message: '密码不能为空'\n                  }]\n                })(\n                  <Input prefix={<Icon type=\"lock\" />} type=\"password\" placeholder=\"请输入密码\" />\n                )\n              }\n\n            </FormItem>\n            <FormItem\n              style={{\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                width: 200,\n              }}\n            >\n              <Button type=\"primary\" onClick={this.handleSubmit}>登录</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      </div >\n    )\n  }\n}\n\nexport default Form.create()(FormLogin);","import React from 'react';\nimport {\n  Card,\n  Form,\n  Button,\n  Input,\n  Radio,\n  Checkbox,\n  message,\n} from \"antd\";\nimport '../../style/common.scss'\n\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\n\nclass FormRegister extends React.Component {\n\n\n  passwordValidator = (rule, value, callback) => {\n    var pwd = this.props.form.getFieldsValue().password\n    console.log(rule, value, pwd)\n    if (value && value !== pwd) {\n      callback('密码输入不一致！')\n    }\n    callback()\n  }\n\n  handleSubmit = () => {\n    let userInfo = this.props.form.getFieldsValue();// 可以(获取表单中)object对象\n    message.success(`${userInfo.userName} 密码为:${userInfo.password}`)\n\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n\n  handleChange = (info) => {\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n        userImg: imageUrl,\n        loading: false,\n      }));\n    }\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: 24,\n        sm: 4\n      },\n      wrapperCol: {\n        xs: 24,\n        sm: 12\n      }\n    };\n    const offsetLayout = {\n      wrapperCol: {\n        xs: 24,\n        sm: {\n          span: 12,\n          offset: 4\n        }\n      }\n    };\n\n\n    return (\n      <div>\n        <Card title=\"注册\">\n          <Form layout=\"horizontal\">\n            <FormItem label=\"用户名\" {...formItemLayout}>\n              {\n                getFieldDecorator('userName', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '用户名不能为空'\n                    },\n                    {\n                      min: 5, max: 10,\n                      message: '长度不在范围内'\n                    },\n                    {\n                      pattern: new RegExp('^\\\\w+$', 'g'),\n                      message: '用户名必须为字母或数字'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入用户名\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"密码\" {...formItemLayout}>\n              {\n                getFieldDecorator('password', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '密码不能为空'\n                    },\n                  ]\n\n                })(\n                  <Input placeholder=\"请输入密码\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"确认密码\" {...formItemLayout}>\n              {\n                getFieldDecorator('passwordcomfire', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '请再次输入密码',\n                    },\n                    {\n                      validator: this.passwordValidator,\n                    }\n                  ],\n                },\n                )(\n                  <Input placeholder=\"请输入密码\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"用户角色\" {...formItemLayout}>\n              {\n                getFieldDecorator('userType', {\n                  initialValue: \"0\",\n                  rules: [{\n                    required: true,\n                    message: '用户角色必选'\n                  },\n                  ]\n                }\n                )(\n                  <RadioGroup>\n                    <Radio value=\"0\">普通用户</Radio>\n                    <Radio value=\"1\">商户</Radio>\n                  </RadioGroup>\n                )\n              }\n            </FormItem>\n            <FormItem label=\"手机号\" {...formItemLayout}>\n              {\n                getFieldDecorator('phone', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '手机号不能为空'\n                    },\n                  ]\n                })(\n                  <Input placeholder=\"请输入手机号码\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"邮箱地址\" {...formItemLayout}>\n              {\n                getFieldDecorator('email', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '邮箱地址不能为空'\n                    },\n                    {\n                      pattern: new RegExp(/^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/),\n                      message: '请输入正确的邮箱地址'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入邮箱地址\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"身份证号\" {...formItemLayout}>\n              {\n                getFieldDecorator('idCard', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '需填写身份证'\n                    },\n                    {\n                      pattern: new RegExp(/^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/),\n                      message: '请输入正确的身法证号'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入身份证号\" />\n                )\n              }\n            </FormItem>\n            <FormItem {...offsetLayout}>\n              {\n                getFieldDecorator('register', {\n                  valuePropName: 'checked',\n                  initialValue: true,\n                })(\n                  <Checkbox>我已阅读过<button className=\"link-button\" href=\"#\" >协议</button></Checkbox>\n                )\n              }\n            </FormItem>\n            <FormItem {...offsetLayout}>\n              <Button type=\"primary\" onClick={this.handleSubmit}>注册</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default Form.create()(FormRegister);","import axios from 'axios'\nimport { notification, Modal, message } from 'antd';\nexport default class Ajax {\n    static ajax = (\n        method,\n        url,\n        data,\n        baseURL,\n        timeout = 5000, ) => (\n            new Promise(\n                (resolve, reject) => {\n                    // 默认写的是get 方法的封装\n                    axios({\n                        method,\n                        url,\n                        params: data,\n                        baseURL,\n                        timeout,\n                    }).then(response => {\n                        // HTTP状态码返回200说明HTTP协议层面被正常处理\n                        if (response.status === 200) {\n                            // response 是http请求的响应返回\n                            // res 是业务层面的数据\n                            let res = response.data\n                            // 业务状态码返回0说明业务层面请求被正常处理\n                            if (res.code === 0) {\n                                message.success(res.successMsg);\n                                resolve(res.data)\n                            } else {\n                                notification.error({\n                                    message: res.errMsg,\n                                })\n                            }\n                        } else {\n                            notification.error({\n                                message: response.status,\n                            })\n                            reject(response.data)\n                        }\n                    }\n                    ).catch(() => {\n                        Modal.error({\n                            title: \"请求发送失败\",\n                            content: \"网络状态异常\",\n                        })\n                    })\n                }\n            )\n        )\n}","export const formateDate = (time) => {\n  const checkTime = (time) => {\n    return time < 10 ? \"0\" + time : time\n  }\n  if (!time) return '';\n  let date = new Date(time);\n  return date.getFullYear() + '-' + checkTime(date.getMonth() + 1) +\n    '-' + checkTime(date.getDate()) + ' ' +\n    checkTime(date.getHours()) + \":\" + checkTime(date.getMinutes()) + \":\" + checkTime(date.getSeconds());\n}\n\nexport const selectTag = (arr, items) => {\n  // 非幂等\n  items.forEach(item => {\n    let position = arr.indexOf(item)\n    if (position < 0) {\n      arr.push(item)\n    } else {\n      arr.splice(position, 1)\n    }\n  });\n  return arr\n}\n\nexport const removeFromArray = (arr, items) => {\n  // 非幂等\n  items.forEach(item => {\n    let position = arr.indexOf(item)\n    if (position >= 0) {\n      arr.splice(position, 1)\n    }\n  });\n  return arr\n}\n\nexport const pagination = (data, callback) => ({\n  onChange: current => callback(current),\n  current: parseInt(data.page),\n  pageSize: parseInt(data.page_size),\n  total: parseInt(data.total),\n  showTotal: () => (`共${data.total}条数据`),\n})\n\n","import React from 'react';\nimport { Card, Table, Form, Modal, Button, message, Badge, Select, Switch } from 'antd';\nimport Ajax from '../../components/Ajax'\nimport { pagination, selectTag, removeFromArray } from '../../utils/index'\nimport '../../style/common.scss'\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n// child component FilterFrom\nclass FilterForm extends React.Component {\n  componentWillUpdate = () => {\n    if (this.props.resetFields)\n      this.props.form.resetFields()\n  }\n\n  render = () => {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form layout=\"inline\">\n        <FormItem label=\"角色\">\n          {\n            getFieldDecorator('role',\n              {\n                initialValue: \"\"\n              }\n            )(\n              <Select\n                style={{ width: 100 }}\n              >\n                <Option value=\"\">全部</Option>\n                <Option value=\"1\">管理员</Option>\n                <Option value=\"2\">商户</Option>\n                <Option value=\"3\">普通用户</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem label=\"状态\">\n          {\n            getFieldDecorator('status',\n              {\n                initialValue: \"\"\n              }\n            )(\n              <Select\n                style={{ width: 100 }}\n              >\n                <Option value=\"\">全部</Option>\n                <Option value=\"1\">已审批</Option>\n                <Option value=\"2\">未审批</Option>\n                <Option value=\"3\">冻结中</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem>\n          <div style={{ display: \"inline-block\", border: \"5px\" }}>\n            全局过滤\n          <Switch\n              checkedChildren=\"开\"\n              unCheckedChildren=\"关\"\n              onClick={(checked)=>this.props.changeGlobalFilter(checked)}\n            />\n          </div>\n          <Button\n            type=\"primary\"\n            style={{ margin: '0 20px' }}\n            onClick={() => {\n              let ruleInfo = this.props.form.getFieldsValue()//object对象,包含表单中所有信息\n              // 根据filterFrom提交的内容构建过滤规则\n              let rules = item => (((!ruleInfo.status) || (item.status === parseInt(ruleInfo.status))) && (((!ruleInfo.role) || (item.role === parseInt(ruleInfo.role)))))\n              this.props.changeFilterRules(rules)\n            }}\n          >过滤一下\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nFilterForm = Form.create({})(FilterForm);\n\nexport default class userTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      tableType: 'checkbox',\n      dataSource: [],\n      allSource: [],\n      selectedRowKeys: [],\n      selectedItems: [],\n      pagination: {},\n      sortOrder: false,\n      globalFilter: false,\n      defaultFilterRules: () => true,\n    }\n    this.page = 1\n    this.filterRules = this.state.defaultFilterRules\n  }\n\n  componentDidMount = () => {\n      this.request()\n  }\n  componentDidUpdate = () => {\n    if (!this.state.globalFilter) {\n      // 父组件更新后 将子组件props的reset标志关闭\n      this.resetFields = false\n    }\n  }\n\n  changeFilterRules = rules => {\n    this.filterRules = rules\n    this.setState(prevState => ({ dataSource: prevState.allSource.filter(this.filterRules) }))\n  }\n  \n  changeGlobalFilter = checked => {\n    this.setState(\n      ()=>({\n       globalFilter: checked, \n      })\n    )\n  }\n\n  request = () => {\n    Ajax.ajax(\n      'get',\n      '/v1/users',\n      { page: this.page },\n      'https://mook.sunlin.fun/mock/9',\n    )\n      .then(\n        data => {\n          if (!this.state.globalFilter) {\n            this.filterRules = this.state.defaultFilterRules\n          }\n          this.setState(\n            () => (\n              {\n                allSource: data.list,\n                dataSource: data.list.filter(this.filterRules),\n                loading: false,\n                pagination: pagination(data, (current) => {\n                  this.page = current\n                  if (!this.state.globalFilter) {\n                    // 翻页时将子组件标记重置\n                    this.resetFields = true\n                  }\n                  this.request()\n                }),\n              }\n            )\n          )\n        })\n      .catch(\n        () => message.error(\"数据渲染失败\")\n      )\n  }\n\n\n\n  render = () => {\n    const ButtonGroup = Button.Group\n    const roleMap = {\n      1: \"管理员\",\n      2: \"商户\",\n      3: \"普通用户\",\n    }\n    const statusMap = {\n      1: <Badge status=\"success\" text=\"已审批\" />,\n      2: <Badge status=\"default\" text=\"未审批\" />,\n      3: <Badge status=\"error\" text=\"冻结中\" />,\n    }\n    const columns = [\n      {\n        title: 'id',\n        key: 'id',\n        width: 80,\n        dataIndex: 'id',\n        sorter: (a, b) => {\n          return a.id - b.id\n        },\n        sortOrder: this.state.sortOrder,\n        // 横向滚动头部锁定\n        // fixed: 'left',\n      },\n      {\n        title: '用户名',\n        key: 'name',\n        width: 80,\n        dataIndex: 'name',\n        // fixed: 'left',\n      },\n      {\n        title: '邮箱',\n        key: 'email',\n        width: 80,\n        dataIndex: 'email'\n      },\n      {\n        title: '角色',\n        key: 'role',\n        width: 80,\n        dataIndex: 'role',\n        render: (text) => {\n          return roleMap[text]\n        }\n      },\n      {\n        title: '状态',\n        key: 'status',\n        width: 80,\n        dataIndex: 'status',\n        render: (text) => {\n          return statusMap[text]\n        }\n      },\n      {\n        title: 'operation',\n        key: 'operation',\n        width: 80,\n        render: (text, item, index, ) => {\n          return (\n            <div>\n              <Button\n                className=\"link-button\"\n                icon='edit'\n                type=\"primary\"\n                onClick={\n                  () => {\n                    this.setState((prevState) => ({\n                      selectedItems: selectTag([...prevState.selectedItems], [item]),\n                      selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n                    }))\n                    Modal.confirm({\n                      title: 'edit',\n                      content: JSON.stringify(item),\n                      onOk: (callback = () => {\n                        message.info('修改成功')\n                      },\n                      ) => {\n                        message.warning('这里改写成向后端发送验证的流程// TODO')\n                        callback()\n                        this.setState((prevState) => ({\n                          selectedItems: removeFromArray([...prevState.selectedItems], [item]),\n                          selectedRowKeys: removeFromArray([...prevState.selectedRowKeys], [item.key])\n                        }))\n                      },\n                      onCancel: () => {\n                        this.setState((prevState) => ({\n                          selectedItems: selectTag([...prevState.selectedItems], [item]),\n                          selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n                        }))\n                      }\n                    },\n                    )\n                  }\n                }\n              >\n                编辑\n              </Button>\n              <Button\n                className=\"link-button\"\n                type=\"danger\"\n                icon='delete'\n                onClick={\n                  () => {\n                    Modal.confirm({\n                      title: 'delete',\n                      content: JSON.stringify(item),\n                      onOk: (callback = () => {\n                        message.info('删除成功')\n                        this.setState((prevState) => ({\n                          dataSource: removeFromArray([...prevState.dataSource], [item]),\n                          selectedItems: removeFromArray([...prevState.selectedItems], [item]),\n                          selectedRowKeys: removeFromArray([...prevState.selectedRowKeys], [item.key])\n                        }))\n                      },\n                      ) => {\n                        message.warning('这里改写成向后端发送验证的流程// TODO')\n                        callback()\n                      },\n                      onCancel: () => {\n                        this.setState((prevState) => ({\n                          selectedItems: selectTag([...prevState.selectedItems], [item]),\n                          selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n                        }))\n                      }\n                    }\n                    )\n                  }\n                }\n              >\n                删除\n              </Button>\n\n            </div>\n          )\n        }\n      },\n    ];\n\n    return (\n      <div>\n        <Card>\n          <FilterForm changeFilterRules={this.changeFilterRules} changeGlobalFilter={this.changeGlobalFilter} resetFields={this.resetFields} />\n        </Card>\n        <Card style={{\n          marginTop: '10px',\n        }}>\n          <ButtonGroup style={{ padding: '0', float: 'right' }}>\n            <Button\n              type=\"primary\"\n              icon=\"plus\"\n              href=\"/#/register\"\n              target=\"_black\"\n            >\n              新增\n        </Button>\n            <Button\n              type=\"danger\"\n              icon=\"delete\"\n              onClick={\n                () => {\n                  if (this.state.selectedItems.length < 1) return\n                  Modal.confirm({\n                    title: 'delete',\n                    content: JSON.stringify(this.state.selectedItems),\n                    onOk: (callback = () => {\n                      message.info('删除成功')\n                      this.setState((prevState) => ({\n                        dataSource: selectTag([...prevState.dataSource], prevState.selectedItems),\n                        selectedItems: [], selectedRowKeys: []\n                      }))\n                    },\n                    ) => {\n                      message.warning('这里改写成向后端发送验证的流程// TODO')\n                      callback()\n                    },\n                  }\n                  )\n                }\n              }\n            >\n              批量删除\n            </Button>\n          </ButtonGroup>\n        </Card>\n        <div className=\"content-wrap\">\n          <Table\n            size=\"small\"\n            bordered\n            loading={this.state.loading}\n            columns={columns}\n            // 关闭列表 滚动\n            // scroll={{ \n            //   x: 1440,\n            //   y: 580 \n            // }}  \n            dataSource={this.state.dataSource}\n            //若没有pagination属性，会根据antd中table的默认样式，每页显示10个数据，将这一次请求获得的数据进行纯前端样式的静态的分页，*点击切换页面按钮不会发送请求\n            // 若 有 pagination={false}的 设定，tab le不会分页， 此次请求获得的所有数据会全部显示出来\n            pagination={this.state.pagination}\n            // pagination={false}\n            // onChange 事件会自动传入这三个参数\n            onChange={(pagination, filters, sorter) => {\n              this.setState(() => ({\n                sortOrder: sorter.order\n              }))\n            }}\n            rowSelection={\n              {\n                type: this.state.tableType,\n                selectedRowKeys: this.state.selectedRowKeys,\n                // 点击行首小圆圈才能触发onChange事件\n                onChange: (selectedRowKeys, selectedItems) => {\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }),\n                  )\n                }\n              }\n            }\n            onRow={(selectedItem) => ({\n              onClick: () => {\n                if (this.state.tableType === 'checkbox') {\n                  let selectedItems = selectTag([...this.state.selectedItems], [selectedItem])\n                  let selectedRowKeys = selectTag([...this.state.selectedRowKeys], [selectedItem.key])\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }))\n                }\n                if (this.state.tableType === 'radio') {\n                  let selectedItems = [selectedItem]\n                  let selectedRowKeys = [selectedItem.key]\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }))\n                }\n              },\n              onMouseEnter: () => { },\n              onDoubleClick: () => {\n                Modal.confirm({\n                  title: '详细信息',\n                  content: `\n                  ${selectedItem.name}\n                  ${roleMap[selectedItem.role]}\n                  ${selectedItem.email}\n                `,\n                  onCancel: () => { },\n                  onOk: () => { },\n                })\n              },\n            }\n            )}\n          />\n        </div>\n      </div >\n    )\n  }\n}","import React from 'react';\nimport { Table, Modal, Button, message, Badge,  } from 'antd';\nimport Ajax from '../../components/Ajax'\nimport { pagination, selectTag, removeFromArray } from '../../utils/index'\nimport '../../style/common.scss'\n\nexport default class adTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      tableType: 'checkbox',\n      dataSource: [],\n      allSource: [],\n      selectedRowKeys: [],\n      selectedItems: [],\n      pagination: {},\n      sortOrder: false,\n      isInitial: false,\n      globalFilter: false,\n      defaultFilterRules: () => true,\n    }\n    this.page = 1\n    this.filterRules = this.state.defaultFilterRules\n  }\n\n  componentDidMount = () => {\n      this.request()\n  }\n  request = () => {\n    Ajax.ajax(\n      'get',\n      '/v1/users',\n      { page: this.page },\n      'https://mook.sunlin.fun/mock/9',\n    )\n      .then(\n        data => {\n          if (!this.state.globalFilter) {\n            this.filterRules = this.state.defaultFilterRules\n          }\n          this.setState(\n            () => (\n              {\n                allSource: data.list,\n                dataSource: data.list.filter(this.filterRules),\n                loading: false,\n                isInitial: true,\n                pagination: pagination(data, (current) => {\n                  this.page = current\n                  if (!this.state.globalFilter) {\n                    // 翻页时将子组件标记重置\n                    this.resetFields = true\n                  }\n                  this.request()\n                }),\n              }\n            )\n          )\n        })\n      .catch(\n        () => message.error(\"数据渲染失败\")\n      )\n  }\n\n\n\n  render = () => {\n    const roleMap = {\n      1: \"管理员\",\n      2: \"商户\",\n      3: \"普通用户\",\n    }\n    const statusMap = {\n      1: <Badge status=\"success\" text=\"已审批\" />,\n      2: <Badge status=\"default\" text=\"未审批\" />,\n      3: <Badge status=\"error\" text=\"冻结中\" />,\n    }\n    const columns = [\n      {\n        title: 'id',\n        key: 'id',\n        width: 80,\n        dataIndex: 'id',\n        sorter: (a, b) => {\n          return a.id - b.id\n        },\n        sortOrder: this.state.sortOrder,\n        // 横向滚动头部锁定\n        // fixed: 'left',\n      },\n      {\n        title: '用户名',\n        key: 'name',\n        width: 80,\n        dataIndex: 'name',\n        // fixed: 'left',\n      },\n      {\n        title: '邮箱',\n        key: 'email',\n        width: 80,\n        dataIndex: 'email'\n      },\n      {\n        title: '角色',\n        key: 'role',\n        width: 80,\n        dataIndex: 'role',\n        render: (text) => {\n          return roleMap[text]\n        }\n      },\n      {\n        title: '状态',\n        key: 'status',\n        width: 80,\n        dataIndex: 'status',\n        render: (text) => {\n          return statusMap[text]\n        }\n      },\n      {\n        title: 'operation',\n        key: 'operation',\n        width: 80,\n        render: (text, item, index, ) => {\n          return (\n            <div>\n              <Button\n                className=\"link-button\"\n                onClick={\n                  () => {\n                    this.setState((prevState) => ({\n                      selectedItems: selectTag([...prevState.selectedItems], [item]),\n                      selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n                    }))\n                    Modal.confirm({\n                      title: 'edit',\n                      content: JSON.stringify(item),\n                      onOk: (callback = () => {\n                        message.info('下单成功')\n                      },\n                      ) => {\n                        message.warning('这里改写成向后端发送验证的流程// TODO')\n                        callback()\n                        this.setState((prevState) => ({\n                          selectedItems: removeFromArray([...prevState.selectedItems], [item]),\n                          selectedRowKeys: removeFromArray([...prevState.selectedRowKeys], [item.key])\n                        }))\n                      },\n                      onCancel: () => {\n                        this.setState((prevState) => ({\n                          selectedItems: selectTag([...prevState.selectedItems], [item]),\n                          selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n                        }))\n                      }\n                    },\n                    )\n                  }\n                }\n              >\n               下单 \n              </Button>\n            </div>\n          )\n        }\n      },\n    ];\n\n    return (\n      <div>\n\n        <div className=\"content-wrap\">\n          <Table\n            size=\"small\"\n            bordered\n            loading={this.state.loading}\n            columns={columns}\n            // 关闭列表 滚动\n            // scroll={{\n            //   x: 1440,\n            //   y: 580\n            // }}\n            dataSource={this.state.dataSource}\n            //若没有pagination属性，会根据antd中table的默认样式，每页显示10个数据，将这一次请求获得的数据进行纯前端样式的静态的分页，*点击切换页面按钮不会发送请求\n            // 若 有 pagination={false}的 设定，tab le不会分页， 此次请求获得的所有数据会全部显示出来\n            pagination={this.state.pagination}\n            // pagination={false}\n            // onChange 事件会自动传入这三个参数\n            onChange={(pagination, filters, sorter) => {\n              this.setState(() => ({\n                sortOrder: sorter.order\n              }))\n            }}\n            rowSelection={\n              {\n                type: this.state.tableType,\n                selectedRowKeys: this.state.selectedRowKeys,\n                // 点击行首小圆圈才能触发onChange事件\n                onChange: (selectedRowKeys, selectedItems) => {\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }),\n                  )\n                }\n              }\n            }\n            onRow={(selectedItem) => ({\n              onClick: () => {\n                if (this.state.tableType === 'checkbox') {\n                  let selectedItems = selectTag([...this.state.selectedItems], [selectedItem])\n                  let selectedRowKeys = selectTag([...this.state.selectedRowKeys], [selectedItem.key])\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }))\n                }\n                if (this.state.tableType === 'radio') {\n                  let selectedItems = [selectedItem]\n                  let selectedRowKeys = [selectedItem.key]\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }))\n                }\n              },\n              onMouseEnter: () => { },\n              onDoubleClick: () => {\n                Modal.confirm({\n                  title: '详细信息',\n                  content: `\n                  ${selectedItem.name}\n                  ${roleMap[selectedItem.role]}\n                  ${selectedItem.email}\n                `,\n                  onCancel: () => { },\n                  onOk: () => { },\n                })\n              },\n            }\n            )}\n          />\n        </div>\n      </div >\n    )\n  }\n}\n","// src/components/Header/index.js\nimport React from \"react\";\nimport { Row, Col } from \"antd\";\nimport \"./index.scss\";\nimport { formateDate } from \"../../utils\"; //导入公共机制\n// import axios from \"../axios\"; //引入axios组件\n\n\nclass Header extends React.Component {\n    //声明 state变量 在setState之前要声明变量\n    state = {\n        sysTime: undefined,\n        userName: \"testUser\",\n    };\n\n    componentWillMount() {\n        /*\n            创建定时器,每隔一秒获取时间\n            * 获取时间的方法\n            */\n        setInterval(() => {\n            // new Date();\n            let sysTime = formateDate(new Date().getTime());\n            this.setState({\n                sysTime\n            });\n        }, 1000);\n    }\n\n    render() {\n        return (\n            <div className=\"header\">\n                <Row className=\"header-top\">\n                    <Col span={6} className=\"logo\">\n                        <img src=\"/assets/logo-ant.svg\" alt=\"\" />\n                        <span>{this.state.sysTime}</span>\n                    </Col>\n                    <Col span={18}>\n                        <span>欢迎, {this.state.userName} </span>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Header\n","import React from 'react';\nimport './index.scss'\nexport default class Footer extends React.Component{\n    render(){\n        return(\n            <div className=\"footer\">\n                版权所有：©2019\n            </div>\n        )\n    }\n}","const menuList = [\n    {\n        title: '首页',\n        key: '/home'\n    },\n    {\n        title: '管理',\n        key: '/manager',\n        children: [\n            {\n                title: '用户管理',\n                key: '/manager/users',\n            },\n            {\n                title: '订单管理',\n                key: '/manager/orders',\n            },\n            {\n                title: '广告管理',\n                key: '/manager/ads',\n            },\n\n        ]\n    },\n    {\n        title: '广告区',\n        key: '/ads',\n    },\n    {\n        title: '统计',\n        key: '/charts',\n    },\n    {\n        title: '登录',\n        key: '/login',\n    },\n    {\n        title: '注册',\n        key: '/register',\n    },\n];\nexport default menuList;\n","import React from \"react\";\nimport MenuConfig from \"./../../config/menuConfig\"; //导入menuConfig这个文件\nimport { Menu } from \"antd\"; //导入子组件菜单\nimport { NavLink } from 'react-router-dom'\nimport \"./index.scss\";\n\nconst SubMenu = Menu.SubMenu;\n\nexport default class NavLeft extends React.Component {\n  componentWillMount() {\n    //通过MenuConfig读取文件\n    //通过递归(遍历)实现菜单(是一个List)的渲染\n    const menuTreeNode = this.renderMenu(MenuConfig);\n    this.setState(\n      { menuTreeNode }\n    )\n    //通过setState存入state\n  }\n\n  //菜单渲染\n  renderMenu = data => {\n    return data.map(item => {\n      //如果item有子元素,遍历自己,再次调用,直到子节点加载完毕\n      if (item.children) {\n        return (\n          <SubMenu title={item.title} key={item.key}>\n            {this.renderMenu(item.children)}\n          </SubMenu>\n        );\n      }\n      return (\n        <Menu.Item title={undefined} key={item.key}>\n          <NavLink to={item.key}>{item.title}</NavLink>\n        </Menu.Item>\n      );\n    });\n  };\n\n  render() {\n    // var style = {\n    //     backgroundColor:'red'\n    // }\n    return (\n      <Menu mode=\"horizontal\">\n        {this.state.menuTreeNode}\n      </Menu>\n    );\n  }\n}","import React from \"react\";\nimport { Row } from \"antd\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport NavLeft from \"./components/NavLeft\";\nimport './style/common.scss'\nimport 'antd/dist/antd.css'\nexport default class Admin extends React.Component {\n  render() {\n    return (\n      <Row className=\"container\">\n        <Row className=\"main\">\n          <Header />\n          <Row className=\"nav-left\">\n            <NavLeft />\n          </Row>\n          <Row className=\"content\">\n            {this.props.children}\n          </Row>\n          <Footer>Footer</Footer>\n        </Row>\n      </Row>\n    );\n  }\n}\n","import React from 'react'\nimport '../../style/common.scss'\nexport default class Home extends React.Component {\n   render(){\n       return (\n           <div className=\"home-wrap\">\n               欢迎\n           </div>\n       );\n   }\n}","import React from \"react\";\n\nexport default class NoMatch extends React.Component {\n  render() {\n    return (\n      <div style={{ textAlign: \"center\", fontSize: \"24\" }}>404 No Found!!!</div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Login from \"./pages/form/login\";\nimport Register from \"./pages/form/register\";\nimport UserTable from \"./pages/manager/userTable\";\nimport adTable from \"./pages/ad/\"\nimport Admin from \"./admin\";\nimport Home from \"./pages/home\";\nimport Nomatch from \"./pages/nomatch\"\n\nexport default class IRouter extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Admin>\n          <div>\n            <Switch>\n              <Route exact={true} path=\"/\" component={Home} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/register\" component={Register} />\n              <Route path=\"/home\" component={Home} />\n              <Route path=\"/ads\" component={adTable} />\n              <Route path=\"/manager/users\" component={UserTable} />\n              <Route component={Nomatch} />\n            </Switch>\n          </div>\n        </Admin>\n      </HashRouter >\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Router from \"./router\"\n\nReactDOM.render(\n  <Router />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}