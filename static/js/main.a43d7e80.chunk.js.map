{"version":3,"sources":["app.jsx","common.jsx","pages/form/login.jsx","pages/form/register.jsx","components/Ajax/index.jsx","utils/index.jsx","pages/manager/userTable.jsx","pages/ad/index.jsx","components/Header/index.jsx","components/Footer/index.jsx","config/menuConfig.jsx","components/NavLeft/index.jsx","admin.jsx","pages/home/index.jsx","pages/nomatch/index.jsx","router.jsx","index.jsx"],"names":["App","react_default","a","createElement","className","this","props","children","Component","Common","FormItem","Form","Item","FormLogin","handleSubmit","userInfo","_this","form","getFieldsValue","validateFields","err","values","message","success","concat","userName","getFieldDecorator","formItemLayout","labelCol","xs","sm","wrapperCol","card","title","es_form","layout","Object","assign","label","initialValue","rules","required","min","max","pattern","RegExp","input","prefix","icon","type","placeholder","style","marginLeft","marginRight","width","es_button","onClick","React","create","RadioGroup","Radio","Group","FormRegister","passwordValidator","rule","value","callback","pwd","password","console","log","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","info","file","status","originFileObj","imageUrl","setState","userImg","loading","offsetLayout","span","offset","register_FormItem","validator","es_radio","valuePropName","es_checkbox","href","Ajax","ajax","method","url","data","baseURL","timeout","arguments","length","undefined","Promise","resolve","reject","axios","params","then","response","res","code","successMsg","notification","error","errMsg","catch","Modal","content","selectTag","arr","items","forEach","item","position","indexOf","push","splice","removeFromArray","pagination","onChange","current","parseInt","page","pageSize","page_size","total","showTotal","Option","Select","FilterForm","render","userTable_FormItem","es_select","display","es_switch","checkedChildren","unCheckedChildren","checked","openGlobalFilter","margin","ruleInfo","changeFilterRules","role","userTable","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","request","componentDidUpdate","state","globalFilter","filterForm","resetFields","filterRules","prevState","dataSource","allSource","filter","defaultFilterRules","list","ButtonGroup","Button","roleMap","1","2","3","statusMap","badge","text","columns","key","dataIndex","sorter","b","id","sortOrder","index","selectedItems","toConsumableArray","selectedRowKeys","confirm","JSON","stringify","onOk","warning","onCancel","userTable_FilterForm","wrappedComponentRef","inst","marginTop","padding","float","target","table","size","bordered","filters","order","rowSelection","tableType","onRow","selectedItem","onMouseEnter","onDoubleClick","name","email","adTable","isInitial","Header","isLogin","sysTime","setInterval","time","checkTime","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","formateDate","getTime","row","col","src","alt","window","location","split","Footer","menuList","SubMenu","Menu","NavLeft","renderMenu","map","menu","react_router_dom","to","menuTreeNode","MenuConfig","mode","Admin","src_components_Header","NavLeft_NavLeft","Footer_Footer","Home","NoMatch","textAlign","fontSize","IRouter","app_App","react_router","exact","path","admin_Admin","component","UserTable","Login","Register","common_Common","Nomatch","ReactDOM","router_IRouter","document","getElementById"],"mappings":"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","file":"static/js/main.a43d7e80.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                {this.props.children}\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\n\nexport default class Common extends Component {\n  render() {\n    return (\n      <div>\n        {\n          this.props.children\n        }\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport { Button, Card, Form, Icon, Input, message } from \"antd\";\n\nconst FormItem = Form.Item;\nclass FormLogin extends React.Component {\n  handleSubmit = () => {//绑定提交事件进行校验\n    let userInfo = this.props.form.getFieldsValue();//object对象,包含表单中所有信息\n    // 校验表单输入是否符合规则， 不符合err会包含信息, 校验通过err为空\n    this.props.form.validateFields((err, values) => {\n      if (!err) {// ${}  是变量\n        message.success(`${userInfo.userName} 欢迎登录`)\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: 24,\n        sm: 4\n      },\n      wrapperCol: {\n        xs: 24,\n        sm: 12\n      }\n    };\n    return (\n      <div>\n        <Card title=\"登录\"\n        >\n          <Form\n            layout=\"horizontal\"\n          >\n            <FormItem\n              label=\"帐号\"\n              {...formItemLayout}\n            >\n              {\n                getFieldDecorator('userName', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '用户名不能为空'\n                    },\n                    {\n                      min: 5, max: 10,\n                      message: '长度不在范围内'\n                    },\n                    {\n                      pattern: new RegExp('^\\\\w+$', 'g'),\n                      message: '用户名必须为字母或数字'\n                    }\n                  ]\n                })(\n                  <Input\n                    prefix={<Icon type=\"user\" />}\n                    placeholder=\"请输入用户名\"\n                  />\n                )\n              }\n\n            </FormItem>\n            <FormItem\n              label=\"密码\"\n              {...formItemLayout}\n            >\n              {\n                getFieldDecorator('userPwd', {\n                  initialValue: '',\n                  rules: [{\n                    required: true,\n                    message: '密码不能为空'\n                  }]\n                })(\n                  <Input prefix={<Icon type=\"lock\" />} type=\"password\" placeholder=\"请输入密码\" />\n                )\n              }\n\n            </FormItem>\n            <FormItem\n              style={{\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                width: 200,\n              }}\n            >\n              <Button type=\"primary\" onClick={this.handleSubmit}>登录</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      </div >\n    )\n  }\n}\n\nexport default Form.create()(FormLogin);","import React from 'react';\nimport {\n  Card,\n  Form,\n  Button,\n  Input,\n  Radio,\n  Checkbox,\n  message,\n} from \"antd\";\nimport '../../style/common.scss'\n\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\n\nclass FormRegister extends React.Component {\n\n\n  passwordValidator = (rule, value, callback) => {\n    var pwd = this.props.form.getFieldsValue().password\n    console.log(rule, value, pwd)\n    if (value && value !== pwd) {\n      callback('密码输入不一致！')\n    }\n    callback()\n  }\n\n  handleSubmit = () => {\n    let userInfo = this.props.form.getFieldsValue();// 可以(获取表单中)object对象\n    message.success(`${userInfo.userName} 密码为:${userInfo.password}`)\n\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n\n  handleChange = (info) => {\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n        userImg: imageUrl,\n        loading: false,\n      }));\n    }\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: 24,\n        sm: 4\n      },\n      wrapperCol: {\n        xs: 24,\n        sm: 12\n      }\n    };\n    const offsetLayout = {\n      wrapperCol: {\n        xs: 24,\n        sm: {\n          span: 12,\n          offset: 4\n        }\n      }\n    };\n\n\n    return (\n      <div>\n        <Card title=\"注册\">\n          <Form layout=\"horizontal\">\n            <FormItem label=\"用户名\" {...formItemLayout}>\n              {\n                getFieldDecorator('userName', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '用户名不能为空'\n                    },\n                    {\n                      min: 5, max: 10,\n                      message: '长度不在范围内'\n                    },\n                    {\n                      pattern: new RegExp('^\\\\w+$', 'g'),\n                      message: '用户名必须为字母或数字'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入用户名\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"密码\" {...formItemLayout}>\n              {\n                getFieldDecorator('password', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '密码不能为空'\n                    },\n                  ]\n\n                })(\n                  <Input placeholder=\"请输入密码\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"确认密码\" {...formItemLayout}>\n              {\n                getFieldDecorator('passwordcomfire', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '请再次输入密码',\n                    },\n                    {\n                      validator: this.passwordValidator,\n                    }\n                  ],\n                },\n                )(\n                  <Input placeholder=\"请输入密码\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"用户角色\" {...formItemLayout}>\n              {\n                getFieldDecorator('userType', {\n                  initialValue: \"0\",\n                  rules: [{\n                    required: true,\n                    message: '用户角色必选'\n                  },\n                  ]\n                }\n                )(\n                  <RadioGroup>\n                    <Radio value=\"0\">普通用户</Radio>\n                    <Radio value=\"1\">商户</Radio>\n                  </RadioGroup>\n                )\n              }\n            </FormItem>\n            <FormItem label=\"手机号\" {...formItemLayout}>\n              {\n                getFieldDecorator('phone', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '手机号不能为空'\n                    },\n                  ]\n                })(\n                  <Input placeholder=\"请输入手机号码\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"邮箱地址\" {...formItemLayout}>\n              {\n                getFieldDecorator('email', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '邮箱地址不能为空'\n                    },\n                    {\n                      pattern: new RegExp(/^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/),\n                      message: '请输入正确的邮箱地址'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入邮箱地址\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"身份证号\" {...formItemLayout}>\n              {\n                getFieldDecorator('idCard', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '需填写身份证'\n                    },\n                    {\n                      pattern: new RegExp(/^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/),\n                      message: '请输入正确的身法证号'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入身份证号\" />\n                )\n              }\n            </FormItem>\n            <FormItem {...offsetLayout}>\n              {\n                getFieldDecorator('register', {\n                  valuePropName: 'checked',\n                  initialValue: true,\n                })(\n                  <Checkbox>我已阅读过<button className=\"link-button\" href=\"#\" >协议</button></Checkbox>\n                )\n              }\n            </FormItem>\n            <FormItem {...offsetLayout}>\n              <Button type=\"primary\" onClick={this.handleSubmit}>注册</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default Form.create()(FormRegister);","import axios from 'axios'\nimport { notification, Modal, message } from 'antd';\nexport default class Ajax {\n    static ajax = (\n        method,\n        url,\n        data,\n        baseURL,\n        timeout = 5000, ) => (\n            new Promise(\n                (resolve, reject) => {\n                    // 默认写的是get 方法的封装\n                    axios({\n                        method,\n                        url,\n                        params: data,\n                        baseURL,\n                        timeout,\n                    }).then(response => {\n                        // HTTP状态码返回200说明HTTP协议层面被正常处理\n                        if (response.status === 200) {\n                            // response 是http请求的响应返回\n                            // res 是业务层面的数据\n                            let res = response.data\n                            // 业务状态码返回0说明业务层面请求被正常处理\n                            if (res.code === 0) {\n                                message.success(res.successMsg);\n                                resolve(res.data)\n                            } else {\n                                notification.error({\n                                    message: res.errMsg,\n                                })\n                            }\n                        } else {\n                            notification.error({\n                                message: response.status,\n                            })\n                            reject(response.data)\n                        }\n                    }\n                    ).catch(() => {\n                        Modal.error({\n                            title: \"请求发送失败\",\n                            content: \"网络状态异常\",\n                        })\n                    })\n                }\n            )\n        )\n}","export const formateDate = (time) => {\n  const checkTime = (time) => {\n    return time < 10 ? \"0\" + time : time\n  }\n  if (!time) return '';\n  let date = new Date(time);\n  return date.getFullYear() + '-' + checkTime(date.getMonth() + 1) +\n    '-' + checkTime(date.getDate()) + ' ' +\n    checkTime(date.getHours()) + \":\" + checkTime(date.getMinutes()) + \":\" + checkTime(date.getSeconds());\n}\n\nexport const selectTag = (arr, items) => {\n  // 非幂等\n  items.forEach(item => {\n    let position = arr.indexOf(item)\n    if (position < 0) {\n      arr.push(item)\n    } else {\n      arr.splice(position, 1)\n    }\n  });\n  return arr\n}\n\nexport const removeFromArray = (arr, items) => {\n  // 非幂等\n  items.forEach(item => {\n    let position = arr.indexOf(item)\n    if (position >= 0) {\n      arr.splice(position, 1)\n    }\n  });\n  return arr\n}\n\nexport const pagination = (data, callback) => ({\n  onChange: current => callback(current),\n  current: parseInt(data.page),\n  pageSize: parseInt(data.page_size),\n  total: parseInt(data.total),\n  showTotal: () => (`共${data.total}条数据`),\n})\n\n","import React from 'react';\nimport { Card, Table, Form, Modal, Button, message, Badge, Select, Switch } from 'antd';\nimport Ajax from '../../components/Ajax'\nimport { pagination, selectTag, removeFromArray } from '../../utils/index'\nimport '../../style/common.scss'\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n// child component FilterFrom\nclass FilterForm extends React.Component {\n\n  render = () => {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form layout=\"inline\">\n        <FormItem label=\"角色\">\n          {\n            getFieldDecorator('role',\n              {\n                initialValue: \"\"\n              }\n            )(\n              <Select\n                style={{ width: 100 }}\n              >\n                <Option value=\"\">全部</Option>\n                <Option value=\"1\">管理员</Option>\n                <Option value=\"2\">商户</Option>\n                <Option value=\"3\">普通用户</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem label=\"状态\">\n          {\n            getFieldDecorator('status',\n              {\n                initialValue: \"\"\n              }\n            )(\n              <Select\n                style={{ width: 100 }}\n              >\n                <Option value=\"\">全部</Option>\n                <Option value=\"1\">已审批</Option>\n                <Option value=\"2\">未审批</Option>\n                <Option value=\"3\">冻结中</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem>\n          <div style={{ display: \"inline-block\" }}>\n            全局过滤\n          <Switch\n              checkedChildren=\"开\"\n              unCheckedChildren=\"关\"\n              onClick={(checked) => this.props.openGlobalFilter(checked)}\n            />\n          </div>\n          <Button\n            type=\"primary\"\n            style={{ margin: '0 20px' }}\n            onClick={() => {\n              let ruleInfo = this.props.form.getFieldsValue()//object对象,包含表单中所有信息\n              // 根据filterFrom提交的内容构建过滤规则\n              let rules = item => (((!ruleInfo.status) || (item.status === parseInt(ruleInfo.status))) && (((!ruleInfo.role) || (item.role === parseInt(ruleInfo.role)))))\n              this.props.changeFilterRules(rules)\n            }}\n          >过滤一下\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nFilterForm = Form.create({})(FilterForm);\n\nexport default class userTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      tableType: 'checkbox',\n      dataSource: [],\n      allSource: [],\n      selectedRowKeys: [],\n      selectedItems: [],\n      pagination: {},\n      sortOrder: false,\n      globalFilter: false,\n      defaultFilterRules: () => true,\n    }\n    this.page = 1\n    this.filterRules = this.state.defaultFilterRules\n  }\n\n  componentDidMount = () => {\n    this.request()\n  }\n  componentDidUpdate = () => {\n    if (!this.state.globalFilter) {\n      this.filterForm.props.form.resetFields()\n    }\n  }\n\n  changeFilterRules = rules => {\n    this.filterRules = rules\n    this.setState(prevState => ({ dataSource: prevState.allSource.filter(this.filterRules) }))\n  }\n\n  openGlobalFilter = checked => {\n    this.setState(\n      () => ({\n        globalFilter: checked,\n      })\n    )\n  }\n\n  request = () => {\n    Ajax.ajax(\n      'get',\n      '/v1/users',\n      { page: this.page },\n      'https://mook.sunlin.fun/mock/9',\n    )\n      .then(\n        data => {\n          if (!this.state.globalFilter) {\n            this.filterRules = this.state.defaultFilterRules\n          }\n          this.setState(\n            () => (\n              {\n                allSource: data.list,\n                dataSource: data.list.filter(this.filterRules),\n                loading: false,\n                pagination: pagination(data, (current) => {\n                  this.page = current\n                  if (!this.state.globalFilter) {\n                    // 翻页时将子组件标记重置\n                    this.filterForm.props.form.resetFields()\n                  }\n                  this.request()\n                }),\n              }\n            )\n          )\n        })\n      .catch(\n        () => message.error(\"数据渲染失败\")\n      )\n  }\n\n\n\n  render = () => {\n    const ButtonGroup = Button.Group\n    const roleMap = {\n      1: \"管理员\",\n      2: \"商户\",\n      3: \"普通用户\",\n    }\n    const statusMap = {\n      1: <Badge status=\"success\" text=\"已审批\" />,\n      2: <Badge status=\"default\" text=\"未审批\" />,\n      3: <Badge status=\"error\" text=\"冻结中\" />,\n    }\n    const columns = [\n      {\n        title: 'id',\n        key: 'id',\n        width: 80,\n        dataIndex: 'id',\n        sorter: (a, b) => {\n          return a.id - b.id\n        },\n        sortOrder: this.state.sortOrder,\n        // 横向滚动头部锁定\n        // fixed: 'left',\n      },\n      {\n        title: '用户名',\n        key: 'name',\n        width: 80,\n        dataIndex: 'name',\n        // fixed: 'left',\n      },\n      {\n        title: '邮箱',\n        key: 'email',\n        width: 80,\n        dataIndex: 'email'\n      },\n      {\n        title: '角色',\n        key: 'role',\n        width: 80,\n        dataIndex: 'role',\n        render: (text) => {\n          return roleMap[text]\n        }\n      },\n      {\n        title: '状态',\n        key: 'status',\n        width: 80,\n        dataIndex: 'status',\n        render: (text) => {\n          return statusMap[text]\n        }\n      },\n      {\n        title: 'operation',\n        key: 'operation',\n        width: 80,\n        render: (text, item, index, ) => {\n          return (\n            <div>\n              <Button\n                className=\"link-button\"\n                icon='edit'\n                type=\"primary\"\n                onClick={\n                  () => {\n                    this.setState((prevState) => ({\n                      selectedItems: selectTag([...prevState.selectedItems], [item]),\n                      selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n                    }))\n                    Modal.confirm({\n                      title: 'edit',\n                      content: JSON.stringify(item),\n                      onOk: (callback = () => {\n                        message.info('修改成功')\n                      },\n                      ) => {\n                        message.warning('这里改写成向后端发送验证的流程// TODO')\n                        callback()\n                        this.setState((prevState) => ({\n                          selectedItems: removeFromArray([...prevState.selectedItems], [item]),\n                          selectedRowKeys: removeFromArray([...prevState.selectedRowKeys], [item.key])\n                        }))\n                      },\n                      onCancel: () => {\n                        this.setState((prevState) => ({\n                          selectedItems: selectTag([...prevState.selectedItems], [item]),\n                          selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n                        }))\n                      }\n                    },\n                    )\n                  }\n                }\n              >\n                编辑\n              </Button>\n              <Button\n                className=\"link-button\"\n                type=\"danger\"\n                icon='delete'\n                onClick={\n                  () => {\n                    Modal.confirm({\n                      title: 'delete',\n                      content: JSON.stringify(item),\n                      onOk: (callback = () => {\n                        message.info('删除成功')\n                        this.setState((prevState) => ({\n                          dataSource: removeFromArray([...prevState.dataSource], [item]),\n                          selectedItems: removeFromArray([...prevState.selectedItems], [item]),\n                          selectedRowKeys: removeFromArray([...prevState.selectedRowKeys], [item.key])\n                        }))\n                      },\n                      ) => {\n                        message.warning('这里改写成向后端发送验证的流程// TODO')\n                        callback()\n                      },\n                      onCancel: () => {\n                        this.setState((prevState) => ({\n                          selectedItems: selectTag([...prevState.selectedItems], [item]),\n                          selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n                        }))\n                      }\n                    }\n                    )\n                  }\n                }\n              >\n                删除\n              </Button>\n\n            </div>\n          )\n        }\n      },\n    ];\n\n    return (\n      <div>\n        <Card>\n          <FilterForm\n            changeFilterRules={this.changeFilterRules}\n            openGlobalFilter={this.openGlobalFilter}\n            // 将子组件实例关联到父组件属性上, 方便调用子组件成员变量和函数\n            wrappedComponentRef={(inst) => { this.filterForm = inst }} />\n        </Card>\n        <Card style={{\n          marginTop: '10px',\n        }}>\n          <ButtonGroup style={{ padding: '0', float: 'right' }}>\n            <Button\n              type=\"primary\"\n              icon=\"plus\"\n              href=\"/#/register\"\n              target=\"_black\"\n            >\n              新增\n        </Button>\n            <Button\n              type=\"danger\"\n              icon=\"delete\"\n              onClick={\n                () => {\n                  if (this.state.selectedItems.length < 1) return\n                  Modal.confirm({\n                    title: 'delete',\n                    content: JSON.stringify(this.state.selectedItems),\n                    onOk: (callback = () => {\n                      message.info('删除成功')\n                      this.setState((prevState) => ({\n                        dataSource: selectTag([...prevState.dataSource], prevState.selectedItems),\n                        selectedItems: [], selectedRowKeys: []\n                      }))\n                    },\n                    ) => {\n                      message.warning('这里改写成向后端发送验证的流程// TODO')\n                      callback()\n                    },\n                  }\n                  )\n                }\n              }\n            >\n              批量删除\n            </Button>\n          </ButtonGroup>\n        </Card>\n        <div className=\"content-wrap\">\n          <Table\n            size=\"small\"\n            bordered\n            loading={this.state.loading}\n            columns={columns}\n            // 关闭列表 滚动\n            // scroll={{ \n            //   x: 1440,\n            //   y: 580 \n            // }}  \n            dataSource={this.state.dataSource}\n            //若没有pagination属性，会根据antd中table的默认样式，每页显示10个数据，将这一次请求获得的数据进行纯前端样式的静态的分页，*点击切换页面按钮不会发送请求\n            // 若 有 pagination={false}的 设定，tab le不会分页， 此次请求获得的所有数据会全部显示出来\n            pagination={this.state.pagination}\n            // pagination={false}\n            // onChange 事件会自动传入这三个参数\n            onChange={(pagination, filters, sorter) => {\n              this.setState(() => ({\n                sortOrder: sorter.order\n              }))\n            }}\n            rowSelection={\n              {\n                type: this.state.tableType,\n                selectedRowKeys: this.state.selectedRowKeys,\n                // 点击行首小圆圈才能触发onChange事件\n                onChange: (selectedRowKeys, selectedItems) => {\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }),\n                  )\n                }\n              }\n            }\n            onRow={(selectedItem) => ({\n              onClick: () => {\n                if (this.state.tableType === 'checkbox') {\n                  let selectedItems = selectTag([...this.state.selectedItems], [selectedItem])\n                  let selectedRowKeys = selectTag([...this.state.selectedRowKeys], [selectedItem.key])\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }))\n                }\n                if (this.state.tableType === 'radio') {\n                  let selectedItems = [selectedItem]\n                  let selectedRowKeys = [selectedItem.key]\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }))\n                }\n              },\n              onMouseEnter: () => { },\n              onDoubleClick: () => {\n                Modal.confirm({\n                  title: '详细信息',\n                  content: `\n                  ${selectedItem.name}\n                  ${roleMap[selectedItem.role]}\n                  ${selectedItem.email}\n                `,\n                  onCancel: () => { },\n                  onOk: () => { },\n                })\n              },\n            }\n            )}\n          />\n        </div>\n      </div >\n    )\n  }\n}","import React from 'react';\nimport { Table, Modal, Button, message, Badge,  } from 'antd';\nimport Ajax from '../../components/Ajax'\nimport { pagination, selectTag, removeFromArray } from '../../utils/index'\nimport '../../style/common.scss'\n\nexport default class adTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      tableType: 'checkbox',\n      dataSource: [],\n      allSource: [],\n      selectedRowKeys: [],\n      selectedItems: [],\n      pagination: {},\n      sortOrder: false,\n      isInitial: false,\n      globalFilter: false,\n      defaultFilterRules: () => true,\n    }\n    this.page = 1\n    this.filterRules = this.state.defaultFilterRules\n  }\n\n  componentDidMount = () => {\n      this.request()\n  }\n  request = () => {\n    Ajax.ajax(\n      'get',\n      '/v1/users',\n      { page: this.page },\n      'https://mook.sunlin.fun/mock/9',\n    )\n      .then(\n        data => {\n          if (!this.state.globalFilter) {\n            this.filterRules = this.state.defaultFilterRules\n          }\n          this.setState(\n            () => (\n              {\n                allSource: data.list,\n                dataSource: data.list.filter(this.filterRules),\n                loading: false,\n                isInitial: true,\n                pagination: pagination(data, (current) => {\n                  this.page = current\n                  if (!this.state.globalFilter) {\n                    // 翻页时将子组件标记重置\n                    this.resetFields = true\n                  }\n                  this.request()\n                }),\n              }\n            )\n          )\n        })\n      .catch(\n        () => message.error(\"数据渲染失败\")\n      )\n  }\n\n\n\n  render = () => {\n    const roleMap = {\n      1: \"管理员\",\n      2: \"商户\",\n      3: \"普通用户\",\n    }\n    const statusMap = {\n      1: <Badge status=\"success\" text=\"已审批\" />,\n      2: <Badge status=\"default\" text=\"未审批\" />,\n      3: <Badge status=\"error\" text=\"冻结中\" />,\n    }\n    const columns = [\n      {\n        title: 'id',\n        key: 'id',\n        width: 80,\n        dataIndex: 'id',\n        sorter: (a, b) => {\n          return a.id - b.id\n        },\n        sortOrder: this.state.sortOrder,\n        // 横向滚动头部锁定\n        // fixed: 'left',\n      },\n      {\n        title: '用户名',\n        key: 'name',\n        width: 80,\n        dataIndex: 'name',\n        // fixed: 'left',\n      },\n      {\n        title: '邮箱',\n        key: 'email',\n        width: 80,\n        dataIndex: 'email'\n      },\n      {\n        title: '角色',\n        key: 'role',\n        width: 80,\n        dataIndex: 'role',\n        render: (text) => {\n          return roleMap[text]\n        }\n      },\n      {\n        title: '状态',\n        key: 'status',\n        width: 80,\n        dataIndex: 'status',\n        render: (text) => {\n          return statusMap[text]\n        }\n      },\n      {\n        title: 'operation',\n        key: 'operation',\n        width: 80,\n        render: (text, item, index, ) => {\n          return (\n            <div>\n              <Button\n                className=\"link-button\"\n                onClick={\n                  () => {\n                    this.setState((prevState) => ({\n                      selectedItems: selectTag([...prevState.selectedItems], [item]),\n                      selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n                    }))\n                    Modal.confirm({\n                      title: 'edit',\n                      content: JSON.stringify(item),\n                      onOk: (callback = () => {\n                        message.info('下单成功')\n                      },\n                      ) => {\n                        message.warning('这里改写成向后端发送验证的流程// TODO')\n                        callback()\n                        this.setState((prevState) => ({\n                          selectedItems: removeFromArray([...prevState.selectedItems], [item]),\n                          selectedRowKeys: removeFromArray([...prevState.selectedRowKeys], [item.key])\n                        }))\n                      },\n                      onCancel: () => {\n                        this.setState((prevState) => ({\n                          selectedItems: selectTag([...prevState.selectedItems], [item]),\n                          selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n                        }))\n                      }\n                    },\n                    )\n                  }\n                }\n              >\n               下单 \n              </Button>\n            </div>\n          )\n        }\n      },\n    ];\n\n    return (\n      <div>\n\n        <div className=\"content-wrap\">\n          <Table\n            size=\"small\"\n            bordered\n            loading={this.state.loading}\n            columns={columns}\n            // 关闭列表 滚动\n            // scroll={{\n            //   x: 1440,\n            //   y: 580\n            // }}\n            dataSource={this.state.dataSource}\n            //若没有pagination属性，会根据antd中table的默认样式，每页显示10个数据，将这一次请求获得的数据进行纯前端样式的静态的分页，*点击切换页面按钮不会发送请求\n            // 若 有 pagination={false}的 设定，tab le不会分页， 此次请求获得的所有数据会全部显示出来\n            pagination={this.state.pagination}\n            // pagination={false}\n            // onChange 事件会自动传入这三个参数\n            onChange={(pagination, filters, sorter) => {\n              this.setState(() => ({\n                sortOrder: sorter.order\n              }))\n            }}\n            rowSelection={\n              {\n                type: this.state.tableType,\n                selectedRowKeys: this.state.selectedRowKeys,\n                // 点击行首小圆圈才能触发onChange事件\n                onChange: (selectedRowKeys, selectedItems) => {\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }),\n                  )\n                }\n              }\n            }\n            onRow={(selectedItem) => ({\n              onClick: () => {\n                if (this.state.tableType === 'checkbox') {\n                  let selectedItems = selectTag([...this.state.selectedItems], [selectedItem])\n                  let selectedRowKeys = selectTag([...this.state.selectedRowKeys], [selectedItem.key])\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }))\n                }\n                if (this.state.tableType === 'radio') {\n                  let selectedItems = [selectedItem]\n                  let selectedRowKeys = [selectedItem.key]\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }))\n                }\n              },\n              onMouseEnter: () => { },\n              onDoubleClick: () => {\n                Modal.confirm({\n                  title: '详细信息',\n                  content: `\n                  ${selectedItem.name}\n                  ${roleMap[selectedItem.role]}\n                  ${selectedItem.email}\n                `,\n                  onCancel: () => { },\n                  onOk: () => { },\n                })\n              },\n            }\n            )}\n          />\n        </div>\n      </div >\n    )\n  }\n}\n","// src/components/Header/index.js\nimport React from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport \"./index.scss\";\nimport { formateDate } from \"../../utils\"; //导入公共机制\n// import axios from \"../axios\"; //引入axios组件\n\n\nclass Header extends React.Component {\n    //声明 state变量 在setState之前要声明变量\n    state = {\n        isLogin: false,\n        sysTime: undefined,\n        userName: \"用户007\",\n    };\n\n    componentWillMount() {\n        /*\n            创建定时器,每隔一秒获取时间\n            * 获取时间的方法\n            */\n        setInterval(() => {\n            // new Date();\n            let sysTime = formateDate(new Date().getTime());\n            this.setState({\n                sysTime\n            });\n        }, 1000);\n    }\n\n    render() {\n        return (\n            <div className=\"header\">\n                <Row className=\"header-top\">\n                    <Col span={6} className=\"logo\">\n                        <img src=\"/assets/logo-ant.svg\" alt=\"\" />\n                        <span>{this.state.sysTime}</span>\n                    </Col>\n                    <Col span={18} style={{ float: \"right\" }}>\n                        {\n                            this.state.isLogin ?\n                                <span>{this.state.userName}</span>\n                                :\n                                <span>\n\n                                    <Button\n                                        onClick={\n                                            () => {\n                                                window.location.href = window.location.href.split('#')[0] + '#/login'\n                                            }\n                                        }\n                                    >\n                                        登录\n                        </Button>\n                                    <Button\n                                        onClick={\n                                            () => {\n                                                window.location.href = window.location.href.split('#')[0] + '#/register'\n                                            }\n                                        }\n                                    >\n                                        注册\n                        </Button>\n                                </span>\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Header\n","import React from 'react';\nimport './index.scss'\nexport default class Footer extends React.Component{\n    render(){\n        return(\n            <div className=\"footer\">\n                版权所有：©2019\n            </div>\n        )\n    }\n}","const menuList = [\n    {\n        title: '首页',\n        key: '/admin/home'\n    },\n    {\n        title: '管理',\n        key: '/admin/manager',\n        children: [\n            {\n                title: '用户管理',\n                key: '/admin/manager/users',\n            },\n            {\n                title: '订单管理',\n                key: '/admin/manager/orders',\n            },\n            {\n                title: '广告管理',\n                key: '/admin/manager/ads',\n            },\n\n        ]\n    },\n    {\n        title: '广告区',\n        key: '/admin/ads',\n    },\n    {\n        title: '统计',\n        key: '/admin/charts',\n    },\n];\nexport default menuList;\n","import React from \"react\";\nimport MenuConfig from \"./../../config/menuConfig\"; //导入menuConfig这个文件\nimport { Menu } from \"antd\"; //导入子组件菜单\nimport { NavLink } from 'react-router-dom'\nimport \"./index.scss\";\n\nconst SubMenu = Menu.SubMenu;\n\nexport default class NavLeft extends React.Component {\n  componentWillMount() {\n    //通过MenuConfig读取文件\n    //通过递归(遍历)实现菜单(是一个List)的渲染\n    const menuTreeNode = this.renderMenu(MenuConfig);\n    this.setState(\n      { menuTreeNode }\n    )\n    //通过setState存入state\n  }\n\n  //菜单渲染\n  renderMenu = data => {\n    return data.map(item => {\n      //如果item有子元素,遍历自己,再次调用,直到子节点加载完毕\n      if (item.children) {\n        return (\n          <SubMenu title={item.title} key={item.key}>\n            {this.renderMenu(item.children)}\n          </SubMenu>\n        );\n      }\n      return (\n        <Menu.Item title={undefined} key={item.key}>\n          <NavLink to={item.key}>{item.title}</NavLink>\n        </Menu.Item>\n      );\n    });\n  };\n\n  render() {\n    // var style = {\n    //     backgroundColor:'red'\n    // }\n    return (\n      <Menu mode=\"horizontal\">\n        {this.state.menuTreeNode}\n      </Menu>\n    );\n  }\n}","import React from \"react\";\nimport { Row } from \"antd\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport NavLeft from \"./components/NavLeft\";\nimport './style/common.scss'\nimport 'antd/dist/antd.css'\nexport default class Admin extends React.Component {\n  render() {\n    return (\n      <Row className=\"container\">\n        <Row className=\"main\">\n          <Header />\n          <Row className=\"nav-left\">\n            <NavLeft />\n          </Row>\n          <Row className=\"content\">\n            {this.props.children}\n          </Row>\n          <Footer>Footer</Footer>\n        </Row>\n      </Row>\n    );\n  }\n}\n","import React from 'react'\nimport '../../style/common.scss'\nexport default class Home extends React.Component {\n   render(){\n       return (\n           <div className=\"home-wrap\">\n               欢迎\n           </div>\n       );\n   }\n}","import React from \"react\";\n\nexport default class NoMatch extends React.Component {\n  render() {\n    return (\n      <div style={{ textAlign: \"center\", fontSize: \"24\" }}>404 No Found!!!</div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport App from \"./app\"\nimport Common from \"./common\"\nimport Login from \"./pages/form/login\";\nimport Register from \"./pages/form/register\";\nimport UserTable from \"./pages/manager/userTable\";\nimport adTable from \"./pages/ad/\"\nimport Admin from \"./admin\";\nimport Home from \"./pages/home\";\nimport Nomatch from \"./pages/nomatch\"\n\nexport default class IRouter extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <App>\n          <Switch>\n            <Route exact={true} path=\"/\" >\n              <Redirect to=\"/admin/home/\" />\n            </Route>\n            <Route path=\"/admin\"\n              render={() =>\n                <Admin>\n                  <div>\n                    <Route exact={true} path=\"/admin\" component={Home} />\n                    <Route path=\"/admin/home\" component={Home} />\n                    <Route path=\"/admin/ads\" component={adTable} />\n                    <Route path=\"/admin/manager/users\" component={UserTable} />\n                  </div>\n                </Admin>\n              }\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/common\"\n              render={() =>\n                <Common>\n                  <div>hello</div>\n                </Common>\n              }\n            />\n            <Route component={Nomatch} />\n          </Switch>\n        </App>\n      </HashRouter >\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Router from \"./router\"\n\nReactDOM.render(\n  <Router />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}