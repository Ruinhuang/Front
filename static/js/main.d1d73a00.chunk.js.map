{"version":3,"sources":["components/Header/logo.svg","app.jsx","common.jsx","redux/action/index.jsx","utils/index.jsx","components/Ajax/index.jsx","pages/form/login.jsx","pages/form/register.jsx","pages/manager/userTable.jsx","components/BaseForm/index.jsx","pages/manager/orderTable.jsx","config/menuConfig.jsx","components/Api/index.jsx","pages/manager/permissionTable.jsx","components/StepForm/index.jsx","pages/ad/index.jsx","components/Header/index.jsx","components/Footer/index.jsx","components/NavLeft/index.jsx","mainpage.jsx","pages/home/index.jsx","pages/nomatch/index.jsx","router.jsx","redux/reducer/index.jsx","redux/store/index.jsx","index.jsx"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","this","props","children","Component","Common","actionTypes","actionCreator","type","data","Option","Select","goToUrl","window","location","href","concat","split","selectTag","arr","items","forEach","item","position","indexOf","push","splice","pagination","callback","onChange","current","parseInt","page","pageSize","page_size","total","showTotal","getOptionList","options","value","id","key","name","Ajax","ajax","method","url","baseURL","timeout","arguments","length","undefined","Promise","resolve","reject","axios","params","then","response","status","res","catch","error","console","log","JSON","stringify","FormItem","Form","Item","FormLogin","post","formData","_this","saveLoginData","sessionStorage","setItem","token","autoLogin","localStorage","removeItem","handleSubmit","form","getFieldsValue","validateFields","err","values","getFieldDecorator","formItemLayout","labelCol","xs","sm","wrapperCol","card","title","es_form","layout","Object","assign","label","initialValue","rules","pattern","RegExp","message","required","input","placeholder","prefix","icon","span","offset","valuePropName","es_checkbox","style","marginLeft","marginRight","width","es_button","onClick","React","connect","state","isLogin","user","dispatch","create","RadioGroup","Radio","Group","FormRegister","passwordValidator","rule","password","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","info","file","originFileObj","imageUrl","setState","userImg","loading","componentDidMount","offsetLayout","register_FormItem","min","max","validator","es_radio","FilterForm","render","userTable_FormItem","es_select","userTable_Option","display","es_switch","checkedChildren","unCheckedChildren","checked","changeGlobalFilter","margin","ruleInfo","changeFilterRules","role","userTable","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","request","componentDidUpdate","globalFilter","filterForm","resetFields","filterRules","prevState","dataSource","allSource","filter","changeTableType","selectedRowKeys","selectedItems","tableType","defaultFilterRules","list","Button","roleMap","1","2","3","statusMap","badge","text","columns","dataIndex","sorter","b","sortOrder","modal","visibleModal","visible","onCancel","footer","userTable_UserForm","userInfo","wrappedComponentRef","inst","userForm","userTable_FilterForm","marginTop","defaultChecked","disabled","Modal","confirm","content","onOk","toConsumableArray","warning","table","size","bordered","filters","order","rowSelection","onRow","selectedItem","onMouseEnter","onDoubleClick","email","UserForm","userTable_RadioGroup","BaseForm","initFormList","formList","formItemList","i","field","switchFunc","BaseForm_FormItem","date_picker","showTime","format","colon","fieldsValue","submitFunc","components_BaseForm","menuList","menus","getMenus","userType","TreeNode","Tree","PermissionUser","isRoleVisible","handleRole","handleRoleSubmit","roleForm","handlePermission","isPermVisible","detailInfo","menuInfo","map","handlePermEditSubmit","permForm","role_key","handleUserAuth","isUserVisible","getRoleUserList","getAuthUserList","roleUsers","targetKeys","handleUserSubmit","user_ids","permissionTable_RoleForm","permissionTable_PermEditForm","patchMenuInfo","checkedKeys","permissionTable_RoleAuthForm","userAuthForm","patchUserInfo","RoleForm","permissionTable_FormItem","permissionTable_Option","PermEditForm","onCheck","_this3","renderTreeNodes","_this4","detail_info","menu_info","role_name","tree","checkable","defaultExpandAll","menuConfig","RoleAuthForm","filterOption","inputValue","option","_this5","transfer","listStyle","height","titles","showSearch","StepForm","react_router_dom","react_router","path","exact","Info","Confirm","refreshData","FormInfo","success","StepForm_FormItem","FormConfirm","alt","src","adTable","componentWillMount","changeFormKey","formKey","Math","random","toString","substr","isInitial","SortOrder","match","afterClose","changeModalKey","StepForm_StepForm","changeMormKey","to","Header","row","col","Logo","float","userName","clearLoginData","Footer","SubMenu","Menu","NavLeft","renderMenu","menu","mode","MainPage","getItem","autoLoginByToken","src_components_Header","src_components_NavLeft","Footer_Footer","Home","BizCharts","day","scale","range","forceFit","crosshairs","shape","stroke","lineWidth","NoMatch","textAlign","fontSize","IRouter","app_App","component","Login","Register","common_Common","mainpage","UserTable","OrderTable","PermissionTable","Nomatch","defaultState","middleware","thunk","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","store","createStore","previousState","action","newState","parse","ReactDOM","es","router_IRouter","document","getElementById"],"mappings":"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","file":"static/js/main.d1d73a00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                {this.props.children}\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\n\nexport default class Common extends Component {\n  render() {\n    return (\n      <div>\n        {\n          this.props.children\n        }\n      </div>\n    )\n  }\n}","// 采用重复编码的方式保障传入的动作描述与定义的一致\nexport const actionTypes = {\n    CLEAR_LOGIN_DATA: 'clear_login_data',\n    SAVE_LOGIN_DATA: 'save_login_data',\n}\n\nexport const actionCreator = {\n    clearLoginData: () => ({\n        type: actionTypes.CLEAR_LOGIN_DATA,\n    }),\n\n    saveLoginData: (data) => ({\n        type: actionTypes.SAVE_LOGIN_DATA,\n        data,\n    }),\n}","import React from 'react'\nimport { Select } from 'antd'\nconst Option = Select.Option\n\nexport const formateDate = (time) => {\n  const checkTime = (time) => {\n    return time < 10 ? \"0\" + time : time\n  }\n  if (!time) return '';\n  let date = new Date(time);\n  return date.getFullYear() + '-' + checkTime(date.getMonth() + 1) +\n    '-' + checkTime(date.getDate()) + ' ' +\n    checkTime(date.getHours()) + \":\" + checkTime(date.getMinutes()) + \":\" + checkTime(date.getSeconds());\n}\n\nexport const goToUrl = p =>\n  window.location.href = `${window.location.href.split('#')[0]}#${p}`\n\nexport const selectTag = (arr, items) => {\n  // 非幂等\n  items.forEach(item => {\n    let position = arr.indexOf(item)\n    if (position < 0) {\n      arr.push(item)\n    } else {\n      arr.splice(position, 1)\n    }\n  });\n  return arr\n}\n\nexport const removeFromArray = (arr, items) => {\n  // 非幂等\n  items.forEach(item => {\n    let position = arr.indexOf(item)\n    if (position >= 0) {\n      arr.splice(position, 1)\n    }\n  });\n  return arr\n}\n\nexport const pagination = (data, callback) => ({\n  onChange: current => callback(current),\n  current: parseInt(data.page),\n  pageSize: parseInt(data.page_size),\n  total: parseInt(data.total),\n  showTotal: () => (`共${data.total}条数据`),\n})\n\n\nexport const getOptionList = data => {\n  let options = []\n  if (!data) {\n    return options\n  }\n  data.forEach(item => {\n    options.push(\n      <Option value={item.id} key={item.id}>\n        {item.name}\n      </Option>\n    )\n  }\n  )\n  return options\n}","import axios from 'axios'\nimport { message } from 'antd';\nexport default class Ajax {\n\tstatic ajax = (\n\t\tmethod,\n\t\turl,\n\t\tdata,\n\t\tbaseURL,\n\t\ttimeout = 5000,\n\t) => new Promise(\n\t\t(resolve, reject) => {\n\t\t\t// Promise是一个包裹者异步操作的对象，它有三个状态:未完成， 已完成， 已失败\n\t\t\t// 构造函数接受一个函数作为参数\n\t\t\t// 该函数的两个参数分别是resolve和reject,它们是两个函数，由 JavaScript 引擎提供，不用自己部署。\n\t\t\t// resolve函数执行会使promise对象变成已完成状态\n\t\t\t// reject函数执行会使promise对象变成已失败状态\n\t\t\taxios(\n\t\t\t\t// axiso 也是一个promise\n\t\t\t\tmethod === 'get' ?\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod,\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams: data,\n\t\t\t\t\t\tbaseURL,\n\t\t\t\t\t\ttimeout,\n\t\t\t\t\t} : {\n\t\t\t\t\t\tmethod,\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tbaseURL,\n\t\t\t\t\t\ttimeout,\n\t\t\t\t\t}\n\t\t\t).then(\n\t\t\t\t// then方法返回的是新的Promise实例\n\t\t\t\t// 如果一个 Promise 对象状态变为resolved，则会调用then方法指定的第一个回调函数\n\t\t\t\t// 第一个参数是上一个promise对象的resolved状态的回调函数\n\t\t\t\t// 第二个参数（可选）是rejected状态的回调函数。\n\t\t\t\t(response) => {\n\t\t\t\t\t// response 是http请求的响应 response.data 可以拿到业务层的数据\n\t\t\t\t\t// http状态码\n\t\t\t\t\tif (response.status === 200) {\n\t\t\t\t\t\tlet res = response.data\n\t\t\t\t\t\t//设定业务反馈代码 200 为 正常\n\t\t\t\t\t\tif (res.status === 200 || true) { //TODO 这里先不过滤\n\t\t\t\t\t\t\t// 调用resolve或reject并不会终结 Promise 的参数函数的执行\n\t\t\t\t\t\t\t// 参数会被传递给回调函数, 这个参数可以是另一个promise对象\n\t\t\t\t\t\t\t// Promise 的状态一旦改变，就永久保持该状态,无法被再次改变\n\t\t\t\t\t\t\treturn resolve(res)\n\t\t\t\t\t\t\t// console.log('如果没有return 这行会被执行')\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn message.info(res.message)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// else {\n\t\t\t\t\t// 如果没有使用catch方法指定错误处理的回调函数，Promise 对象抛出的错误不会传递到外层，在外层不会退出进程、终止脚本执行\n\t\t\t\t\t// 不推荐使用reject捕获异常， 建议使用catch \n\t\t\t\t\t// return reject(response.data)\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t\t// Promise 对象的错误具有“冒泡”性质，会一直向后传递，错误总是会被下一个catch语句捕获。\n\t\t\t\t// Promise对象的异步操作抛出错误，状态会变为rejected，会调用catch指定的回调函数处理异常\n\t\t\t\t// then方法指定的回调函数，如果运行中抛出错误，也会被catch方法捕获。\n\t\t\t\t// catch方法返回的还是一个 Promise 对象，后面可以接着调用then方法\n\t\t\t).catch(error => console.log('axios catch in', JSON.stringify(error)))\n\t\t}\n\t)\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\"\nimport { actionCreator } from \"../../redux/action\"\nimport { Button, Card, Form, Icon, Input, Checkbox, message } from \"antd\";\nimport { goToUrl } from \"../../utils\"; //导入公共机制\nimport Ajax from '../../components/Ajax'\n\nconst FormItem = Form.Item;\nclass FormLogin extends React.Component {\n  post = (formData) => {\n    Ajax.ajax(\n      'post',\n      '/user-login',\n      formData,\n      // 'http://192.168.0.105:8080',\n      'https://mook.sunlin.fun/mock/9',\n    )\n      .then(\n        (res) => {\n          this.props.saveLoginData(res.data)\n          sessionStorage.setItem(\"token\", res.data.token);\n          if (this.autoLogin) {\n            //将token存入localStorage\n            localStorage.setItem(\"token\", res.data.token);\n          } else {\n            localStorage.removeItem(\"token\");\n          }\n          goToUrl('/home')\n        }\n      ).catch(() => { })\n  }\n\n  handleSubmit = () => {//绑定提交事件进行校验\n    let formData = this.props.form.getFieldsValue()// 可以(获取表单中)object对象\n    this.props.form.validateFields((err, values) => {\n      if (!err) {// ${}  是变量\n        this.autoLogin = formData.autoLogin\n        this.post(formData)\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const offsetLayout = {\n      wrapperCol: {\n        xs: 24,\n        sm: {\n          span: 12,\n          offset: 4\n        }\n      }\n    };\n    const formItemLayout = {\n      labelCol: {\n        xs: 24,\n        sm: 4\n      },\n      wrapperCol: {\n        xs: 24,\n        sm: 12\n      }\n    };\n    return (\n      <div>\n        <Card title=\"登录\"\n        >\n          <Form\n            layout=\"horizontal\"\n          >\n            <FormItem label=\"手机号\" {...formItemLayout}>\n              {\n                getFieldDecorator('phone', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      pattern: new RegExp('^\\\\d+$', 'g'),\n                      message: '手机号码必须为字母'\n                    },\n                    {\n                      required: true,\n                      message: '手机号不能为空'\n                    },\n                  ]\n                })(\n                  <Input placeholder=\"请输入手机号码\" />\n                )\n              }\n            </FormItem>\n            <FormItem\n              label=\"密码\"\n              {...formItemLayout}\n            >\n              {\n                getFieldDecorator('password', {\n                  initialValue: '',\n                  rules: [{\n                    required: true,\n                    message: '密码不能为空'\n                  }]\n                })(\n                  <Input prefix={<Icon type=\"lock\" />} type=\"password\" placeholder=\"请输入密码\" />\n                )\n              }\n\n            </FormItem>\n            <FormItem  {...offsetLayout}>\n              {\n                getFieldDecorator('autoLogin', {\n                  valuePropName: 'checked',\n                  initialValue: true,\n                })(\n                  <Checkbox>自动登录</Checkbox>\n                )\n              }\n            </FormItem>\n            <FormItem\n              style={{\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                width: 200,\n              }}\n            >\n              <Button type=\"primary\" onClick={this.handleSubmit}>登录</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      </div >\n    )\n  }\n}\n\n// props 属性\nconst mapStateToProps = (state) => ({\n  isLogin: state.isLogin,\n  user: state.user\n})\n\n// props 方法\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    saveLoginData(data) {\n      dispatch(actionCreator.saveLoginData(data))\n    },\n  }\n}\n\n// 把逻辑方法与UI组件连接起来变成新容器组件\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(FormLogin))","import React from 'react';\nimport {\n  Card,\n  Form,\n  Button,\n  Input,\n  Radio,\n  Checkbox,\n  message,\n} from \"antd\";\nimport Ajax from '../../components/Ajax'\nimport '../../style/common.scss'\n\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\n\nclass FormRegister extends React.Component {\n\n  post = (formData) => {\n    Ajax.ajax(\n      'post',\n      '/user-register',\n      formData,\n      'http://192.168.0.105:8080',\n    )\n      .then(() => { }).catch(() => { })\n  }\n\n  passwordValidator = (rule, value, callback) => {\n    let password = this.props.form.getFieldsValue().password\n    console.log(rule, value, password)\n    if (value && value !== password) {\n      callback('密码输入不一致！')\n    }\n    callback()\n  }\n\n  handleSubmit = () => {\n    let formData = this.props.form.getFieldsValue();// 可以(获取表单中)object对象\n    this.post(formData)\n\n\n  };\n  getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n\n  handleChange = (info) => {\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n        userImg: imageUrl,\n        loading: false,\n      }));\n    }\n  };\n\n  componentDidMount = () => {\n\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: 24,\n        sm: 4\n      },\n      wrapperCol: {\n        xs: 24,\n        sm: 12\n      }\n    };\n    const offsetLayout = {\n      wrapperCol: {\n        xs: 24,\n        sm: {\n          span: 12,\n          offset: 4\n        }\n      }\n    };\n\n\n    return (\n      <div>\n        <Card title=\"注册\">\n          <Form layout=\"horizontal\">\n            <FormItem label=\"用户名\" {...formItemLayout}>\n              {\n                getFieldDecorator('userName', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '用户名不能为空'\n                    },\n                    {\n                      min: 1, max: 16,\n                      message: '长度不在范围内'\n                    },\n                    {\n                      pattern: new RegExp('^\\\\w+$', 'g'),\n                      message: '用户名必须为字母或数字'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入用户名\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"密码\" {...formItemLayout}>\n              {\n                getFieldDecorator('password', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '密码不能为空'\n                    },\n                  ]\n\n                })(\n                  <Input placeholder=\"请输入密码\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"确认密码\" {...formItemLayout}>\n              {\n                getFieldDecorator('repeat', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '请再次输入密码',\n                    },\n                    {\n\t\t      validator: this.passwordValidator,\n                    }\n                  ],\n                },\n                )(\n                  <Input placeholder=\"请输入密码\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"用户角色\" {...formItemLayout}>\n              {\n                getFieldDecorator('userType', {\n                  initialValue: \"0\",\n                  rules: [{\n                    required: true,\n                    message: '用户角色必选'\n                  },\n                  ]\n                }\n                )(\n                  <RadioGroup>\n                    <Radio value={0}>普通用户</Radio>\n                    <Radio value={1}>商户</Radio>\n                  </RadioGroup>\n                )\n              }\n            </FormItem>\n            <FormItem label=\"手机号\" {...formItemLayout}>\n              {\n                getFieldDecorator('phone', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '手机号不能为空'\n                    },\n                    {\n                      pattern: new RegExp('^\\\\d+$', 'g'),\n                      message: '手机号码必须为数字'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入手机号码\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"邮箱地址\" {...formItemLayout}>\n              {\n                getFieldDecorator('email', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '邮箱地址不能为空'\n                    },\n                    {\n                      pattern: new RegExp(/^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/),\n                      message: '请输入正确的邮箱地址'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入邮箱地址\" />\n                )\n              }\n            </FormItem>\n            <FormItem label=\"身份证号\" {...formItemLayout}>\n              {\n                getFieldDecorator('idcard', {\n                  initialValue: '',\n                  rules: [\n                    {\n                      required: true,\n                      message: '需填写身份证'\n                    },\n                    {\n                      pattern: new RegExp(/^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/),\n                      message: '请输入正确的身法证号'\n                    }\n                  ]\n                })(\n                  <Input placeholder=\"请输入身份证号\" />\n                )\n              }\n            </FormItem>\n            <FormItem {...offsetLayout}>\n              {\n                getFieldDecorator('register', {\n                  valuePropName: 'checked',\n                  initialValue: true,\n                })(\n                  <Checkbox>我已阅读过<button className=\"link-button\" href=\"#\" >协议</button></Checkbox>\n                )\n              }\n            </FormItem>\n            <FormItem {...offsetLayout}>\n              <Button type=\"primary\" onClick={this.handleSubmit}>注册</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default Form.create()(FormRegister);\n","import React from 'react';\nimport { Input, Radio, Card, Table, Form, Modal, Button, message, Badge, Select, Switch } from 'antd';\nimport Ajax from '../../components/Ajax'\nimport { pagination, selectTag } from '../../utils/index'\nimport '../../style/common.scss'\n\nconst FormItem = Form.Item\nconst Option = Select.Option\nconst RadioGroup = Radio.Group\n\n// child component FilterFrom\nclass FilterForm extends React.Component {\n\n  render = () => {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form layout=\"inline\">\n        <FormItem label=\"角色\">\n          {\n            getFieldDecorator('role',\n              {\n                initialValue: \"\"\n              }\n            )(\n              <Select\n                style={{ width: 100 }}\n              >\n                <Option value=''>全部</Option>\n                <Option value={1}>管理员</Option>\n                <Option value={2}>商户</Option>\n                <Option value={3}>普通用户</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem label=\"状态\">\n          {\n            getFieldDecorator('status',\n              {\n                initialValue: \"\"\n              }\n            )(\n              <Select\n                style={{ width: 100 }}\n              >\n                <Option value='' >全部</Option>\n                <Option value={1}>已审批</Option>\n                {/* <Option value=\"1\">已审批</Option> */}\n                <Option value={2}>未审批</Option>\n                <Option value={3}>冻结中</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem>\n          <div style={{ display: \"inline-block\" }}>\n            全局过滤\n          <Switch\n              checkedChildren=\"开\"\n              unCheckedChildren=\"关\"\n              onClick={(checked) => this.props.changeGlobalFilter(checked)}\n            />\n          </div>\n          <Button\n            type=\"primary\"\n            style={{ margin: '0 20px' }}\n            onClick={() => {\n              let ruleInfo = this.props.form.getFieldsValue()//object对象,包含表单中所有信息\n              // 根据filterFrom提交的内容构建过滤规则\n              let rules = item => (\n                ((!ruleInfo.status) || (item.status === ruleInfo.status))\n                &&\n                ((!ruleInfo.role) || (item.role === ruleInfo.role))\n              )\n              this.props.changeFilterRules(rules)\n            }}\n          >筛选结果\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nFilterForm = Form.create({})(FilterForm);\n\nexport default class userTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visibleModal: null,\n      loading: true,\n      tableType: \"radio\",\n      dataSource: [],\n      allSource: [],\n      selectedRowKeys: [],\n      selectedItems: [],\n      pagination: {},\n      sortOrder: false,\n      globalFilter: false,\n      defaultFilterRules: () => true,\n    }\n    this.page = 1\n    this.filterRules = this.state.defaultFilterRules\n  }\n\n  componentDidMount = () => {\n    this.request()\n  }\n  componentDidUpdate = () => {\n    if (!this.state.globalFilter) {\n      this.filterForm.props.form.resetFields()\n    }\n  }\n\n  changeFilterRules = rules => {\n    this.filterRules = rules\n    this.setState(prevState => ({ dataSource: prevState.allSource.filter(this.filterRules) }))\n  }\n\n  changeGlobalFilter = checked => {\n    this.setState(\n      () => ({\n        globalFilter: checked,\n      })\n    )\n  }\n\n  changeTableType = checked => {\n    this.setState(\n      () => ({\n        selectedRowKeys: [],\n        selectedItems: [],\n        tableType: checked ? \"checkbox\" : \"radio\",\n      })\n    )\n  }\n\n  request = () => {\n    Ajax.ajax(\n      'get',\n      '/v1/users',\n      { page: this.page },\n      'https://mook.sunlin.fun/mock/9',\n    )\n      .then(\n        data => {\n          if (!this.state.globalFilter) {\n            this.filterRules = this.state.defaultFilterRules\n          }\n          this.setState(\n            () => (\n              {\n                allSource: data.list,\n                dataSource: data.list.filter(this.filterRules),\n                loading: false,\n                pagination: pagination(data, (current) => {\n                  this.page = current\n                  if (!this.state.globalFilter) {\n                    // 翻页时将子组件标记重置\n                    this.filterForm.props.form.resetFields()\n                  }\n                  this.request()\n                }),\n              }\n            )\n          )\n        })\n      .catch(\n        () => message.error(\"数据渲染失败\")\n      )\n  }\n\n\n\n  render = () => {\n    const ButtonGroup = Button.Group\n    const roleMap = {\n      1: \"管理员\",\n      2: \"商户\",\n      3: \"普通用户\",\n    }\n    const statusMap = {\n      1: <Badge status=\"success\" text=\"已审批\" />,\n      2: <Badge status=\"default\" text=\"未审批\" />,\n      3: <Badge status=\"error\" text=\"冻结中\" />,\n    }\n    const columns = [\n      {\n        title: 'id',\n        key: 'id',\n        width: 80,\n        dataIndex: 'id',\n        sorter: (a, b) => {\n          return a.id - b.id\n        },\n        sortOrder: this.state.sortOrder,\n        // 横向滚动头部锁定\n        // fixed: 'left',\n      },\n      {\n        title: '用户名',\n        key: 'name',\n        width: 80,\n        dataIndex: 'name',\n        // fixed: 'left',\n      },\n      {\n        title: '邮箱',\n        key: 'email',\n        width: 80,\n        dataIndex: 'email'\n      },\n      {\n        title: '角色',\n        key: 'role',\n        width: 80,\n        dataIndex: 'role',\n        render: (text) => {\n          return roleMap[text]\n        }\n      },\n      {\n        title: '状态',\n        key: 'status',\n        width: 80,\n        dataIndex: 'status',\n        render: (text) => {\n          return statusMap[text]\n        }\n      },\n      // 行内操作按钮\n      // {\n      //   title: 'operation',\n      //   key: 'operation',\n      //   width: 80,\n      //   render: (text, item, index, ) => {\n      //     return (\n      //       <div>\n      //         <Button\n      //           className=\"link-button\"\n      //           icon='edit'\n      //           type=\"primary\"\n      //           onClick={\n      //             () => {\n      //               Modal.confirm({\n      //                 title: 'edit',\n      //                 content: JSON.stringify(item),\n      //                 onOk: (callback = () => {\n      //                   message.info('修改成功')\n      //                 },\n      //                 ) => {\n      //                   message.warning('这里改写成向后端发送验证的流程// TODO')\n      //                   callback()\n      //                   if (this.state.tableType === \"checkbox\") {\n      //                     this.setState((prevState) => ({\n      //                       selectedItems: selectTag([...prevState.selectedItems], [item]),\n      //                       selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n      //                     }))\n      //                   }\n      //                 },\n      //                 onCancel: () => {\n      //                   if (this.state.tableType === \"checkbox\") {\n      //                     this.setState((prevState) => ({\n      //                       selectedItems: selectTag([...prevState.selectedItems], [item]),\n      //                       selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n      //                     }))\n      //                   }\n      //                 }\n      //               },\n      //               )\n      //             }\n      //           }\n      //         >\n      //           编辑\n      //         </Button>\n      //         <Button\n      //           className=\"link-button\"\n      //           type=\"danger\"\n      //           icon='delete'\n      //           onClick={\n      //             () => {\n      //               Modal.confirm({\n      //                 title: 'delete',\n      //                 content: JSON.stringify(item),\n      //                 onOk: (callback = () => {\n      //                   message.info('删除成功')\n      //                   this.setState((prevState) => ({\n      //                     dataSource: removeFromArray([...prevState.dataSource], [item]),\n      //                     selectedItems: removeFromArray([...prevState.selectedItems], [item]),\n      //                     selectedRowKeys: removeFromArray([...prevState.selectedRowKeys], [item.key])\n      //                   }))\n      //                 },\n      //                 ) => {\n      //                   message.warning('这里改写成向后端发送验证的流程// TODO')\n      //                   callback()\n      //                 },\n      //                 onCancel: () => {\n      //                   if (this.state.tableType === \"checkbox\") {\n      //                     this.setState((prevState) => ({\n      //                       selectedItems: selectTag([...prevState.selectedItems], [item]),\n      //                       selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\n      //                     }))\n      //                   }\n      //                 }\n      //               }\n      //               )\n      //             }\n      //           }\n      //         >\n      //           删除\n      //         </Button>\n\n      //       </div>\n      //     )\n      //   }\n      // },\n    ];\n\n    return (\n      <div>\n        <Modal\n          visibleModal={this.state.visibleModal}\n          title={this.state.visibleModal}\n          visible={this.state.visibleModal !== null}\n          onCancel={() => {\n            this.setState(() => ({ visibleModal: null }))\n          }}\n          footer={null}\n        >\n          <UserForm\n            userInfo={this.state.selectedItems}\n            wrappedComponentRef={(inst) => this.userForm = inst}\n          />\n        </Modal>\n        <Card>\n          <FilterForm\n            changeFilterRules={this.changeFilterRules}\n            changeGlobalFilter={this.changeGlobalFilter}\n            // 将子组件实例关联到父组件属性上, 方便调用子组件成员变量和函数\n            wrappedComponentRef={(inst) => { this.filterForm = inst }} />\n        </Card>\n        <Card\n          className=\"operate-wrap\"\n          style={{\n            marginTop: '10px',\n          }}>\n          多选模式\n             <Switch\n            checkedChildren=\"开\"\n            unCheckedChildren=\"关\"\n            defaultChecked={this.state.tableType === \"checkbox\"}\n            onClick={(checked) => this.changeTableType(checked)}\n          />\n          <Button\n            icon='edit'\n            type=\"primary\"\n            disabled={this.state.selectedItems.length > 1}\n            onClick={\n              () => {\n                if (this.state.selectedItems.length < 1) return\n                this.setState(() => ({ visibleModal: 'edit' }))\n              }\n            }\n          >\n            编辑\n              </Button>\n          <Button\n            type=\"danger\"\n            icon=\"delete\"\n            onClick={\n              () => {\n                if (this.state.selectedItems.length < 1) return\n                Modal.confirm({\n                  title: 'delete',\n                  content: JSON.stringify(this.state.selectedItems),\n                  onOk: (callback = () => {\n                    message.info('删除成功')\n                    this.setState((prevState) => ({\n                      dataSource: selectTag([...prevState.dataSource], prevState.selectedItems),\n                      selectedItems: [], selectedRowKeys: []\n                    }))\n                  },\n                  ) => {\n                    message.warning('这里改写成向后端发送验证的流程// TODO')\n                    callback()\n                  },\n                }\n                )\n              }\n            }\n          >\n            删除\n            </Button>\n        </Card>\n        <div className=\"content-wrap\">\n          <Table\n            size=\"small\"\n            bordered\n            loading={this.state.loading}\n            columns={columns}\n            // 关闭列表 滚动\n            // scroll={{ \n            //   x: 1440,\n            //   y: 580 \n            // }}  \n            dataSource={this.state.dataSource}\n            //若没有pagination属性，会根据antd中table的默认样式，每页显示10个数据，将这一次请求获得的数据进行纯前端样式的静态的分页，*点击切换页面按钮不会发送请求\n            // 若 有 pagination={false}的 设定，tab le不会分页， 此次请求获得的所有数据会全部显示出来\n            pagination={this.state.pagination}\n            // pagination={false}\n            // onChange 事件会自动传入这三个参数\n            onChange={(pagination, filters, sorter) => {\n              this.setState(() => ({\n                sortOrder: sorter.order\n              }))\n            }}\n            rowSelection={\n              {\n                type: this.state.tableType,\n                selectedRowKeys: this.state.selectedRowKeys,\n                // 点击行首小圆圈才能触发onChange事件\n                onChange: (selectedRowKeys, selectedItems) => {\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }),\n                  )\n                }\n              }\n            }\n            onRow={(selectedItem) => ({\n              onClick: () => {\n                if (this.state.tableType === 'checkbox') {\n                  let selectedItems = selectTag([...this.state.selectedItems], [selectedItem])\n                  let selectedRowKeys = selectTag([...this.state.selectedRowKeys], [selectedItem.key])\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }))\n                }\n                if (this.state.tableType === 'radio') {\n                  let selectedItems = [selectedItem]\n                  let selectedRowKeys = [selectedItem.key]\n                  this.setState(() => ({\n                    selectedRowKeys,\n                    selectedItems,\n                  }))\n                }\n              },\n              onMouseEnter: () => { },\n              onDoubleClick: () => {\n                Modal.confirm({\n                  title: '详细信息',\n                  content: `\n                  ${selectedItem.name}\n                  ${roleMap[selectedItem.role]}\n                  ${selectedItem.email}\n                `,\n                  onCancel: () => { },\n                  onOk: () => { },\n                })\n              },\n            }\n            )}\n          />\n        </div>\n      </div >\n    )\n  }\n}\n\nclass UserForm extends React.Component {\n\n  render() {\n    let userInfo = this.props.userInfo[0] || {};\n    const formItemLayout = {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      }\n    };\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form layout=\"horizontal\">\n        <FormItem label=\"用户名\" {...formItemLayout}>\n          {\n            getFieldDecorator('name', {\n              initialValue: userInfo.name\n            })(\n              <Input type=\"text\" placeholder=\"请输入用户名\" />\n            )\n          }\n        </FormItem>\n        <FormItem label=\"角色\" {...formItemLayout}>\n          {\n            getFieldDecorator('role', {\n              initialValue: userInfo.role\n            })(\n              <RadioGroup>\n                <Radio value={1}>用户</Radio>\n                <Radio value={2}>商户</Radio>\n              </RadioGroup>\n            )\n          }\n        </FormItem>\n        <FormItem label=\"状态\" {...formItemLayout}>\n          {\n            getFieldDecorator('status', {\n              initialValue: userInfo.status\n            })(\n              <Select>\n                <Option value={1}>已审核</Option>\n                <Option value={2}>未审核</Option>\n                <Option value={3}>已冻结</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem>\n          <Button\n            onClick={() => { message.warning('这里改写成向后端发送验证的流程// TODO') }}\n          >\n            提交\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nUserForm = Form.create({})(UserForm);","import React, { Component } from 'react'\nimport { Input, Select, Form, Checkbox, Switch, Button, DatePicker } from 'antd'\nimport { getOptionList } from '../../utils'\nconst FormItem = Form.Item\n\nclass BaseForm extends Component {\n\n    initFormList = () => {\n        const { getFieldDecorator } = this.props.form\n        const formList = this.props.formList\n        const formItemList = []\n        if (formList && formList.length > 0) {\n            formList.forEach(\n                (item, i) => {\n                    let label = item.label\n                    let field = item.field\n                    let initialValue = item.initialValue || \"\"\n                    let placeholder = item.placeholder\n                    let width = item.width\n                    let list = item.list\n                    let type = item.type\n                    let switchFunc = item.switchFunc\n                    if (type === \"SWITCH\") {\n                        formItemList.push(\n                            <FormItem label={label} key={field} >\n                                {\n                                    getFieldDecorator(field, {\n                                        initialValue,\n                                    })(\n                                        <Switch\n                                            checkedChildren=\"开\"\n                                            unCheckedChildren=\"关\"\n                                            onClick={(checked) => switchFunc(checked)}\n                                        />\n                                    )\n                                }\n                            </FormItem>\n                        )\n                    }\n                    if (type === \"INPUT\") {\n                        formItemList.push(\n                            <FormItem label={label} key={field} >\n                                {\n                                    getFieldDecorator(field, {\n                                        initialValue,\n                                    })(\n                                        <Input type=\"text\" placeholder={placeholder} />\n                                    )\n                                }\n                            </FormItem>\n                        )\n                    }\n                    if (type === \"CHECKBOX\") {\n                        formItemList.push(\n                            <FormItem label={label} key={field} >\n                                {\n                                    getFieldDecorator(field, {\n                                        valuePropName: 'checked',\n                                        initialValue,// true|false\n                                    })(\n                                        <Checkbox>\n                                            {label}\n                                        </Checkbox>\n                                    )\n                                }\n                            </FormItem>\n                        )\n                    }\n                    if (item.type === 'TIME') {\n                        formItemList.push(\n                            <FormItem label=\"时间\" key={field}>\n                                {\n                                    getFieldDecorator('begin_time')(\n                                        <DatePicker\n                                            showTime={true}\n                                            placeholder={placeholder}\n                                            format=\"YYYY-MM-DD HH:mm:ss\" />\n                                    )\n                                }\n                            </FormItem >\n                        )\n                        formItemList.push(\n                            <FormItem label=\"~\" colon={false} key={field}>\n                                {\n                                    getFieldDecorator('end_time')(\n                                        <DatePicker\n                                            showTime={true}\n                                            placeholder={placeholder}\n                                            format=\"YYYY-MM-DD HH:mm:ss\" />\n                                    )\n                                }\n                            </FormItem>\n                        )\n                    }\n                    if (type === \"SELECT\") {\n                        formItemList.push(\n                            <FormItem label={label} key={field} >\n                                {\n                                    getFieldDecorator(field, {\n                                        initialValue,\n                                    })(\n                                        <Select\n                                            style={{ width }}\n                                            placeholder={placeholder}\n                                        >\n                                            {getOptionList(list)}\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n                        )\n                    }\n                }\n            )\n        }\n        return formItemList\n    }\n\n    handleSubmit = () => {\n        let fieldsValue = this.props.form.getFieldsValue()\n        console.log(fieldsValue)\n        // 由父组件传入的函数处理表单提交的数据\n        this.props.submitFunc(fieldsValue)\n    }\n\n    render() {\n        return (\n            <Form layout={this.props.layout}>\n                {this.initFormList()}\n                <Button type=\"primary\" onClick={() => this.handleSubmit()}>\n                    Done\n                </Button>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(BaseForm)","import React from 'react';\nimport { Card } from 'antd';\nimport BaseForm from '../../components/BaseForm'\nimport '../../style/common.scss'\n\n\nexport default class userTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n        this.formList = [\n            {\n                type: 'SELECT',\n                label: '订单类型',\n                field: 'type',\n                placeholder: '全部',\n                initialValue: '',\n                width: 100,\n                list: [{ id: '', name: '全部' }, { id: '1', name: '买入' }, { id: '2', name: '卖出' }]\n            },\n            {\n                type: 'SELECT',\n                label: '订单状态',\n                field: 'status',\n                placeholder: '全部',\n                initialValue: '1',\n                width: 100,\n                list: [{ id: '0', name: '全部' }, { id: '1', name: '待付款' }, { id: '2', name: '待确认' }, { id: '3', name: '已完成' }, {id: '4', name: '已过期' }]\n            },\n        ];\n    }\n\n\n    render = () => {\n        const columns = [\n            {\n                title: 'id',\n                dataIndex: 'id'\n            }, {\n                title: '用户名',\n                dataIndex: 'username'\n            }, {\n                title: '性别',\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女';\n                }\n            }, {\n                title: '状态',\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': \"咸🐟一条\",\n                        '2': '风华浪子',\n                        '3': '北大才子一枚',\n                        '4': '百度FE',\n                        '5': '创业者',\n                    };\n                    return config[state];\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday'\n            }, {\n                title: '联系地址',\n                dataIndex: 'address'\n            }, {\n                title: '早起时间',\n                dataIndex: 'time'\n            },\n        ];\n\n        return (\n            <div>\n                <Card>\n                    <BaseForm layout=\"inline\" submitFunc={() => { }} switchFunc={() => { }} formList={this.formList} />\n                </Card>\n            </div>\n        )\n    }\n}","const menuList = [\n    {\n        title: '首页',\n        key: '/home',\n        // children: [{\n        //     title: '子页',\n        //     key: '/home/child',\n\n        // }]\n    },\n    {\n        title: '用户管理',\n        key: '/manager/users',\n    },\n    {\n        title: '订单管理',\n        key: '/manager/orders',\n    },\n    {\n        title: '广告管理',\n        key: '/manager/ads',\n    },\n    {\n        title: '权限管理',\n        key: '/manager/permission',\n    },\n    {\n        title: '广告',\n        key: '/ads/index',\n    },\n    {\n        title: '游戏',\n        key: '/games',\n    },\n];\nexport default menuList;\n","// 本地缓存了菜单列表\nconst menus = {\n    undefined: [\n        {\n            title: '首页',\n            key: '/home',\n            // children: [{\n            //     title: '子页',\n            //     key: '/home/child',\n\n            // }]\n        },\n    ],\n    1: [\n        {\n            title: '首页',\n            key: '/home',\n        },\n        {\n            title: '用户管理',\n            key: '/manager/users',\n        },\n        {\n            title: '订单管理',\n            key: '/manager/orders',\n        },\n        {\n            title: '广告管理',\n            key: '/manager/ads',\n        },\n        {\n            title: '权限管理',\n            key: '/manager/permission',\n        },\n    ],\n    2: [\n        {\n            title: '首页',\n            key: '/home'\n        },\n        {\n            title: '广告',\n            key: '/ads/index',\n        },\n    ],\n    3: [\n        {\n            title: '首页',\n            key: '/home'\n        },\n        {\n            title: '广告',\n            key: '/ads/index',\n        },\n        {\n            title: '游戏',\n            key: '/games',\n        },\n    ],\n}\n\nexport const getMenus = (userType) => menus[userType]","import React from \"react\";\nimport { Table, message, Card, Button, Form, Modal, Input, Select, Tree, Transfer } from \"antd\";\nimport Ajax from \"../../components/Ajax\"\nimport menuConfig from \"./../../config/menuConfig\";\nimport { selectTag, pagination } from \"../../utils\"\nimport { getMenus } from '../../components/Api'\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { TreeNode } = Tree;\n// 或 const TreeNode = Tree.TreeNode\n\nexport default class PermissionUser extends React.Component {\n    state = {\n        isRoleVisible: false,\n        tableType: \"radio\",\n        selectedItems: [],\n    };\n\n    request = () => {\n        Ajax.ajax(\n            'get',\n            '/v1/roles',\n            { page: this.page },\n            'https://mook.sunlin.fun/mock/9',\n        )\n            .then(\n                data => {\n                    this.setState(\n                        () => (\n                            {\n                                dataSource: data.list,\n                                pagination: pagination(data, (current) => {\n                                    this.page = current\n                                    this.request()\n                                }),\n                            }\n                        )\n                    )\n                })\n            .catch(\n                () => message.error(\"数据渲染失败\")\n            )\n    }\n\n    componentWillMount() {\n        // 通过生命周期函数加载接口\n        this.request()\n    }\n\n    // 打开创建角色弹框\n    handleRole = () => {\n        this.setState({\n            isRoleVisible: true\n        });\n    };\n\n    // 角色提交\n    handleRoleSubmit = () => {\n        const data = this.roleForm.props.form.getFieldsValue();\n        this.setState({\n            isRoleVisible: false //关闭弹框\n        });\n        this.roleForm.props.form.resetFields(); // 调用表单重置(清空表单数据)\n        this.request(); //刷新列表数据\n    }\n\n    // 权限设置\n    handlePermission = () => {\n        let item = this.state.selectedItems[0]; //取出当前选中的项\n        this.setState({\n            isPermVisible: true,\n            detailInfo: item,\n            // menuInfo: item.menus,\n            menuInfo: (getMenus(item.role)).map(item => item.key),\n        });\n    };\n\n    handlePermEditSubmit = () => {\n        // 获取表单的值 ,添加wrappedComponentRef属性\n        let data = this.permForm.props.form.getFieldsValue();\n        data.role_key = this.state.selectedItem.key; // 将角色key传回\n        data.menus = this.state.menuInfo; // 需要将menus数据传到接口\n\n        this.setState({\n            isPermVisible: false\n        });\n        this.request(); //刷新列表数据\n    }\n\n    // 用户授权\n    handleUserAuth = () => {\n        let item = this.state.selectedItems[0]; //取出当前选中的项,为了兼容checkbox 使用数组存取\n        this.setState({\n            isUserVisible: true,\n            detailInfo: item\n        });\n        // 获取目标数据\n        this.getRoleUserList(item.id);\n    };\n\n    // 获取用户角色列表\n    getRoleUserList = id => {\n        // id: 角色id , 获取角色id\n        Ajax.ajax(\n            'get',\n            '/v1/role/users',\n            { page: this.page },\n            'https://mook.sunlin.fun/mock/9',\n        )\n            .then(res => {\n                if (res) {\n                    //请求成功,筛选目标用户\n                    this.getAuthUserList(res.list);\n                }\n            });\n    };\n\n    // 筛选目标用户\n    getAuthUserList = dataSource => {\n        // 将数据(目标用户,全量用户)进行过滤的方法\n        const roleUsers = [];\n        const targetKeys = [];\n        if (dataSource && dataSource.length > 0) {\n            // 有数据\n            for (let i = 0; i < dataSource.length; i++) {\n                const data = {\n                    key: dataSource[i].key,\n                    title: dataSource[i].name,\n                    role: dataSource[i].role\n                };\n\n                console.log(data.role, this.state.selectedItems[0])\n                if (data.role === this.state.selectedItems[0].role) {\n                    // 如果role相同，说明是目标用户,加到targetKeys数组\n                    targetKeys.push(data.key);\n                }\n                //全量用户\n                roleUsers.push(data)\n                this.setState(() => ({\n                    roleUsers,\n                    targetKeys\n                }))\n            }\n        }\n    }\n\n    // 用户授权提交\n    handleUserSubmit = () => {\n        let data = {};\n        data.user_ids = this.state.targetKeys;\n        data.role = this.state.selectedItems[0].role;\n        this.setState({\n            isUserVisible: false\n        });\n        this.request();\n    }\n\n    render() {\n        const columns = [\n            {\n                title: \"角色\",\n                dataIndex: \"role_name\",\n            },\n            {\n                title: \"使用状态\",\n                dataIndex: \"status\",\n                render: (status) => {\n                    return status === 0 ? \"停用\" : \"启用\";\n                }\n            },\n            {\n                title: \"可访问功能\",\n                dataIndex: \"role\",\n                render: (role) =>\n                    getMenus(role).map(item => `${item.title}, `)\n            },\n        ];\n        return (\n            <div>\n                <Card>\n                    <Button\n                        type=\"primary\"\n                        onClick={this.handleRole}>\n                        添加新角色\n          </Button>\n                    <Button\n                        type=\"primary\"\n                        style={{ marginLeft: 10, marginRight: 10 }}\n                        onClick={this.handlePermission}\n                        disabled={this.state.selectedItems.length < 1}\n                    >\n                        设置权限\n          </Button>\n                    <Button\n                        type=\"primary\"\n                        onClick={this.handleUserAuth}\n                        disabled={!(this.state.selectedItems.length > 0)}\n                    >\n                        用户授权\n          </Button>\n                </Card>\n                <div className=\"content-wrap\">\n\n                    <Table\n                        size=\"small\"\n                        bordered\n                        loading={this.state.loading}\n                        columns={columns}\n                        // 关闭列表 滚动\n                        // scroll={{ \n                        //   x: 1440,\n                        //   y: 580 \n                        // }}  \n                        dataSource={this.state.dataSource}\n                        //若没有pagination属性，会根据antd中table的默认样式，每页显示10个数据，将这一次请求获得的数据进行纯前端样式的静态的分页，*点击切换页面按钮不会发送请求\n                        // 若 有 pagination={false}的 设定，tab le不会分页， 此次请求获得的所有数据会全部显示出来\n                        pagination={this.state.pagination}\n                        // pagination={false}\n                        // onChange 事件会自动传入这三个参数\n                        onChange={(pagination, filters, sorter) => {\n                            this.setState(() => ({\n                                sortOrder: sorter.order\n                            }))\n                        }}\n                        rowSelection={\n                            {\n                                type: this.state.tableType,\n                                selectedRowKeys: this.state.selectedRowKeys,\n                                // 点击行首小圆圈才能触发onChange事件\n                                onChange: (selectedRowKeys, selectedItems) => {\n                                    this.setState(() => ({\n                                        selectedRowKeys,\n                                        selectedItems,\n                                    }),\n                                    )\n                                }\n                            }\n                        }\n                        onRow={(selectedItem) => ({\n                            onClick: () => {\n                                if (this.state.tableType === 'checkbox') {\n                                    let selectedItems = selectTag([...this.state.selectedItems], [selectedItem])\n                                    let selectedRowKeys = selectTag([...this.state.selectedRowKeys], [selectedItem.key])\n                                    this.setState(() => ({\n                                        selectedRowKeys,\n                                        selectedItems,\n                                    }))\n                                }\n                                if (this.state.tableType === 'radio') {\n                                    let selectedItems = [selectedItem]\n                                    let selectedRowKeys = [selectedItem.key]\n                                    this.setState(() => ({\n                                        selectedRowKeys,\n                                        selectedItems,\n                                    }))\n                                }\n                            },\n                            onMouseEnter: () => { },\n                        })\n                        }\n                    />\n                </div>\n                <Modal\n                    title=\"添加新角色\"\n                    visible={this.state.isRoleVisible}\n                    onOk={this.handleRoleSubmit}\n                    onCancel={() => {\n                        this.roleForm.props.form.resetFields(); // 表单重置\n                        this.setState({\n                            isRoleVisible: false\n                        });\n                    }}\n                >\n                    <RoleForm\n                        wrappedComponentRef={inst => {\n                            this.roleForm = inst;\n                        }}\n                    />\n                </Modal>\n                <Modal\n                    title=\"设置权限\"\n                    visible={this.state.isPermVisible}\n                    width={600}\n                    onOk={this.handlePermEditSubmit}\n                    onCancel={() => {\n                        this.setState(() => ({\n                            isPermVisible: false\n                        }));\n                    }}\n                >\n                    <PermEditForm\n                        wrappedComponentRef={inst => {\n                            this.permForm = inst;\n                        }}\n                        detailInfo={this.state.detailInfo}\n                        menuInfo={this.state.menuInfo}\n                        patchMenuInfo={checkedKeys => {\n                            this.setState({\n                                menuInfo: checkedKeys\n                            });\n                        }}\n                    />\n                </Modal>\n                <Modal\n                    title=\"用户授权\"\n                    visible={this.state.isUserVisible}\n                    width={800}\n                    onOk={this.handleUserSubmit}\n                    onCancel={() => {\n                        this.setState({\n                            isUserVisible: false\n                        });\n                    }}\n                >\n                    <RoleAuthForm\n                        wrappedComponentRef={inst => {\n                            this.userAuthForm = inst;\n                        }}\n                        detailInfo={this.state.detailInfo}\n                        targetKeys={this.state.targetKeys}\n                        roleUsers={this.state.roleUsers}\n                        patchUserInfo={(targetKeys) => {\n                            this.setState({ targetKeys });\n                        }}\n                    />\n                </Modal>\n            </div>\n        );\n    }\n}\n\n// 子组件一-------角色绑定\nclass RoleForm extends React.Component {\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                span: 5\n            },\n            wrapperCol: {\n                span: 19\n            }\n        };\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"角色名称\" {...formItemLayout}>\n                    {getFieldDecorator(\"role\")(\n                        <Input type=\"text\" placeholder=\"请输入角色名称\" />\n                    )}\n                </FormItem>\n                <FormItem label=\"状态\" {...formItemLayout}>\n                    {getFieldDecorator(\"state\")(\n                        <Select>\n                            <Option value={1}>开启</Option>\n                            <Option value={2}>关闭</Option>\n                        </Select>\n                    )}\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nRoleForm = Form.create({})(RoleForm);\n\n// 子组件二---------设置权限\nclass PermEditForm extends React.Component {\n    onCheck = checkedKeys => {\n        // 将当前选中的项传回父组件  PermEditForm\n        this.props.patchMenuInfo(checkedKeys);\n    };\n\n    // 递归渲染权限列表\n    /**\n     *\n     * @param data:menuConfig.js 导入的权限列表\n     */\n    renderTreeNodes = data => {\n        // 判断当前是否有子节点,如果有子节点children继续遍历,直到没有子节点为止\n        return data.map(item => {\n            if (item.children) {\n                // 判断当前是否有子节点\n                return (\n                    <TreeNode title={item.title} key={item.key}>\n                        {this.renderTreeNodes(item.children)}\n                    </TreeNode>\n                );\n            } else {\n                return <TreeNode title={item.title} key={item.key} />;\n                // 也可写作\n                // return <TreeNode {...item}/>\n            }\n        });\n    };\n\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                span: 5\n            },\n            wrapperCol: {\n                span: 19\n            }\n        };\n        const { getFieldDecorator } = this.props.form;\n        const detail_info = this.props.detailInfo;\n        const menu_info = this.props.menuInfo;\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"角色名称\" {...formItemLayout}>\n                    <Input disabled placeholder={detail_info.role_name} />\n                </FormItem>\n                <FormItem label=\"状态\" {...formItemLayout}>\n                    {getFieldDecorator(\"status\", {\n                        initialValue: detail_info.status + \"\"\n                    })(\n                        <Select>\n                            <Option value=\"1\">启用</Option>\n                            <Option value=\"0\">停用</Option>\n                        </Select>\n                    )}\n                </FormItem>\n                <Tree\n                    checkable\n                    defaultExpandAll\n                    onCheck={checkedKeys => {\n                        // checkedKeys: 当前选中的节点\n                        this.onCheck(checkedKeys);\n                    }}\n                    checkedKeys={menu_info}\n                >\n                    <TreeNode title=\"平台权限\" key=\"platform_all\">\n                        {this.renderTreeNodes(menuConfig)}\n                    </TreeNode>\n                </Tree>\n            </Form>\n        );\n    }\n}\n\nPermEditForm = Form.create({})(PermEditForm);\n\n// 子组件三---------用户授权\nclass RoleAuthForm extends React.Component {\n    filterOption = (inputValue, option) => {\n        return option.title.indexOf(inputValue) > -1;\n    };\n\n    handleChange = (targetKeys) => {\n        this.props.patchUserInfo(targetKeys);\n    };\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                span: 5\n            },\n            wrapperCol: {\n                span: 19\n            }\n        };\n        const detail_info = this.props.detailInfo;\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"角色名称\" {...formItemLayout}>\n                    <Input disabled placeholder={detail_info.role_name} />\n                </FormItem>\n\n                <FormItem label=\"选择用户\" {...formItemLayout}>\n                    <Transfer\n                        listStyle={{ width: 250, height: 400 }}\n                        dataSource={this.props.roleUsers}\n                        titles={[\"待选用户\", \"已选用户\"]}\n                        showSearch\n                        filterOption={this.filterOption} //过滤选项\n                        targetKeys={this.props.targetKeys} //目标数据源\n                        onChange={this.handleChange} //控制目标数据源\n                        render={item => item.title} //渲染数据\n                    />\n                </FormItem>\n            </Form>\n        );\n    }\n}\nRoleAuthForm = Form.create({})(RoleAuthForm);","import React, { Component } from 'react';\nimport { goToUrl } from '../../utils'\nimport { Route, HashRouter, Switch } from 'react-router-dom'\nimport { Modal, Form, Card, Input, Icon, Button, message, } from 'antd';\nexport default class StepForm extends Component {\n    render() {\n        return (\n            <HashRouter>\n                <div>\n                    <Route path=\"/ads\"\n                        render={() =>\n                            <div>\n                                <Switch>\n                                    <Route\n                                        exact={true}\n                                        path=\"/ads/info\"\n                                        render={() =>\n                                            <Info\n                                                selectedItem={this.props.selectedItem}\n                                            />\n                                        }\n                                    />\n                                    <Route\n                                        path=\"/ads/confirm\"\n                                        render={() =>\n                                            <Confirm\n                                                refreshData={this.props.refreshData}\n                                            />}\n                                    />\n                                </Switch>\n                            </div>\n                        }\n                    />\n                </div>\n            </HashRouter >\n        );\n    }\n}\n\nconst FormItem = Form.Item;\nclass FormInfo extends React.Component {\n    handleSubmit = () => {//绑定提交事件进行校验\n        let userInfo = this.props.form.getFieldsValue();//object对象,包含表单中所有信息\n        // 校验表单输入是否符合规则， 不符合err会包含信息, 校验通过err为空\n        this.props.form.validateFields((err, values) => {\n            if (!err) {// ${}  是变量\n                message.success(\"正在下单\")\n                // 前端验证完毕, 向后端发起调用\n                goToUrl('/ads/confirm')\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: 24,\n                sm: 4\n            },\n            wrapperCol: {\n                xs: 24,\n                sm: 12\n            }\n        };\n        return (\n            <div>\n                <Card title=\"下单\"\n                >\n                    <Form\n                        layout=\"horizontal\"\n                    >\n                        <FormItem>\n                            <p>{JSON.stringify(this.props.selectedItem)}</p>\n                        </FormItem>\n                        <FormItem\n                            label=\"交易量\"\n                            {...formItemLayout}\n                        >\n                            {\n                                getFieldDecorator('userName', {\n                                    initialValue: '',\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: '金额不能为空'\n                                        },\n                                        {\n                                            min: 1, max: 8,\n                                            message: '长度不在范围内'\n                                        },\n                                        {\n                                            pattern: new RegExp('^\\\\d+$', 'g'),\n                                            message: '必须为数字'\n                                        },\n                                    ]\n                                })(\n                                    <Input prefix={<Icon type=\"money-collect\" />} placeholder=\"请输入交易金额\" />\n                                )\n                            }\n                        </FormItem>\n                        <FormItem\n                            style={{\n                                marginLeft: 'auto',\n                                marginRight: 'auto',\n                                width: 200,\n                            }}\n                        >\n                            <Button\n                                type=\"primary\"\n                                onClick={\n                                    () => {\n                                        this.handleSubmit()\n                                    }\n                                }\n                            >\n                                确认订单\n            </Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n            </div >\n        )\n    }\n}\nconst Info = Form.create()(FormInfo)\n\nclass FormConfirm extends React.Component {\n    handleSubmit = () => {\n        goToUrl('/ads/index')\n        Modal.success({\n            title:\"请等待商户确认\"\n        })\n        this.props.refreshData()\n    }\n    render() {\n        return (\n            <Card title=\"付款码\">\n                <Form>\n                    <FormItem\n                    >\n                        <img alt=\"Cierra.jpg\" src=\"https://img.moegirl.org/common/thumb/a/aa/Cierra01.jpg/260px-Cierra01.jpg\" />\n                    </FormItem>\n                    <FormItem\n                        style={{\n                            margin: 'auto',\n                            width: 200,\n                        }}\n                    >\n                        <Button\n                            type=\"primary\"\n                            onClick={\n                                () => {\n                                    this.handleSubmit()\n                                }\n                            }\n                        >\n                            我已付款\n        </Button>\n                    </FormItem>\n                </Form>\n            </Card>\n        )\n    }\n}\n\nconst Confirm = Form.create()(FormConfirm)","import React, { Component } from 'react';\nimport {Card, Table, Modal, Button, message, Badge, } from 'antd';\nimport Ajax from '../../components/Ajax'\nimport { pagination, selectTag, goToUrl } from '../../utils'\nimport { NavLink } from 'react-router-dom'\nimport '../../style/common.scss'\nimport StepForm from '../../components/StepForm'\n\nexport default class adTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      tableType: 'radio',\n      dataSource: [],\n      allSource: [],\n      selectedRowKeys: [],\n      selectedItems: [],\n      pagination: {},\n      sortOrder: false,\n      isInitial: false,\n      globalFilter: false,\n      formKey: Math.random().toString(18).substr(2),\n      defaultFilterRules: () => true,\n    }\n    this.page = 1\n    this.userForm = undefined\n    this.filterRules = this.state.defaultFilterRules\n  }\n  componentWillMount = () => {\n    //  初始化载入ads页面时， 将路由跳转到ads/index\n    goToUrl('/ads/index')\n  }\n\n  componentDidMount = () => {\n    this.request()\n  }\n\n  changeFormKey = () => {\n    this.setState(() => ({\n      formKey: Math.random().toString(18).substr(2),\n    }\n    )\n    )\n  }\n\n  request = () => {\n    Ajax.ajax(\n      'get',\n      '/v1/users',\n      { page: this.page },\n      'https://mook.sunlin.fun/mock/9',\n    )\n      .then(\n        data => {\n          if (!this.state.globalFilter) {\n            this.filterRules = this.state.defaultFilterRules\n          }\n          this.setState(\n            () => (\n              {\n                allSource: data.list,\n                dataSource: data.list.filter(this.filterRules),\n                loading: false,\n\n                isInitial: true,\n                pagination: pagination(data, (current) => {\n                  this.page = current\n                  this.request()\n                })\n              }))\n        }).catch(() => message.error(\"数据渲染失败\")\n        )\n  }\n\n\n  render() {\n    const roleMap = {\n      1: \"管理员\",\n      2: \"商户\",\n      3: \"普通用户\",\n    }\n\n    const statusMap = {\n      1: <Badge status=\"success\" text=\"已审批\" />,\n      2: <Badge status=\"default\" text=\"未审批\" />,\n      3: <Badge status=\"error\" text=\"冻结中\" />,\n    }\n\n    const columns = [{\n      title: 'id',\n      key: 'id',\n      width: 80,\n      dataIndex: 'id',\n      sorter: (a, b) => a.id - b.id,\n      SortOrder: this.state.sortOrder,\n      // 横向滚动头部锁定\n      // fixed: 'left',\n    },\n    {\n      title: '用户名',\n      key: 'name',\n      width: 80,\n      dataIndex: 'name',\n      // fixed: 'left',\n    },\n    {\n      title: '邮箱',\n      key: 'email',\n      width: 80,\n      dataIndex: 'email'\n    },\n    {\n      title: '角色',\n      key: 'role',\n      width: 80,\n      dataIndex: 'role',\n      render: (text) => {\n        return roleMap[text]\n      },\n    },\n    {\n      title: '状态',\n      key: 'status',\n      width: 80,\n      dataIndex: 'status',\n      render: (text) => statusMap[text],\n    },\n    ]\n\n    return (\n      <div className=\"content-wrap\">\n        <Modal\n          visible={\n            this.state.selectedItems.length > 0\n            &&\n            (\n              this.props.match.params.page === \"info\"\n              ||\n              this.props.match.params.page === \"confirm\"\n            )\n          }\n          // 退出下单界面， 广告信息需要更新\n          onCancel={\n            () => {\n              message.warning('下单中断')\n              goToUrl('/ads/index')\n              this.request()\n            }\n          }\n          afterClose={this.changeModalKey}\n          footer={null}\n        >\n          <StepForm\n            key={this.state.formKey}\n            selectedItem={this.state.selectedItems[0]}\n            refreshData={this.request}\n            changeModalKey={this.changeMormKey} />\n        </Modal >\n        <Card>\n          <Button\n            type=\"primary\"\n          >\n            <NavLink to=\"/ads/info\">下单</NavLink>\n          </Button>\n        </Card>\n        <Table\n          size=\"small\"\n          bordered\n          loading={this.state.loading}\n          columns={columns}\n          // 关闭列表 滚动\n          // scroll={{ \n          //   x: 1440,\n          //   y: 580 \n          // }}  \n          dataSource={this.state.dataSource}\n          //若没有pagination属性，会根据antd中table的默认样式，每页显示10个数据，将这一次请求获得的数据进行纯前端样式的静态的分页，*点击切换页面按钮不会发送请求\n          // 若 有 pagination={false}的 设定，tab le不会分页， 此次请求获得的所有数据会全部显示出来\n          pagination={this.state.pagination}\n          // pagination={false}\n          // onChange 事件会自动传入这三个参数\n          onChange={(pagination, filters, sorter) => {\n            this.setState(() => ({\n              sortOrder: sorter.order\n            }))\n          }}\n          rowSelection={\n            {\n              type: this.state.tableType,\n              selectedRowKeys: this.state.selectedRowKeys,\n              // 点击行首小圆圈才能触发onChange事件\n              onChange: (selectedRowKeys, selectedItems) => {\n                this.setState(() => ({\n                  selectedRowKeys,\n                  selectedItems,\n                }),\n                )\n              }\n            }\n          }\n          onRow={(selectedItem) => ({\n            onClick: () => {\n              if (this.state.tableType === 'checkbox') {\n                let selectedItems = selectTag([...this.state.selectedItems], [selectedItem])\n                let selectedRowKeys = selectTag([...this.state.selectedRowKeys], [selectedItem.key])\n                this.setState(() => ({\n                  selectedRowKeys,\n                  selectedItems,\n                }))\n              }\n              if (this.state.tableType === 'radio') {\n                let selectedItems = [selectedItem]\n                let selectedRowKeys = [selectedItem.key]\n                this.setState(() => ({\n                  selectedRowKeys,\n                  selectedItems,\n                }))\n              }\n            },\n            onMouseEnter: () => { },\n            onDoubleClick: () => {\n              Modal.confirm({\n                title: '详细信息',\n                content: `\n                  ${selectedItem.name}\n                  ${roleMap[selectedItem.role]}\n                  ${selectedItem.email}\n                `,\n                onCancel: () => { },\n                onOk: () => { },\n              })\n            },\n          }\n          )}\n        />\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\"\nimport { actionCreator } from \"../../redux/action\"\nimport Logo from \"./logo.svg\"\nimport { Row, Col, Button } from \"antd\";\nimport \"./index.scss\";\nimport { goToUrl } from \"../../utils\"; //导入公共机制\n\n\nclass Header extends React.Component {\n    //声明 state变量 在setState之前要声明变量\n    render() {\n        return (\n            <div className=\"header\">\n                <Row className=\"header-top\">\n                    <Col span={6} className=\"logo\">\n                        <img src={Logo} alt=\"\" />\n                        <span>Logo</span>\n                    </Col>\n                    <Col span={18} style={{ float: \"right\" }}>\n                        {\n                            this.props.isLogin ?\n                                <span>\n                                    <Button>{this.props.user.userName}</Button>\n                                    <Button onClick={() => {\n                                        goToUrl('/login')\n                                        // 安全退出 需要清空本地缓存的token\n                                        sessionStorage.removeItem(\"token\")\n                                        localStorage.removeItem(\"token\")\n                                        this.props.clearLoginData()\n                                    }}\n                                    >安全登出</Button>\n                                </span>\n                                :\n                                <span>\n                                    <Button onClick={() => goToUrl('/login')}>登录</Button>\n                                    <Button onClick={() => goToUrl('/register')}>注册</Button>\n                                </span>\n                        }\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\n// props 属性\nconst mapStateToProps = (state) => ({\n    isLogin: state.isLogin,\n    user: state.user\n})\n\n// props 方法\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        clearLoginData() {\n            dispatch(actionCreator.clearLoginData())\n        },\n    }\n}\n\n// 把逻辑方法与UI组件连接起来变成新容器组件\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React from 'react';\nimport './index.scss'\nexport default class Footer extends React.Component{\n    render(){\n        return(\n            <div className=\"footer\">\n                版权所有：©2019\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport { connect } from \"react-redux\"\nimport { Menu } from \"antd\"; //导入子组件菜单\nimport { NavLink } from 'react-router-dom'\nimport { getMenus } from '../Api'\nimport \"./index.scss\";\n\nconst SubMenu = Menu.SubMenu;\n\nclass NavLeft extends React.Component {\n  \n  //菜单渲染\n  //通过递归(遍历)实现菜单(是一个List)的渲染\n  renderMenu = data => {\n    return data.map(item => {\n      //如果item有子元素,遍历自己,再次调用,直到子节点加载完毕\n      if (item.children) {\n        return (\n          <SubMenu title={item.title} key={item.key}>\n            {this.renderMenu(item.children)}\n          </SubMenu>\n        );\n      }\n      return (\n        <Menu.Item title={undefined} key={item.key}>\n          <NavLink to={item.key}>{item.title}</NavLink>\n        </Menu.Item>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <Menu mode=\"horizontal\">\n        {/* 依据redux中保存的用户类型返回导航菜单,并进行渲染 */}\n        {this.renderMenu(getMenus(this.props.userType))}\n      </Menu>\n    );\n  }\n}\n// props 属性\nconst mapStateToProps = (state) => ({\n  isLogin: state.isLogin,\n  user: state.user,\n  userType: state.userType,\n})\n\n// 把逻辑方法与UI组件连接起来变成新容器组件\nexport default connect(mapStateToProps)(NavLeft)","import React from \"react\";\nimport { Row } from \"antd\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport NavLeft from \"./components/NavLeft\";\nimport { connect } from \"react-redux\"\nimport { actionCreator } from \"./redux/action\"\nimport './style/common.scss'\nimport 'antd/dist/antd.css'\nimport Ajax from './components/Ajax'\n\nclass MainPage extends React.Component {\n  componentWillMount = () => {\n    if (!this.props.isLogin) {\n      if (localStorage.getItem('token')) {\n        let token = localStorage.getItem('token')\n        this.autoLoginByToken(token)\n      } else if (sessionStorage.getItem('token')) {\n        let token = sessionStorage.getItem('token')\n        this.autoLoginByToken(token)\n      } else {\n        console.log('用户需手动登录')\n      }\n    }\n  }\n  autoLoginByToken = (token) =>\n    new Promise((resolve, reject) => {\n      Ajax.ajax(\n        'post',\n        '/user-login',\n        { 'token': token },\n        // 'http://192.168.0.105:8080',\n        'https://mook.sunlin.fun/mock/9',\n      )\n        .then(\n          (res) => {\n            this.props.saveLoginData(res.data)\n            sessionStorage.setItem(\"token\", res.data.token);\n            return resolve(res.data)\n          }\n        ).catch((error) => {\n          console.log(\"token 自动登录失败\", error)\n        })\n    })\n  render() {\n    return (\n      <Row className=\"container\" >\n        <Row className=\"main\">\n          <Header />\n          <Row className=\"nav-left\">\n            <NavLeft />\n          </Row>\n          <Row className=\"content\">\n            {this.props.children}\n          </Row>\n          <Footer />\n        </Row>\n      </Row>\n    );\n  }\n}\n\n// props 属性\nconst mapStateToProps = (state) => ({\n  isLogin: state.isLogin,\n  user: state.user\n})\n\n// props 方法\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    saveLoginData(data) {\n      dispatch(actionCreator.saveLoginData(data))\n    },\n  }\n}\n\n// 把逻辑方法与UI组件连接起来变成新容器组件\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage)","import React from \"react\"\nimport { Card } from \"antd\"\nimport '../../style/common.scss'\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n} from \"bizcharts\";\n\nclass Home extends React.Component {\n  render() {\n    const data = [\n      {\n        day: \"1\",\n        value: 0.89\n      },\n      {\n        day: \"2\",\n        value: 0.99\n      },\n      {\n        day: \"3\",\n        value: 0.96\n      },\n      {\n        day: \"4\",\n        value: 1.12\n      },\n      {\n        day: \"5\",\n        value: 1.22\n      },\n      {\n        day: \"6\",\n        value: 0.88\n      },\n      {\n        day: \"7\",\n        value: 1.11\n      },\n      {\n        day: \"8\",\n        value: 1.09\n      },\n      {\n        day: \"9\",\n        value: 1.3\n      }\n    ];\n    const cols = {\n      value: {\n        min: 0\n      },\n      day: {\n        range: [0, 1]\n      }\n    };\n    return (\n      <div className=\"content-wrap\">\n        <Card title=\"走势\">\n          <Chart height={400} data={data} scale={cols} forceFit>\n            <Axis name=\"day\" />\n            <Axis name=\"value\" />\n            <Tooltip\n              crosshairs={{\n                type: \"y\"\n              }}\n            />\n            <Geom type=\"line\" position=\"day*value\" size={2} />\n            <Geom\n              type=\"point\"\n              position=\"day*value\"\n              size={4}\n              shape={\"circle\"}\n              style={{\n                stroke: \"#fff\",\n                lineWidth: 1\n              }}\n            />\n          </Chart>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nexport default class NoMatch extends React.Component {\n  render() {\n    return (\n      <div style={{ textAlign: \"center\", fontSize: \"24\" }}>404 No Found!!!</div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport App from \"./app\"\nimport Common from \"./common\"\nimport Login from \"./pages/form/login\";\nimport Register from \"./pages/form/register\";\nimport UserTable from \"./pages/manager/userTable\";\nimport OrderTable from \"./pages/manager/orderTable\";\nimport PermissionTable from \"./pages/manager/permissionTable\";\nimport adTable from \"./pages/ad/\"\nimport MainPage from \"./mainpage\";\nimport Home from \"./pages/home\";\nimport Nomatch from \"./pages/nomatch\"\n\nexport default class IRouter extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <App>\n          <Switch>\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/common\"\n              render={() =>\n                <Common>\n                  <div>hello</div>\n                </Common>\n              }\n            />\n            <Route path=\"/\"\n              render={() =>\n                <MainPage>\n                  <div>\n                    <Switch>\n                      <Route exact={true} path=\"/\" >\n                        <Redirect to=\"/home/\" />\n                      </Route>\n                      <Route path=\"/home\" component={Home} />\n                      <Route path=\"/ads/:page\" component={adTable} />\n                      <Route path=\"/manager/users\" component={UserTable} />\n                      <Route path=\"/manager/orders\" component={OrderTable} />\n                      <Route path=\"/manager/permission\" component={PermissionTable} />\n                    </Switch>\n                  </div>\n                </MainPage>\n              }\n            />\n            <Route component={Nomatch} />\n          </Switch>\n        </App>\n      </HashRouter >\n    );\n  }\n}\n","import { actionTypes } from '../action'\n\nconst defaultState = {\n  isLogin: false,\n  user: {},\n  userType: undefined,\n  token: undefined,\n}\n\nexport default (previousState = defaultState, action) => {\n\n  const newState = JSON.parse(JSON.stringify(previousState))\n\n  if (action.type === actionTypes.CLEAR_LOGIN_DATA) {\n    newState.isLogin = false\n    newState.user = {}\n    newState.token = undefined\n    newState.userType = undefined\n  }\n\n  if (action.type === actionTypes.SAVE_LOGIN_DATA) {\n    newState.isLogin = true\n    //传来的data就是获取的user对象\n    newState.user = action.data\n    newState.token = action.data.token\n    newState.userType = action.data.userType\n  }\n\n  return newState\n}","import { createStore, applyMiddleware, compose } from 'redux'\nimport reducer from '../reducer'\nimport thunk from 'redux-thunk'\n\n//通过数组扩展中间件\nconst middleware = [thunk]\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(...middleware),\n  // other store enhancers if any\n);\nconst store = createStore(reducer, enhancer);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Router from \"./router\"\nimport { Provider } from 'react-redux'\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router />\n  </Provider >,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}