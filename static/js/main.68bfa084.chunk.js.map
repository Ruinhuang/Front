{"version":3,"sources":["app.jsx","common.jsx","components/Ajax/index.jsx","pages/form/login.jsx","pages/form/register.jsx","utils/index.jsx","pages/manager/userTable.jsx","components/BaseForm/index.jsx","components/BaseTable/index.jsx","pages/manager/orderTable.jsx","components/StepForm/index.jsx","pages/ad/index.jsx","components/Header/index.jsx","components/Footer/index.jsx","config/menuConfig.jsx","components/NavLeft/index.jsx","admin.jsx","pages/home/index.jsx","pages/nomatch/index.jsx","router.jsx","index.jsx"],"names":["App","react_default","a","createElement","className","this","props","children","Component","Common","Ajax","ajax","method","url","data","baseURL","timeout","arguments","length","undefined","Promise","resolve","reject","axios","params","then","response","status","res","code","notification","success","message","msg","error","catch","Modal","title","content","FormItem","Form","Item","FormLogin","post","formData","handleSubmit","_this","form","getFieldsValue","validateFields","err","values","getFieldDecorator","formItemLayout","labelCol","xs","sm","wrapperCol","card","es_form","layout","Object","assign","label","initialValue","rules","pattern","RegExp","required","input","placeholder","prefix","icon","type","style","marginLeft","marginRight","width","es_button","onClick","React","create","RadioGroup","Radio","Group","FormRegister","passwordValidator","rule","value","callback","pwd","password","console","log","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","info","file","originFileObj","imageUrl","setState","userImg","loading","componentDidMount","offsetLayout","span","offset","register_FormItem","min","max","validator","es_radio","valuePropName","es_checkbox","href","Option","Select","goToUrl","p","window","location","concat","split","selectTag","arr","items","forEach","item","position","indexOf","push","splice","removeFromArray","pagination","onChange","current","parseInt","page","pageSize","page_size","total","showTotal","getOptionList","options","id","key","name","FilterForm","render","userTable_FormItem","es_select","userTable_Option","display","es_switch","checkedChildren","unCheckedChildren","checked","changeGlobalFilter","margin","ruleInfo","changeFilterRules","role","userTable","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","request","componentDidUpdate","state","globalFilter","filterForm","resetFields","filterRules","prevState","dataSource","allSource","filter","changeTableType","tableType","defaultFilterRules","list","ButtonGroup","Button","roleMap","1","2","3","statusMap","badge","text","columns","dataIndex","sorter","b","sortOrder","index","confirm","JSON","stringify","onOk","warning","selectedItems","toConsumableArray","selectedRowKeys","onCancel","userTable_FilterForm","wrappedComponentRef","inst","marginTop","defaultChecked","padding","float","table","size","bordered","filters","order","rowSelection","onRow","selectedItem","onMouseEnter","onDoubleClick","email","BaseForm","initFormList","formList","formItemList","i","field","switchFunc","BaseForm_FormItem","date_picker","showTime","format","colon","fieldsValue","submitFunc","ETable","onRowClick","record","selectedIds","updateSelectedItem","selectKey","onSelectChange","selectedRows","map","onSelectAll","selected","changeRows","getOptions","name_list","用户名","手机号","onSelect","row_selection","components_BaseForm","BaseTable_ETable","sex","4","5","StepForm","react_router_dom","react_router","path","exact","Info","Confirm","refreshData","FormInfo","_this3","StepForm_FormItem","FormConfirm","_this4","_this5","alt","src","adTable","componentWillMount","changeFormKey","formKey","Math","random","toString","substr","isInitial","SortOrder","modal","visible","match","afterClose","changeModalKey","footer","StepForm_StepForm","changeMormKey","to","Header","isLogin","sysTime","userName","setInterval","time","checkTime","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","formateDate","getTime","row","col","Footer","menuList","SubMenu","Menu","NavLeft","renderMenu","menu","menuTreeNode","MenuConfig","mode","Admin","src_components_Header","NavLeft_NavLeft","Footer_Footer","Home","NoMatch","textAlign","fontSize","IRouter","app_App","admin_Admin","component","UserTable","OrderTable","Login","Register","common_Common","Nomatch","ReactDOM","router_IRouter","document","getElementById"],"mappings":"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","file":"static/js/main.68bfa084.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Common extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.props.children\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios'\r\nimport { notification, Modal, message } from 'antd';\r\nexport default class Ajax {\r\n    static ajax = (\r\n        method,\r\n        url,\r\n        data,\r\n        baseURL,\r\n        timeout = 5000,\r\n    ) => (\r\n            new Promise(\r\n                (resolve, reject) => {\r\n                    // 默认写的是get 方法的封装\r\n                    axios(\r\n                        method === 'get' ?\r\n                            {\r\n                                method,\r\n                                url,\r\n                                params: data,\r\n                                baseURL,\r\n                                timeout,\r\n                            }\r\n                            :\r\n                            {\r\n                                method,\r\n                                url,\r\n                                data,\r\n                                baseURL,\r\n                                timeout,\r\n                            }\r\n                    ).then(response => {\r\n                        // HTTP状态码返回200说明HTTP协议层面被正常处理\r\n                        if (response.status === 200) {\r\n                            // response 是http请求的响应返回\r\n                            // res 是业务层面的数据\r\n                            let res = response.data\r\n                            // 业务状态码返回200说明业务层面请求被正常处理\r\n                            if (res.code === 200) {\r\n                                notification.success({\r\n                                    message: res.msg,\r\n                                })\r\n                                resolve(res.data)\r\n                            } else {\r\n                                notification.error({\r\n                                    message: res.msg,\r\n                                })\r\n                            }\r\n                        } else {\r\n                            notification.error({\r\n                                message: response.status,\r\n                            })\r\n                            reject(response.data)\r\n                        }\r\n                    }\r\n                    ).catch(() => {\r\n                        Modal.error({\r\n                            title: \"请求发送失败\",\r\n                            content: \"网络状态异常\",\r\n                        })\r\n                    })\r\n                }\r\n            )\r\n        )\r\n}","import React from \"react\";\r\nimport { Button, Card, Form, Icon, Input, message } from \"antd\";\r\nimport Ajax from '../../components/Ajax'\r\n\r\nconst FormItem = Form.Item;\r\nclass FormLogin extends React.Component {\r\n\r\n  post = (formData) => {\r\n    Ajax.ajax(\r\n      'post',\r\n      '/user-login',\r\n      formData,\r\n      'http://192.168.0.105:8080',\r\n    )\r\n      .then(() => { }).catch(() => { })\r\n  }\r\n\r\n  handleSubmit = () => {//绑定提交事件进行校验\r\n    let formData = this.props.form.getFieldsValue();// 可以(获取表单中)object对象\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {// ${}  是变量\r\n        this.post(formData)\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: 24,\r\n        sm: 4\r\n      },\r\n      wrapperCol: {\r\n        xs: 24,\r\n        sm: 12\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <Card title=\"登录\"\r\n        >\r\n          <Form\r\n            layout=\"horizontal\"\r\n          >\r\n            <FormItem label=\"手机号\" {...formItemLayout}>\r\n              {\r\n                getFieldDecorator('phone', {\r\n                  initialValue: '',\r\n                  rules: [\r\n                    {\r\n                      pattern: new RegExp('^\\\\d+$', 'g'),\r\n                      message: '手机号码必须为字母'\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: '手机号不能为空'\r\n                    },\r\n                  ]\r\n                })(\r\n                  <Input placeholder=\"请输入手机号码\" />\r\n                )\r\n              }\r\n            </FormItem>\r\n            <FormItem\r\n              label=\"密码\"\r\n              {...formItemLayout}\r\n            >\r\n              {\r\n                getFieldDecorator('password', {\r\n                  initialValue: '',\r\n                  rules: [{\r\n                    required: true,\r\n                    message: '密码不能为空'\r\n                  }]\r\n                })(\r\n                  <Input prefix={<Icon type=\"lock\" />} type=\"password\" placeholder=\"请输入密码\" />\r\n                )\r\n              }\r\n\r\n            </FormItem>\r\n            <FormItem\r\n              style={{\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                width: 200,\r\n              }}\r\n            >\r\n              <Button type=\"primary\" onClick={this.handleSubmit}>登录</Button>\r\n            </FormItem>\r\n          </Form>\r\n        </Card>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(FormLogin);","import React from 'react';\r\nimport {\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Radio,\r\n  Checkbox,\r\n  message,\r\n} from \"antd\";\r\nimport Ajax from '../../components/Ajax'\r\nimport '../../style/common.scss'\r\n\r\nconst FormItem = Form.Item;\r\nconst RadioGroup = Radio.Group;\r\n\r\nclass FormRegister extends React.Component {\r\n\r\n  post = (formData) => {\r\n    Ajax.ajax(\r\n      'post',\r\n      '/user-register',\r\n      formData,\r\n      'http://192.168.0.105:8080',\r\n    )\r\n      .then(() => { }).catch(() => { })\r\n  }\r\n\r\n  passwordValidator = (rule, value, callback) => {\r\n    var pwd = this.props.form.getFieldsValue().password\r\n    console.log(rule, value, pwd)\r\n    if (value && value !== pwd) {\r\n      callback('密码输入不一致！')\r\n    }\r\n    callback()\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    let formData = this.props.form.getFieldsValue();// 可以(获取表单中)object对象\r\n    this.post(formData)\r\n\r\n\r\n  };\r\n  getBase64 = (img, callback) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  };\r\n\r\n  handleChange = (info) => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      this.getBase64(info.file.originFileObj, imageUrl => this.setState({\r\n        userImg: imageUrl,\r\n        loading: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: 24,\r\n        sm: 4\r\n      },\r\n      wrapperCol: {\r\n        xs: 24,\r\n        sm: 12\r\n      }\r\n    };\r\n    const offsetLayout = {\r\n      wrapperCol: {\r\n        xs: 24,\r\n        sm: {\r\n          span: 12,\r\n          offset: 4\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Card title=\"注册\">\r\n          <Form layout=\"horizontal\">\r\n            <FormItem label=\"用户名\" {...formItemLayout}>\r\n              {\r\n                getFieldDecorator('userName', {\r\n                  initialValue: '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '用户名不能为空'\r\n                    },\r\n                    {\r\n                      min: 5, max: 10,\r\n                      message: '长度不在范围内'\r\n                    },\r\n                    {\r\n                      pattern: new RegExp('^\\\\w+$', 'g'),\r\n                      message: '用户名必须为字母或数字'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input placeholder=\"请输入用户名\" />\r\n                )\r\n              }\r\n            </FormItem>\r\n            <FormItem label=\"密码\" {...formItemLayout}>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  initialValue: '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '密码不能为空'\r\n                    },\r\n                  ]\r\n\r\n                })(\r\n                  <Input placeholder=\"请输入密码\" />\r\n                )\r\n              }\r\n            </FormItem>\r\n            <FormItem label=\"确认密码\" {...formItemLayout}>\r\n              {\r\n                getFieldDecorator('passwordcomfire', {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '请再次输入密码',\r\n                    },\r\n                    {\r\n                      validator: this.passwordValidator,\r\n                    }\r\n                  ],\r\n                },\r\n                )(\r\n                  <Input placeholder=\"请输入密码\" />\r\n                )\r\n              }\r\n            </FormItem>\r\n            <FormItem label=\"用户角色\" {...formItemLayout}>\r\n              {\r\n                getFieldDecorator('userType', {\r\n                  initialValue: \"0\",\r\n                  rules: [{\r\n                    required: true,\r\n                    message: '用户角色必选'\r\n                  },\r\n                  ]\r\n                }\r\n                )(\r\n                  <RadioGroup>\r\n                    <Radio value=\"0\">普通用户</Radio>\r\n                    <Radio value=\"1\">商户</Radio>\r\n                  </RadioGroup>\r\n                )\r\n              }\r\n            </FormItem>\r\n            <FormItem label=\"手机号\" {...formItemLayout}>\r\n              {\r\n                getFieldDecorator('phone', {\r\n                  initialValue: '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '手机号不能为空'\r\n                    },\r\n                  ]\r\n                })(\r\n                  <Input placeholder=\"请输入手机号码\" />\r\n                )\r\n              }\r\n            </FormItem>\r\n            <FormItem label=\"邮箱地址\" {...formItemLayout}>\r\n              {\r\n                getFieldDecorator('email', {\r\n                  initialValue: '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '邮箱地址不能为空'\r\n                    },\r\n                    {\r\n                      pattern: new RegExp(/^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/),\r\n                      message: '请输入正确的邮箱地址'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input placeholder=\"请输入邮箱地址\" />\r\n                )\r\n              }\r\n            </FormItem>\r\n            <FormItem label=\"身份证号\" {...formItemLayout}>\r\n              {\r\n                getFieldDecorator('idCard', {\r\n                  initialValue: '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '需填写身份证'\r\n                    },\r\n                    {\r\n                      pattern: new RegExp(/^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/),\r\n                      message: '请输入正确的身法证号'\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input placeholder=\"请输入身份证号\" />\r\n                )\r\n              }\r\n            </FormItem>\r\n            <FormItem {...offsetLayout}>\r\n              {\r\n                getFieldDecorator('register', {\r\n                  valuePropName: 'checked',\r\n                  initialValue: true,\r\n                })(\r\n                  <Checkbox>我已阅读过<button className=\"link-button\" href=\"#\" >协议</button></Checkbox>\r\n                )\r\n              }\r\n            </FormItem>\r\n            <FormItem {...offsetLayout}>\r\n              <Button type=\"primary\" onClick={this.handleSubmit}>注册</Button>\r\n            </FormItem>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(FormRegister);","import React from 'react'\r\nimport { Select } from 'antd'\r\nconst Option = Select.Option\r\n\r\nexport const formateDate = (time) => {\r\n  const checkTime = (time) => {\r\n    return time < 10 ? \"0\" + time : time\r\n  }\r\n  if (!time) return '';\r\n  let date = new Date(time);\r\n  return date.getFullYear() + '-' + checkTime(date.getMonth() + 1) +\r\n    '-' + checkTime(date.getDate()) + ' ' +\r\n    checkTime(date.getHours()) + \":\" + checkTime(date.getMinutes()) + \":\" + checkTime(date.getSeconds());\r\n}\r\n\r\nexport const goToUrl = p =>\r\n  window.location.href = `${window.location.href.split('#')[0]}#${p}`\r\n\r\nexport const selectTag = (arr, items) => {\r\n  // 非幂等\r\n  items.forEach(item => {\r\n    let position = arr.indexOf(item)\r\n    if (position < 0) {\r\n      arr.push(item)\r\n    } else {\r\n      arr.splice(position, 1)\r\n    }\r\n  });\r\n  return arr\r\n}\r\n\r\nexport const removeFromArray = (arr, items) => {\r\n  // 非幂等\r\n  items.forEach(item => {\r\n    let position = arr.indexOf(item)\r\n    if (position >= 0) {\r\n      arr.splice(position, 1)\r\n    }\r\n  });\r\n  return arr\r\n}\r\n\r\nexport const pagination = (data, callback) => ({\r\n  onChange: current => callback(current),\r\n  current: parseInt(data.page),\r\n  pageSize: parseInt(data.page_size),\r\n  total: parseInt(data.total),\r\n  showTotal: () => (`共${data.total}条数据`),\r\n})\r\n\r\n\r\nexport const getOptionList = data => {\r\n  let options = []\r\n  if (!data) {\r\n    return options\r\n  }\r\n  data.forEach(item => {\r\n    options.push(\r\n      <Option value={item.id} key={item.id}>\r\n        {item.name}\r\n      </Option>\r\n    )\r\n  }\r\n  )\r\n  return options\r\n}","import React from 'react';\r\nimport { Card, Table, Form, Modal, Button, message, Badge, Select, Switch } from 'antd';\r\nimport Ajax from '../../components/Ajax'\r\nimport { pagination, selectTag, removeFromArray } from '../../utils/index'\r\nimport '../../style/common.scss'\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\n// child component FilterFrom\r\nclass FilterForm extends React.Component {\r\n\r\n  render = () => {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form layout=\"inline\">\r\n        <FormItem label=\"角色\">\r\n          {\r\n            getFieldDecorator('role',\r\n              {\r\n                initialValue: \"\"\r\n              }\r\n            )(\r\n              <Select\r\n                style={{ width: 100 }}\r\n              >\r\n                <Option value=\"\">全部</Option>\r\n                <Option value=\"1\">管理员</Option>\r\n                <Option value=\"2\">商户</Option>\r\n                <Option value=\"3\">普通用户</Option>\r\n              </Select>\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem label=\"状态\">\r\n          {\r\n            getFieldDecorator('status',\r\n              {\r\n                initialValue: \"\"\r\n              }\r\n            )(\r\n              <Select\r\n                style={{ width: 100 }}\r\n              >\r\n                <Option value=\"\">全部</Option>\r\n                <Option value=\"1\">已审批</Option>\r\n                <Option value=\"2\">未审批</Option>\r\n                <Option value=\"3\">冻结中</Option>\r\n              </Select>\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem>\r\n          <div style={{ display: \"inline-block\" }}>\r\n            全局过滤\r\n          <Switch\r\n              checkedChildren=\"开\"\r\n              unCheckedChildren=\"关\"\r\n              onClick={(checked) => this.props.changeGlobalFilter(checked)}\r\n            />\r\n          </div>\r\n          <Button\r\n            type=\"primary\"\r\n            style={{ margin: '0 20px' }}\r\n            onClick={() => {\r\n              let ruleInfo = this.props.form.getFieldsValue()//object对象,包含表单中所有信息\r\n              // 根据filterFrom提交的内容构建过滤规则\r\n              let rules = item => (((!ruleInfo.status) || (item.status === parseInt(ruleInfo.status))) && (((!ruleInfo.role) || (item.role === parseInt(ruleInfo.role)))))\r\n              this.props.changeFilterRules(rules)\r\n            }}\r\n          >筛选结果\r\n          </Button>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nFilterForm = Form.create({})(FilterForm);\r\n\r\nexport default class userTable extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      tableType: \"radio\",\r\n      dataSource: [],\r\n      allSource: [],\r\n      selectedRowKeys: [],\r\n      selectedItems: [],\r\n      pagination: {},\r\n      sortOrder: false,\r\n      globalFilter: false,\r\n      defaultFilterRules: () => true,\r\n    }\r\n    this.page = 1\r\n    this.filterRules = this.state.defaultFilterRules\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.request()\r\n  }\r\n  componentDidUpdate = () => {\r\n    if (!this.state.globalFilter) {\r\n      this.filterForm.props.form.resetFields()\r\n    }\r\n  }\r\n\r\n  changeFilterRules = rules => {\r\n    this.filterRules = rules\r\n    this.setState(prevState => ({ dataSource: prevState.allSource.filter(this.filterRules) }))\r\n  }\r\n\r\n  changeGlobalFilter = checked => {\r\n    this.setState(\r\n      () => ({\r\n        globalFilter: checked,\r\n      })\r\n    )\r\n  }\r\n\r\n  changeTableType = checked => {\r\n    this.setState(\r\n      () => ({\r\n        tableType: checked ? \"checkbox\" : \"radio\",\r\n      })\r\n    )\r\n  }\r\n\r\n  request = () => {\r\n    Ajax.ajax(\r\n      'get',\r\n      '/v1/users',\r\n      { page: this.page },\r\n      'https://mook.sunlin.fun/mock/9',\r\n    )\r\n      .then(\r\n        data => {\r\n          if (!this.state.globalFilter) {\r\n            this.filterRules = this.state.defaultFilterRules\r\n          }\r\n          this.setState(\r\n            () => (\r\n              {\r\n                allSource: data.list,\r\n                dataSource: data.list.filter(this.filterRules),\r\n                loading: false,\r\n                pagination: pagination(data, (current) => {\r\n                  this.page = current\r\n                  if (!this.state.globalFilter) {\r\n                    // 翻页时将子组件标记重置\r\n                    this.filterForm.props.form.resetFields()\r\n                  }\r\n                  this.request()\r\n                }),\r\n              }\r\n            )\r\n          )\r\n        })\r\n      .catch(\r\n        () => message.error(\"数据渲染失败\")\r\n      )\r\n  }\r\n\r\n\r\n\r\n  render = () => {\r\n    const ButtonGroup = Button.Group\r\n    const roleMap = {\r\n      1: \"管理员\",\r\n      2: \"商户\",\r\n      3: \"普通用户\",\r\n    }\r\n    const statusMap = {\r\n      1: <Badge status=\"success\" text=\"已审批\" />,\r\n      2: <Badge status=\"default\" text=\"未审批\" />,\r\n      3: <Badge status=\"error\" text=\"冻结中\" />,\r\n    }\r\n    const columns = [\r\n      {\r\n        title: 'id',\r\n        key: 'id',\r\n        width: 80,\r\n        dataIndex: 'id',\r\n        sorter: (a, b) => {\r\n          return a.id - b.id\r\n        },\r\n        sortOrder: this.state.sortOrder,\r\n        // 横向滚动头部锁定\r\n        // fixed: 'left',\r\n      },\r\n      {\r\n        title: '用户名',\r\n        key: 'name',\r\n        width: 80,\r\n        dataIndex: 'name',\r\n        // fixed: 'left',\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        key: 'email',\r\n        width: 80,\r\n        dataIndex: 'email'\r\n      },\r\n      {\r\n        title: '角色',\r\n        key: 'role',\r\n        width: 80,\r\n        dataIndex: 'role',\r\n        render: (text) => {\r\n          return roleMap[text]\r\n        }\r\n      },\r\n      {\r\n        title: '状态',\r\n        key: 'status',\r\n        width: 80,\r\n        dataIndex: 'status',\r\n        render: (text) => {\r\n          return statusMap[text]\r\n        }\r\n      },\r\n      {\r\n        title: 'operation',\r\n        key: 'operation',\r\n        width: 80,\r\n        render: (text, item, index, ) => {\r\n          return (\r\n            <div>\r\n              <Button\r\n                className=\"link-button\"\r\n                icon='edit'\r\n                type=\"primary\"\r\n                onClick={\r\n                  () => {\r\n                    Modal.confirm({\r\n                      title: 'edit',\r\n                      content: JSON.stringify(item),\r\n                      onOk: (callback = () => {\r\n                        message.info('修改成功')\r\n                      },\r\n                      ) => {\r\n                        message.warning('这里改写成向后端发送验证的流程// TODO')\r\n                        callback()\r\n                        if (this.state.tableType === \"checkbox\") {\r\n                          this.setState((prevState) => ({\r\n                            selectedItems: selectTag([...prevState.selectedItems], [item]),\r\n                            selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\r\n                          }))\r\n                        }\r\n                      },\r\n                      onCancel: () => {\r\n                        if (this.state.tableType === \"checkbox\") {\r\n                          this.setState((prevState) => ({\r\n                            selectedItems: selectTag([...prevState.selectedItems], [item]),\r\n                            selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\r\n                          }))\r\n                        }\r\n                      }\r\n                    },\r\n                    )\r\n                  }\r\n                }\r\n              >\r\n                编辑\r\n              </Button>\r\n              <Button\r\n                className=\"link-button\"\r\n                type=\"danger\"\r\n                icon='delete'\r\n                onClick={\r\n                  () => {\r\n                    Modal.confirm({\r\n                      title: 'delete',\r\n                      content: JSON.stringify(item),\r\n                      onOk: (callback = () => {\r\n                        message.info('删除成功')\r\n                        this.setState((prevState) => ({\r\n                          dataSource: removeFromArray([...prevState.dataSource], [item]),\r\n                          selectedItems: removeFromArray([...prevState.selectedItems], [item]),\r\n                          selectedRowKeys: removeFromArray([...prevState.selectedRowKeys], [item.key])\r\n                        }))\r\n                      },\r\n                      ) => {\r\n                        message.warning('这里改写成向后端发送验证的流程// TODO')\r\n                        callback()\r\n                      },\r\n                      onCancel: () => {\r\n                        if (this.state.tableType === \"checkbox\") {\r\n                          this.setState((prevState) => ({\r\n                            selectedItems: selectTag([...prevState.selectedItems], [item]),\r\n                            selectedRowKeys: selectTag([...prevState.selectedRowKeys], [item.key])\r\n                          }))\r\n                        }\r\n                      }\r\n                    }\r\n                    )\r\n                  }\r\n                }\r\n              >\r\n                删除\r\n              </Button>\r\n\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <FilterForm\r\n            changeFilterRules={this.changeFilterRules}\r\n            changeGlobalFilter={this.changeGlobalFilter}\r\n            // 将子组件实例关联到父组件属性上, 方便调用子组件成员变量和函数\r\n            wrappedComponentRef={(inst) => { this.filterForm = inst }} />\r\n        </Card>\r\n        <Card style={{\r\n          marginTop: '10px',\r\n        }}>\r\n          <div style={{ display: \"inline-block\" }}>\r\n            多选模式\r\n             <Switch\r\n              checkedChildren=\"开\"\r\n              unCheckedChildren=\"关\"\r\n              defaultChecked={this.state.tableType === \"checkbox\"}\r\n              onClick={(checked) => this.changeTableType(checked)}\r\n            />\r\n          </div>\r\n          <ButtonGroup style={{ padding: '0', float: 'right' }}>\r\n            <Button\r\n              type=\"danger\"\r\n              icon=\"delete\"\r\n              onClick={\r\n                () => {\r\n                  if (this.state.selectedItems.length < 1) return\r\n                  Modal.confirm({\r\n                    title: 'delete',\r\n                    content: JSON.stringify(this.state.selectedItems),\r\n                    onOk: (callback = () => {\r\n                      message.info('删除成功')\r\n                      this.setState((prevState) => ({\r\n                        dataSource: selectTag([...prevState.dataSource], prevState.selectedItems),\r\n                        selectedItems: [], selectedRowKeys: []\r\n                      }))\r\n                    },\r\n                    ) => {\r\n                      message.warning('这里改写成向后端发送验证的流程// TODO')\r\n                      callback()\r\n                    },\r\n                  }\r\n                  )\r\n                }\r\n              }\r\n            >\r\n              批量删除\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Card>\r\n        <div className=\"content-wrap\">\r\n          <Table\r\n            size=\"small\"\r\n            bordered\r\n            loading={this.state.loading}\r\n            columns={columns}\r\n            // 关闭列表 滚动\r\n            // scroll={{ \r\n            //   x: 1440,\r\n            //   y: 580 \r\n            // }}  \r\n            dataSource={this.state.dataSource}\r\n            //若没有pagination属性，会根据antd中table的默认样式，每页显示10个数据，将这一次请求获得的数据进行纯前端样式的静态的分页，*点击切换页面按钮不会发送请求\r\n            // 若 有 pagination={false}的 设定，tab le不会分页， 此次请求获得的所有数据会全部显示出来\r\n            pagination={this.state.pagination}\r\n            // pagination={false}\r\n            // onChange 事件会自动传入这三个参数\r\n            onChange={(pagination, filters, sorter) => {\r\n              this.setState(() => ({\r\n                sortOrder: sorter.order\r\n              }))\r\n            }}\r\n            rowSelection={\r\n              {\r\n                type: this.state.tableType,\r\n                selectedRowKeys: this.state.selectedRowKeys,\r\n                // 点击行首小圆圈才能触发onChange事件\r\n                onChange: (selectedRowKeys, selectedItems) => {\r\n                  this.setState(() => ({\r\n                    selectedRowKeys,\r\n                    selectedItems,\r\n                  }),\r\n                  )\r\n                }\r\n              }\r\n            }\r\n            onRow={(selectedItem) => ({\r\n              onClick: () => {\r\n                if (this.state.tableType === 'checkbox') {\r\n                  let selectedItems = selectTag([...this.state.selectedItems], [selectedItem])\r\n                  let selectedRowKeys = selectTag([...this.state.selectedRowKeys], [selectedItem.key])\r\n                  this.setState(() => ({\r\n                    selectedRowKeys,\r\n                    selectedItems,\r\n                  }))\r\n                }\r\n                if (this.state.tableType === 'radio') {\r\n                  let selectedItems = [selectedItem]\r\n                  let selectedRowKeys = [selectedItem.key]\r\n                  this.setState(() => ({\r\n                    selectedRowKeys,\r\n                    selectedItems,\r\n                  }))\r\n                }\r\n              },\r\n              onMouseEnter: () => { },\r\n              onDoubleClick: () => {\r\n                Modal.confirm({\r\n                  title: '详细信息',\r\n                  content: `\r\n                  ${selectedItem.name}\r\n                  ${roleMap[selectedItem.role]}\r\n                  ${selectedItem.email}\r\n                `,\r\n                  onCancel: () => { },\r\n                  onOk: () => { },\r\n                })\r\n              },\r\n            }\r\n            )}\r\n          />\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Input, Select, Form, Checkbox, Switch, Button, DatePicker } from 'antd'\r\nimport { getOptionList } from '../../utils'\r\nconst FormItem = Form.Item\r\n\r\nclass BaseForm extends Component {\r\n\r\n    initFormList = () => {\r\n        const { getFieldDecorator } = this.props.form\r\n        const formList = this.props.formList\r\n        const formItemList = []\r\n        if (formList && formList.length > 0) {\r\n            formList.forEach(\r\n                (item, i) => {\r\n                    let label = item.label\r\n                    let field = item.field\r\n                    let initialValue = item.initialValue || \"\"\r\n                    let placeholder = item.placeholder\r\n                    let width = item.width\r\n                    let list = item.list\r\n                    let type = item.type\r\n                    let switchFunc = item.switchFunc\r\n                    if (type === \"SWITCH\") {\r\n                        formItemList.push(\r\n                            <FormItem label={label} key={field} >\r\n                                {\r\n                                    getFieldDecorator(field, {\r\n                                        initialValue,\r\n                                    })(\r\n                                        <Switch\r\n                                            checkedChildren=\"开\"\r\n                                            unCheckedChildren=\"关\"\r\n                                            onClick={(checked) => switchFunc(checked)}\r\n                                        />\r\n                                    )\r\n                                }\r\n                            </FormItem>\r\n                        )\r\n                    }\r\n                    if (type === \"INPUT\") {\r\n                        formItemList.push(\r\n                            <FormItem label={label} key={field} >\r\n                                {\r\n                                    getFieldDecorator(field, {\r\n                                        initialValue,\r\n                                    })(\r\n                                        <Input type=\"text\" placeholder={placeholder} />\r\n                                    )\r\n                                }\r\n                            </FormItem>\r\n                        )\r\n                    }\r\n                    if (type === \"CHECKBOX\") {\r\n                        formItemList.push(\r\n                            <FormItem label={label} key={field} >\r\n                                {\r\n                                    getFieldDecorator(field, {\r\n                                        valuePropName: 'checked',\r\n                                        initialValue,// true|false\r\n                                    })(\r\n                                        <Checkbox>\r\n                                            {label}\r\n                                        </Checkbox>\r\n                                    )\r\n                                }\r\n                            </FormItem>\r\n                        )\r\n                    }\r\n                    if (item.type === 'TIME') {\r\n                        formItemList.push(\r\n                            <FormItem label=\"时间\" key={field}>\r\n                                {\r\n                                    getFieldDecorator('begin_time')(\r\n                                        <DatePicker\r\n                                            showTime={true}\r\n                                            placeholder={placeholder}\r\n                                            format=\"YYYY-MM-DD HH:mm:ss\" />\r\n                                    )\r\n                                }\r\n                            </FormItem >\r\n                        )\r\n                        formItemList.push(\r\n                            <FormItem label=\"~\" colon={false} key={field}>\r\n                                {\r\n                                    getFieldDecorator('end_time')(\r\n                                        <DatePicker\r\n                                            showTime={true}\r\n                                            placeholder={placeholder}\r\n                                            format=\"YYYY-MM-DD HH:mm:ss\" />\r\n                                    )\r\n                                }\r\n                            </FormItem>\r\n                        )\r\n                    }\r\n                    if (type === \"SELECT\") {\r\n                        formItemList.push(\r\n                            <FormItem label={label} key={field} >\r\n                                {\r\n                                    getFieldDecorator(field, {\r\n                                        initialValue,\r\n                                    })(\r\n                                        <Select\r\n                                            style={{ width }}\r\n                                            placeholder={placeholder}\r\n                                        >\r\n                                            {getOptionList(list)}\r\n                                        </Select>\r\n                                    )\r\n                                }\r\n                            </FormItem>\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        return formItemList\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        let fieldsValue = this.props.form.getFieldsValue()\r\n        console.log(fieldsValue)\r\n        // 由父组件传入的函数处理表单提交的数据\r\n        this.props.submitFunc(fieldsValue)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form layout=\"inline\">\r\n                {this.initFormList()}\r\n                <Button type=\"primary\" onClick={() => this.handleSubmit()}>\r\n                    Done\r\n                </Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create()(BaseForm)","import React from 'react'\r\nimport { Table } from 'antd'\r\nimport \"./index.scss\"\r\nexport default class ETable extends React.Component {\r\n\r\n    state = {}\r\n    //处理行点击事件\r\n    onRowClick = (record, index) => {\r\n        let rowSelection = this.props.rowSelection;\r\n        if (rowSelection === 'checkbox') {\r\n            let selectedRowKeys = this.props.selectedRowKeys;\r\n            let selectedIds = this.props.selectedIds;\r\n            let selectedItem = this.props.selectedItem || [];\r\n            if (selectedIds) {\r\n                const i = selectedIds.indexOf(record.id);\r\n                if (i === -1) {//避免重复添加\r\n                    selectedIds.push(record.id)\r\n                    selectedRowKeys.push(index);\r\n                    selectedItem.push(record);\r\n                } else {\r\n                    selectedIds.splice(i, 1);\r\n                    selectedRowKeys.splice(i, 1);\r\n                    selectedItem.splice(i, 1);\r\n                }\r\n            } else {\r\n                selectedIds = [record.id];\r\n                selectedRowKeys = [index]\r\n                selectedItem = [record];\r\n            }\r\n            this.props.updateSelectedItem(selectedRowKeys, selectedItem || {}, selectedIds);\r\n        } else {\r\n            let selectKey = [index];\r\n            const selectedRowKeys = this.props.selectedRowKeys;\r\n            if (selectedRowKeys && selectedRowKeys[0] === index) {\r\n                return;\r\n            }\r\n            this.props.updateSelectedItem(selectKey, record || {});\r\n        }\r\n    };\r\n\r\n    // 选择框变更\r\n    onSelectChange = (selectedRowKeys, selectedRows) => {\r\n        let rowSelection = this.props.rowSelection;\r\n        const selectedIds = [];\r\n        if (rowSelection === 'checkbox') {\r\n            selectedRows.map((item) => {\r\n                selectedIds.push(item.id);\r\n            });\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedIds: selectedIds,\r\n                selectedItem: selectedRows[0]\r\n            });\r\n        }\r\n        this.props.updateSelectedItem(selectedRowKeys, selectedRows[0], selectedIds);\r\n    };\r\n\r\n    onSelectAll = (selected, selectedRows, changeRows) => {\r\n        let selectedIds = [];\r\n        let selectKey = [];\r\n        selectedRows.forEach((item, i) => {\r\n            selectedIds.push(item.id);\r\n            selectKey.push(i);\r\n        });\r\n        this.props.updateSelectedItem(selectKey, selectedRows[0] || {}, selectedIds);\r\n    }\r\n\r\n    getOptions = () => {\r\n        let p = this.props;\r\n        const name_list = {\r\n            \"用户名\": 170,\r\n            \"手机号\": 80,\r\n        };\r\n        if (p.columns && p.columns.length > 0) {\r\n            p.columns.forEach((item) => {\r\n                //开始/结束 时间\r\n                if (!item.title) {\r\n                    return\r\n                }\r\n                if (!item.width) {\r\n                    if (item.title.indexOf(\"时间\") > -1 && item.title.indexOf(\"持续时间\") < 0) {\r\n                        item.width = 132\r\n                    } else if (item.title.indexOf(\"图片\") > -1) {\r\n                        item.width = 86\r\n                    } else if (item.title.indexOf(\"权限\") > -1 || item.title.indexOf(\"负责城市\") > -1) {\r\n                        item.width = '40%';\r\n                        item.className = \"text-left\";\r\n                    } else {\r\n                        if (name_list[item.title]) {\r\n                            item.width = name_list[item.title];\r\n                        }\r\n                    }\r\n                }\r\n                item.bordered = true;\r\n            });\r\n        }\r\n        const { selectedRowKeys } = this.props;\r\n        const rowSelection = {\r\n            type: 'radio',\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            onSelect: (record, selected, selectedRows) => {\r\n                console.log('...')\r\n            },\r\n            onSelectAll: this.onSelectAll\r\n        };\r\n        let row_selection = this.props.rowSelection;\r\n        // 当属性未false或者null时，说明没有单选或者复选列\r\n        if (row_selection === false || row_selection === null) {\r\n            row_selection = false;\r\n        } else if (row_selection === 'checkbox') {\r\n            //设置类型未复选框\r\n            rowSelection.type = 'checkbox';\r\n        } else {\r\n            //默认未单选\r\n            row_selection = 'radio';\r\n        }\r\n        return <Table\r\n            className=\"card-wrap page-table\"\r\n            bordered\r\n            {...this.props}\r\n            rowSelection={row_selection ? rowSelection : null}\r\n            onRow={(record, index) => ({\r\n                onClick: () => {\r\n                    if (!row_selection) {\r\n                        return;\r\n                    }\r\n                    this.onRowClick(record, index)\r\n                }\r\n            })}\r\n        />\r\n    };\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                {this.getOptions()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Card } from 'antd';\r\nimport BaseForm from '../../components/BaseForm'\r\nimport BaseTable from '../../components/BaseTable'\r\nimport '../../style/common.scss'\r\n\r\n\r\nexport default class userTable extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n        this.formList = [\r\n            {\r\n                type: 'SELECT',\r\n                label: '订单类型',\r\n                field: 'type',\r\n                placeholder: '全部',\r\n                initialValue: '',\r\n                width: 100,\r\n                list: [{ id: '', name: '全部' }, { id: '1', name: '买入' }, { id: '2', name: '卖出' }]\r\n            },\r\n            {\r\n                type: 'SELECT',\r\n                label: '订单状态',\r\n                field: 'status',\r\n                placeholder: '全部',\r\n                initialValue: '1',\r\n                width: 100,\r\n                list: [{ id: '0', name: '全部' }, { id: '1', name: '待付款' }, { id: '2', name: '待确认' }, { id: '3', name: '已完成' }, {id: '4', name: '已过期' }]\r\n            },\r\n        ];\r\n    }\r\n\r\n\r\n    render = () => {\r\n        const columns = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id'\r\n            }, {\r\n                title: '用户名',\r\n                dataIndex: 'username'\r\n            }, {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                render(sex) {\r\n                    return sex === 1 ? '男' : '女';\r\n                }\r\n            }, {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                render(state) {\r\n                    let config = {\r\n                        '1': \"咸🐟一条\",\r\n                        '2': '风华浪子',\r\n                        '3': '北大才子一枚',\r\n                        '4': '百度FE',\r\n                        '5': '创业者',\r\n                    };\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title: '生日',\r\n                dataIndex: 'birthday'\r\n            }, {\r\n                title: '联系地址',\r\n                dataIndex: 'address'\r\n            }, {\r\n                title: '早起时间',\r\n                dataIndex: 'time'\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm submitFunc={() => { }} switchFunc={() => { }} formList={this.formList} />\r\n                </Card>\r\n                <BaseTable\r\n                    columns={columns}\r\n                // updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                // selectedRowKeys={this.state.selectedRowKeys}\r\n                // selectedItem={this.state.selectedItem}\r\n                // dataSource={this.state.list}\r\n                // pagination={this.state.pagination}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { goToUrl } from '../../utils'\r\nimport { Route, HashRouter, Switch } from 'react-router-dom'\r\nimport { Form, Card, Input, Icon, Button, message, } from 'antd';\r\nexport default class StepForm extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <div>\r\n                    <Route path=\"/admin/ads\"\r\n                        render={() =>\r\n                            <div>\r\n                                <Switch>\r\n                                    <Route\r\n                                        exact={true}\r\n                                        path=\"/admin/ads/info\"\r\n                                        render={() =>\r\n                                            <Info\r\n                                                selectedItem={this.props.selectedItem}\r\n                                            />\r\n                                        }\r\n                                    />\r\n                                    <Route\r\n                                        path=\"/admin/ads/confirm\"\r\n                                        render={() =>\r\n                                            <Confirm\r\n                                                refreshData={this.props.refreshData}\r\n                                            />}\r\n                                    />\r\n                                </Switch>\r\n                            </div>\r\n                        }\r\n                    />\r\n                </div>\r\n            </HashRouter >\r\n        );\r\n    }\r\n}\r\n\r\nconst FormItem = Form.Item;\r\nclass FormInfo extends React.Component {\r\n    handleSubmit = () => {//绑定提交事件进行校验\r\n        let userInfo = this.props.form.getFieldsValue();//object对象,包含表单中所有信息\r\n        // 校验表单输入是否符合规则， 不符合err会包含信息, 校验通过err为空\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {// ${}  是变量\r\n                message.success(\"正在下单\")\r\n                // 前端验证完毕, 向后端发起调用\r\n                goToUrl('/admin/ads/confirm')\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: 24,\r\n                sm: 4\r\n            },\r\n            wrapperCol: {\r\n                xs: 24,\r\n                sm: 12\r\n            }\r\n        };\r\n        return (\r\n            <div>\r\n                <Card title=\"下单\"\r\n                >\r\n                    <Form\r\n                        layout=\"horizontal\"\r\n                    >\r\n                        <FormItem>\r\n                            <p>{JSON.stringify(this.props.selectedItem)}</p>\r\n                        </FormItem>\r\n                        <FormItem\r\n                            label=\"交易量\"\r\n                            {...formItemLayout}\r\n                        >\r\n                            {\r\n                                getFieldDecorator('userName', {\r\n                                    initialValue: '',\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '金额不能为空'\r\n                                        },\r\n                                        {\r\n                                            min: 1, max: 8,\r\n                                            message: '长度不在范围内'\r\n                                        },\r\n                                        {\r\n                                            pattern: new RegExp('^\\\\d+$', 'g'),\r\n                                            message: '必须为数字'\r\n                                        },\r\n                                    ]\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"money-collect\" />} placeholder=\"请输入交易金额\" />\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem\r\n                            style={{\r\n                                marginLeft: 'auto',\r\n                                marginRight: 'auto',\r\n                                width: 200,\r\n                            }}\r\n                        >\r\n                            <Button\r\n                                type=\"primary\"\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleSubmit()\r\n                                    }\r\n                                }\r\n                            >\r\n                                确认订单\r\n            </Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst Info = Form.create()(FormInfo)\r\n\r\nclass FormConfirm extends React.Component {\r\n    handleSubmit = () => {\r\n        message.success(`请等待商户确认`)\r\n        goToUrl('/admin/ads/index')\r\n        this.props.refreshData()\r\n    }\r\n    render() {\r\n        return (\r\n            <Card title=\"付款码\">\r\n                <Form>\r\n                    <FormItem\r\n                    >\r\n                        <img alt=\"Cierra.jpg\" src=\"https://img.moegirl.org/common/thumb/a/aa/Cierra01.jpg/260px-Cierra01.jpg\" />\r\n                    </FormItem>\r\n                    <FormItem\r\n                        style={{\r\n                            margin: 'auto',\r\n                            width: 200,\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={\r\n                                () => {\r\n                                    this.handleSubmit()\r\n                                }\r\n                            }\r\n                        >\r\n                            我已付款\r\n        </Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst Confirm = Form.create()(FormConfirm)","import React, { Component } from 'react';\r\nimport {Card, Table, Modal, Button, message, Badge, } from 'antd';\r\nimport Ajax from '../../components/Ajax'\r\nimport { pagination, selectTag, goToUrl } from '../../utils'\r\nimport { NavLink } from 'react-router-dom'\r\nimport '../../style/common.scss'\r\nimport StepForm from '../../components/StepForm'\r\n\r\nexport default class adTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      tableType: 'radio',\r\n      dataSource: [],\r\n      allSource: [],\r\n      selectedRowKeys: [],\r\n      selectedItems: [],\r\n      pagination: {},\r\n      sortOrder: false,\r\n      isInitial: false,\r\n      globalFilter: false,\r\n      formKey: Math.random().toString(18).substr(2),\r\n      defaultFilterRules: () => true,\r\n    }\r\n    this.page = 1\r\n    this.filterRules = this.state.defaultFilterRules\r\n  }\r\n  componentWillMount = () => {\r\n    //  初始化载入ads页面时， 将路由跳转到ads/index\r\n    goToUrl('/admin/ads/index')\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.request()\r\n  }\r\n\r\n  changeFormKey = () => {\r\n    this.setState(() => ({\r\n      formKey: Math.random().toString(18).substr(2),\r\n    }\r\n    )\r\n    )\r\n  }\r\n\r\n  request = () => {\r\n    Ajax.ajax(\r\n      'get',\r\n      '/v1/users',\r\n      { page: this.page },\r\n      'https://mook.sunlin.fun/mock/9',\r\n    )\r\n      .then(\r\n        data => {\r\n          if (!this.state.globalFilter) {\r\n            this.filterRules = this.state.defaultFilterRules\r\n          }\r\n          this.setState(\r\n            () => (\r\n              {\r\n                allSource: data.list,\r\n                dataSource: data.list.filter(this.filterRules),\r\n                loading: false,\r\n\r\n                isInitial: true,\r\n                pagination: pagination(data, (current) => {\r\n                  this.page = current\r\n                  this.request()\r\n                })\r\n              }))\r\n        }).catch(() => message.error(\"数据渲染失败\")\r\n        )\r\n  }\r\n\r\n\r\n  render() {\r\n    const roleMap = {\r\n      1: \"管理员\",\r\n      2: \"商户\",\r\n      3: \"普通用户\",\r\n    }\r\n\r\n    const statusMap = {\r\n      1: <Badge status=\"success\" text=\"已审批\" />,\r\n      2: <Badge status=\"default\" text=\"未审批\" />,\r\n      3: <Badge status=\"error\" text=\"冻结中\" />,\r\n    }\r\n\r\n    const columns = [{\r\n      title: 'id',\r\n      key: 'id',\r\n      width: 80,\r\n      dataIndex: 'id',\r\n      sorter: (a, b) => a.id - b.id,\r\n      SortOrder: this.state.sortOrder,\r\n      // 横向滚动头部锁定\r\n      // fixed: 'left',\r\n    },\r\n    {\r\n      title: '用户名',\r\n      key: 'name',\r\n      width: 80,\r\n      dataIndex: 'name',\r\n      // fixed: 'left',\r\n    },\r\n    {\r\n      title: '邮箱',\r\n      key: 'email',\r\n      width: 80,\r\n      dataIndex: 'email'\r\n    },\r\n    {\r\n      title: '角色',\r\n      key: 'role',\r\n      width: 80,\r\n      dataIndex: 'role',\r\n      render: (text) => {\r\n        return roleMap[text]\r\n      },\r\n    },\r\n    {\r\n      title: '状态',\r\n      key: 'status',\r\n      width: 80,\r\n      dataIndex: 'status',\r\n      render: (text) => statusMap[text],\r\n    },\r\n    ]\r\n\r\n    return (\r\n      <div className=\"content-wrap\">\r\n        <Modal\r\n          visible={\r\n            this.state.selectedItems.length > 0\r\n            &&\r\n            (\r\n              this.props.match.params.page === \"info\"\r\n              ||\r\n              this.props.match.params.page === \"confirm\"\r\n            )\r\n          }\r\n          // 退出下单界面， 广告信息需要更新\r\n          onCancel={\r\n            () => {\r\n              message.warning('下单中断')\r\n              goToUrl('/admin/ads/index')\r\n              this.request()\r\n            }\r\n          }\r\n          afterClose={this.changeModalKey}\r\n          footer={null}\r\n        >\r\n          <StepForm\r\n            key={this.state.formKey}\r\n            selectedItem={this.state.selectedItems[0]}\r\n            refreshData={this.request}\r\n            changeModalKey={this.changeMormKey} />\r\n        </Modal >\r\n        <Card>\r\n          <Button\r\n            type=\"primary\"\r\n          >\r\n            <NavLink to=\"/admin/ads/info\">下单</NavLink>\r\n          </Button>\r\n        </Card>\r\n        <Table\r\n          size=\"small\"\r\n          bordered\r\n          loading={this.state.loading}\r\n          columns={columns}\r\n          // 关闭列表 滚动\r\n          // scroll={{ \r\n          //   x: 1440,\r\n          //   y: 580 \r\n          // }}  \r\n          dataSource={this.state.dataSource}\r\n          //若没有pagination属性，会根据antd中table的默认样式，每页显示10个数据，将这一次请求获得的数据进行纯前端样式的静态的分页，*点击切换页面按钮不会发送请求\r\n          // 若 有 pagination={false}的 设定，tab le不会分页， 此次请求获得的所有数据会全部显示出来\r\n          pagination={this.state.pagination}\r\n          // pagination={false}\r\n          // onChange 事件会自动传入这三个参数\r\n          onChange={(pagination, filters, sorter) => {\r\n            this.setState(() => ({\r\n              sortOrder: sorter.order\r\n            }))\r\n          }}\r\n          rowSelection={\r\n            {\r\n              type: this.state.tableType,\r\n              selectedRowKeys: this.state.selectedRowKeys,\r\n              // 点击行首小圆圈才能触发onChange事件\r\n              onChange: (selectedRowKeys, selectedItems) => {\r\n                this.setState(() => ({\r\n                  selectedRowKeys,\r\n                  selectedItems,\r\n                }),\r\n                )\r\n              }\r\n            }\r\n          }\r\n          onRow={(selectedItem) => ({\r\n            onClick: () => {\r\n              if (this.state.tableType === 'checkbox') {\r\n                let selectedItems = selectTag([...this.state.selectedItems], [selectedItem])\r\n                let selectedRowKeys = selectTag([...this.state.selectedRowKeys], [selectedItem.key])\r\n                this.setState(() => ({\r\n                  selectedRowKeys,\r\n                  selectedItems,\r\n                }))\r\n              }\r\n              if (this.state.tableType === 'radio') {\r\n                let selectedItems = [selectedItem]\r\n                let selectedRowKeys = [selectedItem.key]\r\n                this.setState(() => ({\r\n                  selectedRowKeys,\r\n                  selectedItems,\r\n                }))\r\n              }\r\n            },\r\n            onMouseEnter: () => { },\r\n            onDoubleClick: () => {\r\n              Modal.confirm({\r\n                title: '详细信息',\r\n                content: `\r\n                  ${selectedItem.name}\r\n                  ${roleMap[selectedItem.role]}\r\n                  ${selectedItem.email}\r\n                `,\r\n                onCancel: () => { },\r\n                onOk: () => { },\r\n              })\r\n            },\r\n          }\r\n          )}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// src/components/Header/index.js\r\nimport React from \"react\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport \"./index.scss\";\r\nimport { formateDate } from \"../../utils\"; //导入公共机制\r\n// import axios from \"../axios\"; //引入axios组件\r\n\r\n\r\nclass Header extends React.Component {\r\n    //声明 state变量 在setState之前要声明变量\r\n    state = {\r\n        isLogin: false,\r\n        sysTime: undefined,\r\n        userName: \"用户007\",\r\n    };\r\n\r\n    componentWillMount() {\r\n        /*\r\n            创建定时器,每隔一秒获取时间\r\n            * 获取时间的方法\r\n            */\r\n        setInterval(() => {\r\n            // new Date();\r\n            let sysTime = formateDate(new Date().getTime());\r\n            this.setState({\r\n                sysTime\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <Row className=\"header-top\">\r\n                    <Col span={6} className=\"logo\">\r\n                        <img src=\"/assets/logo-ant.svg\" alt=\"\" />\r\n                        <span>{this.state.sysTime}</span>\r\n                    </Col>\r\n                    <Col span={18} style={{ float: \"right\" }}>\r\n                        {\r\n                            this.state.isLogin ?\r\n                                <span>{this.state.userName}</span>\r\n                                :\r\n                                <span>\r\n\r\n                                    <Button\r\n                                        onClick={\r\n                                            () => window.location.href = window.location.href.split('#')[0] + '#/login'\r\n                                        }\r\n                                    >\r\n                                        登录\r\n                        </Button>\r\n                                    <Button\r\n                                        onClick={\r\n                                            () => window.location.href = window.location.href.split('#')[0] + '#/register'\r\n                                        }\r\n                                    >\r\n                                        注册\r\n                        </Button>\r\n                                </span>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport './index.scss'\r\nexport default class Footer extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"footer\">\r\n                版权所有：©2019\r\n            </div>\r\n        )\r\n    }\r\n}","const menuList = [\r\n    {\r\n        title: '首页',\r\n        key: '/admin/home'\r\n    },\r\n    {\r\n        title: '管理',\r\n        key: '/admin/manager',\r\n        children: [\r\n            {\r\n                title: '用户管理',\r\n                key: '/admin/manager/users',\r\n            },\r\n            {\r\n                title: '订单管理',\r\n                key: '/admin/manager/orders',\r\n            },\r\n            {\r\n                title: '广告管理',\r\n                key: '/admin/manager/ads',\r\n            },\r\n\r\n        ]\r\n    },\r\n    {\r\n        title: '广告区',\r\n        key: '/admin/ads/index',\r\n    },\r\n    {\r\n        title: '统计',\r\n        key: '/admin/charts',\r\n    },\r\n];\r\nexport default menuList;\r\n","import React from \"react\";\r\nimport MenuConfig from \"./../../config/menuConfig\"; //导入menuConfig这个文件\r\nimport { Menu } from \"antd\"; //导入子组件菜单\r\nimport { NavLink } from 'react-router-dom'\r\nimport \"./index.scss\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nexport default class NavLeft extends React.Component {\r\n  componentWillMount() {\r\n    //通过MenuConfig读取文件\r\n    //通过递归(遍历)实现菜单(是一个List)的渲染\r\n    const menuTreeNode = this.renderMenu(MenuConfig);\r\n    this.setState(\r\n      { menuTreeNode }\r\n    )\r\n    //通过setState存入state\r\n  }\r\n\r\n  //菜单渲染\r\n  renderMenu = data => {\r\n    return data.map(item => {\r\n      //如果item有子元素,遍历自己,再次调用,直到子节点加载完毕\r\n      if (item.children) {\r\n        return (\r\n          <SubMenu title={item.title} key={item.key}>\r\n            {this.renderMenu(item.children)}\r\n          </SubMenu>\r\n        );\r\n      }\r\n      return (\r\n        <Menu.Item title={undefined} key={item.key}>\r\n          <NavLink to={item.key}>{item.title}</NavLink>\r\n        </Menu.Item>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // var style = {\r\n    //     backgroundColor:'red'\r\n    // }\r\n    return (\r\n      <Menu mode=\"horizontal\">\r\n        {this.state.menuTreeNode}\r\n      </Menu>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Row } from \"antd\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport NavLeft from \"./components/NavLeft\";\r\nimport './style/common.scss'\r\nimport 'antd/dist/antd.css'\r\nexport default class Admin extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row className=\"container\">\r\n        <Row className=\"main\">\r\n          <Header />\r\n          <Row className=\"nav-left\">\r\n            <NavLeft />\r\n          </Row>\r\n          <Row className=\"content\">\r\n            {this.props.children}\r\n          </Row>\r\n          <Footer />\r\n        </Row>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport '../../style/common.scss'\r\nexport default class Home extends React.Component {\r\n   render(){\r\n       return (\r\n           <div className=\"home-wrap\">\r\n               欢迎\r\n           </div>\r\n       );\r\n   }\r\n}","import React from \"react\";\r\n\r\nexport default class NoMatch extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\", fontSize: \"24\" }}>404 No Found!!!</div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport App from \"./app\"\r\nimport Common from \"./common\"\r\nimport Login from \"./pages/form/login\";\r\nimport Register from \"./pages/form/register\";\r\nimport UserTable from \"./pages/manager/userTable\";\r\nimport OrderTable from \"./pages/manager/orderTable\";\r\nimport adTable from \"./pages/ad/\"\r\nimport Admin from \"./admin\";\r\nimport Home from \"./pages/home\";\r\nimport Nomatch from \"./pages/nomatch\"\r\n\r\nexport default class IRouter extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <App>\r\n          <Switch>\r\n            <Route exact={true} path=\"/\" >\r\n              <Redirect to=\"/admin/home/\" />\r\n            </Route>\r\n            <Route path=\"/admin\"\r\n              render={() =>\r\n                <Admin>\r\n                  <div>\r\n                    <Switch>\r\n                      <Route exact={true} path=\"/admin\" component={Home} />\r\n                      <Route path=\"/admin/home\" component={Home} />\r\n                      <Route path=\"/admin/ads/:page\" component={adTable} />\r\n                      <Route path=\"/admin/manager/users\" component={UserTable} />\r\n                      <Route path=\"/admin/manager/orders\" component={OrderTable} />\r\n                    </Switch>\r\n                  </div>\r\n                </Admin>\r\n              }\r\n            />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/common\"\r\n              render={() =>\r\n                <Common>\r\n                  <div>hello</div>\r\n                </Common>\r\n              }\r\n            />\r\n            <Route component={Nomatch} />\r\n          </Switch>\r\n        </App>\r\n      </HashRouter >\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Router from \"./router\"\r\n\r\nReactDOM.render(\r\n  <Router />,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}